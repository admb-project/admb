      The AUTODIF  distribution  disk  includes  many  of  the  examples
      discussed  in  the  User's  Guide. The examples are contained in a
      self-extracting executable archive named EXAMPLES.EXE The  install
      program  will  extract  this archive into the directory specified.


      Compiling the examples with make
      --------------------------------

      If your are familiar with the make utility, the  simplest  way  to
      compile  the  examples  is to simply type 'make all' at the system
      prompt.  Approximately 2.8Mb of disk space is  required to compile 
      and link all of the examples with 'make all'.


      The following files will be created
      -----------------------------------

      makefile - Make file to compile  and  link  the  examples.  It  is
      necessary  to  modify  the  makefile to match the configuration of
      your computer system. The definitions of the macros INCLUDE,  LIB,
      CFLAGS, CC , and LL will usually require modification. Type  "make
      all" to make all of the examples. To make a single  example,  type
      "make  NAME.exe"  where  NAME is the name of the following example
      executables:  simple.exe,  hemholtz.exe,  minimize.exe,  newt.exe,
      io_examp.exe,   mixture.exe,  normsim.exe,  neur1.exe,  winit.exe,
      robust.exe, robsim.exe, bigmin.exe

      examples.doc - this file.

      hemholtz.cpp - Hemholtz energy example from Chapter 1.
      hem_func.cpp - The procedure  hemholtz_energy  from  the  Hemholtz
      energy example.

      io_examp.cpp - The input and output example from Chapter 6.

      minimize.cpp - The minimization example from Chapter 9.
      userfun.cpp - The objective function for the minimization example.

      mixture.doc - Instructions for the mixture example.
      mixture.cpp  -The main() procedure for the complete example in
      Chapter 13.
      fcomp_m.cpp - Objective function for the mixture example.
      like.cpp - Likelihood function for the mixture example.
      mixture.h - Function prototypes for the mixture example.
      normaliz.cpp - The normaliz_p function for the mixture example.
      nvarcal.cpp  - The  nvarcal function for the mixture example.
      reset.cpp - The  reset function for the mixture example.
      savepar.cpp - The  save_pars function for the mixture example.
      xinit.cpp - The  xinit function for the mixture example.
      mixture.pa1 - Initial parameter estimates for mixture example.
      mixture.pa2 - Initial parameter estimates for mixture example.
      mixture.pa3 - Initial parameter estimates for mixture example.
      mixture.pa4 - Initial parameter estimates for mixture example.
      mixture.par - Initial parameter estimates for mixture example.
      mixture.dat - Input length data for the mixture example.
      normsim.cpp - Simulator to generate  input  length  data  for  the
      mixture example.
      normsim.par - Input data to mixture simulator.

      neural.doc - Instructions for neural net example.
      neur1.cpp - Source code for neural net training procedure.
      winit.cpp  -  Generates inital estimates for weights and biases to
      begin neural net training.
      winit.cpp  -  Project file for initialization procedure.
      struct.nrl - Input file defining neural net structure.
      weights.par - Weights and biases.
      weights.pa1 - Weights and biases of trained neural net.
      learning.smp - Learning set for spiral example.

      newt.cpp - Root finding example from Chapter 12 (Newton-Raphson).

      robust.doc - Instructions for the robust regression example.
      robust.cpp - Source code for robust regression example.
      fcomp_r.cpp - Objective function for robust regression example.
      rob_reg.cpp - Source code for the robust_regression(...) procedure 
      from the AUTODIF libraries.
      robsim.cpp - Simulator to generate data for the robust  regression
      robust.dat - Output from simulator and input to robust.exe
      robsim.par - Input to simulator.

      simple.cpp - Simple function minimization example from Chapter 1.
      fcomp_s.cpp  - Objective function for simple function minimization
      example from Chapter 1.

      bigmin.cpp - Example minimization of a funtion of a large number of
      parameters. Uses the conjugate gradient method to minimize a funtion
      of 10,000 variables. Must be compiled and linked using the -mx memory 
      model.
