df1b2-separable/adpool.cpp:      cerr << "Error in adpool structure" << endl;
df1b2-separable/adpool.cpp:      cerr << "Error in adpool adresses" << endl;
df1b2-separable/adpool.cpp:      cerr << "both allocated and unallocated memory at entry " 
df1b2-separable/adpool.cpp:    cerr << "Error in adpool structure" << endl;
df1b2-separable/adpool.cpp:      cerr << "Error in adpool structure" << endl;
df1b2-separable/adpool.cpp:    cerr << "bad pool object" << endl;
df1b2-separable/adpool.cpp:    cerr << "trying to add wrong sized memory block to adpool" << endl;
df1b2-separable/adpool.cpp:      cerr << "trying to add wrong sized memory block to adpool" << endl;
df1b2-separable/adpool.cpp:    cerr << "You can not change the allocation size in mid stream" << endl;
df1b2-separable/adpool.cpp:    cerr << " current size is " << size << " trying to change to " << sz
df1b2-separable/adpool.cpp:    cerr << "error in adpool object " // << poolname
df1b2-separable/adpool.cpp:    cerr << "Error in check memory need to make pvalues bigger than "
df1b2-separable/adpool.cpp:    cerr << "error in adpool object " // << poolname
df1b2-separable/df1b2bet.cpp:  if (x < 0.0 || x > 1.0) cerr << "Bad x in routine betai" << endl;
df1b2-separable/df1b2bet.cpp:  if (m > MAXIT) cerr << "a or b too big, or MAXIT too small in betacf"
df1b2-separable/df1b2chkder.cpp:  cerr << "need to define this" << endl;
df1b2-separable/df1b2f10.cpp:    cerr << "need to modify test_smartlist class for multibyte char" << endl;
df1b2-separable/df1b2f10.cpp:    cerr << "Allocation error in df1b2_gradlist" << endl;
df1b2-separable/df1b2f10.cpp:    cerr << "Error trying to open file " << filename 
df1b2-separable/df1b2f10.cpp:    cerr << "Error writing to file " << filename << endl;
df1b2-separable/df1b2f10.cpp:      cerr << "Error -- record size in file seems to be larger than"
df1b2-separable/df1b2f10.cpp:      cerr << "Error writing to file " << filename << endl;
df1b2-separable/df1b2f10.cpp:      cerr << "Error -- record size in file seems to be larger than"
df1b2-separable/df1b2f10.cpp:      cerr << "Error reading -- should be " << nbytes << " got " << nr << endl;
df1b2-separable/df1b2f10.cpp:    cerr << " Trying to write outside list buffer" << endl;
df1b2-separable/df1b2f10.cpp:    cerr << " Trying to write outside list buffer" << endl;
df1b2-separable/df1b2f10.cpp:      cerr << " Sanity error in test_smartlist::operator -= (int)" << endl;
df1b2-separable/df1b2f11.cpp:    cerr << "illegal value for df1b2variable::pass = " 
df1b2-separable/df1b2f12.cpp:    cerr << "illegal value for df1b2variable::pass = " 
df1b2-separable/df1b2f12.cpp:          cerr << "Invalid index value for dercheck_index was " 
df1b2-separable/df1b2f12.cpp:          cerr << "Invalid index value for dercheck_index was " 
df1b2-separable/df1b2f12.cpp:          cerr << "Invalid index value for dercheck_index was " 
df1b2-separable/df1b2f13.cpp:    cerr << "Error trying to open file " << filename 
df1b2-separable/df1b2f13.cpp:    cerr << "Error writing to file " << filename << endl;
df1b2-separable/df1b2f13.cpp:      cerr << "Error -- record size in file seems to be larger than"
df1b2-separable/df1b2f13.cpp:      cerr << "Error writing to file " << filename << endl;
df1b2-separable/df1b2f13.cpp:    cerr << "n bytes > bufsize in "
df1b2-separable/df1b2f13.cpp:      cerr << "Error writing to file " << filename << endl;
df1b2-separable/df1b2f13.cpp:      cerr << "Error -- record size in file seems to be larger than"
df1b2-separable/df1b2f13.cpp:      cerr << "Error reading -- should be " << nbytes << " got " << nr << endl;
df1b2-separable/df1b2f13.cpp:    cerr << " Trying to write outside list buffer" << endl;
df1b2-separable/df1b2f13.cpp:	    cerr << " Trying to write outside list buffer" << endl;
df1b2-separable/df1b2f13.cpp:	      cerr << " Sanity error in fixed_smartlist::operator -= (int)" << endl;
df1b2-separable/df1b2f13.cpp:	      cerr << " Sanity error in fixed_smartlist::operator -= (int)" << endl;
df1b2-separable/df1b2f14.cpp:    cerr << "Error trying to open file " << filename 
df1b2-separable/df1b2f14.cpp:    cerr << "Error writing to file " << filename << endl;
df1b2-separable/df1b2f14.cpp:      cerr << "Error -- record size in file seems to be larger than"
df1b2-separable/df1b2f14.cpp:      cerr << "Error writing to file " << filename << endl;
df1b2-separable/df1b2f14.cpp:      cerr << "Error writing to file " << filename << endl;
df1b2-separable/df1b2f14.cpp:      cerr << "Error -- record size in file seems to be larger than"
df1b2-separable/df1b2f14.cpp:      cerr << "Error reading -- should be " << nbytes << " got " << nr << endl;
df1b2-separable/df1b2f14.cpp:    cerr << " Trying to write outside list buffer" << endl;
df1b2-separable/df1b2f14.cpp:    cerr << " Trying to write outside list buffer" << endl;
df1b2-separable/df1b2f14.cpp:      cerr << " Sanity error in fixed_smartlist2::operator -= (int)" << endl;
df1b2-separable/df1b2f14.cpp:      cerr << " Sanity error in fixed_smartlist2::operator -= (int)" << endl;
df1b2-separable/df1b2f15.cpp:    cerr << " This version of ADMB only supports 1000 initial df1b2parameter"
df1b2-separable/df1b2f21.cpp:    cerr << "illegal value for df1b2variable::pass = " 
df1b2-separable/df1b2f22.cpp:    cerr << "illegal value for df1b2variable::pass = " 
df1b2-separable/df1b2f22.cpp:          cerr << "Invalid index value for dercheck_index was " 
df1b2-separable/df1b2f22.cpp:          cerr << "Invalid index value for dercheck_index was " 
df1b2-separable/df1b2f22.cpp:          cerr << "Invalid index value for dercheck_index was " 
df1b2-separable/df1b2f23.cpp:    cerr << "illegal value for df1b2variable::pass = " 
df1b2-separable/df1b2f23.cpp:          cerr << "Invalid index value for dercheck_index was " 
df1b2-separable/df1b2f23.cpp:          cerr << "Invalid index value for dercheck_index was " 
df1b2-separable/df1b2f23.cpp:          cerr << "Invalid index value for dercheck_index was " 
df1b2-separable/df1b2f27.cpp:    cerr << "illegal value for df1b2variable::pass = " 
df1b2-separable/df1b2fn2.cpp:      cerr << "Need to increase the maximum number of init_df1b2variables"
df1b2-separable/df1b2fn2.cpp:      cerr << "Maximum number of independent variables exceeded"
df1b2-separable/df1b2fn2.cpp:      cerr << "current max is " << df1b2variable::nvar << endl;
df1b2-separable/df1b2fn2.cpp:      cerr << "incompatible shape in "
df1b2-separable/df1b2fn2.cpp:        cerr << "Error allocating memory for init_df1b2variable::list"
df1b2-separable/df1b2fn2.cpp:      cerr << "Error allocating memory for init_df1b2variable"
df1b2-separable/df1b2fn2.cpp:    cerr << "need to modify smartlist class for multibyte char" << endl;
df1b2-separable/df1b2fn2.cpp:    cerr << "Error trying to open file " << filename 
df1b2-separable/df1b2fn2.cpp:    cerr << "need to initialize size in class ad_dstar" << endl;
df1b2-separable/df1b2fn2.cpp:    cerr << "Index too low in init_df1b2variable& operator () (int i);"
df1b2-separable/df1b2fn2.cpp:    cerr << "Index too high in init_df1b2variable& operator () (int i);"
df1b2-separable/df1b2fn2.cpp:    cerr << "Index too low in init_df1b2variable& operator () (int i);"
df1b2-separable/df1b2fn2.cpp:    cerr << "Index too high in init_df1b2variable& operator () (int i);"
df1b2-separable/df1b2fn2.cpp:      cerr << "Usage " << s << " option needs integer  -- ignored" << endl;
df1b2-separable/df1b2fn3.cpp:    cerr << "illegal value for df1b2variable::pass = " 
df1b2-separable/df1b2fn4.cpp:    cerr << "illegal value for df1b2variable::pass = " 
df1b2-separable/df1b2fn5.cpp:    cerr << "illegal value for df1b2variable::pass = " 
df1b2-separable/df1b2fn5.cpp:    cerr << "Error in string identifer in list value should be " << ids
df1b2-separable/df1b2fn7.cpp:    cerr << "illegal value for df1b2variable::pass = " 
df1b2-separable/df1b2fn8.cpp:    cerr << "illegal value for df1b2variable::pass = " 
df1b2-separable/df1b2fnl.cpp:    cerr << "can only delete last member" << endl;
df1b2-separable/df1b2fnl.cpp:          cerr << "Memory allocation error" << endl;
df1b2-separable/df1b2fnl.cpp:          //cerr << "Need to increase adpool_vectorsize" << endl;
df1b2-separable/df1b2fnl.cpp:      cerr << "Memory allocation error" << endl;
df1b2-separable/df1b2fnl.cpp:    cerr << "memory allocation error" << endl;
df1b2-separable/df1b2fnl.cpp:    cerr << "memory allocation error" << endl;
df1b2-separable/df1b2fnl.cpp:  cerr << "Haven't defined htis yet" << endl;
df1b2-separable/df1b2fnl.cpp:        cerr << "This can't happen" << endl;
df1b2-separable/df1b2fnl.cpp:        cerr << "the bounded matrix case in " 
df1b2-separable/df1b2fnl.cpp:        cerr << "the bounded matrix case in " 
df1b2-separable/df1b2fnl.cpp:        cerr << "the bounded matrix case in " 
df1b2-separable/df1b2fnl.cpp:        cerr << "the bounded matrix case in " 
df1b2-separable/df1b2fnl.h:    cerr << "Cannot assign to funnel_dependent_df1b2variable" << endl;
df1b2-separable/df1b2fun.cpp:    cerr << "overflow in save_adpool_pointer" << endl;
df1b2-separable/df1b2fun.cpp:    cerr << "underflow in save_adpool_pointer" << endl;
df1b2-separable/df1b2fun.cpp:    cerr << "error allocating memory for " 
df1b2-separable/df1b2fun.cpp:      cerr << "maximum numver of iitial_df1b2params is 1000 "
df1b2-separable/df1b2fun.cpp:     cerr << "illega value for df1b2variable::passnumber "
df1b2-separable/df1b2fun.h:    cerr << "cannot use this type here" << endl; ad_exit(1); 
df1b2-separable/df1b2fun.h:    cerr << AD_allocation_error_message << "classname" << endl; \
df1b2-separable/df1b2gh.cpp:    cerr << "can't do importance sampling with bounded random effects"
df1b2-separable/df1b2gh.cpp:         cerr << "error not implemented" << endl;
df1b2-separable/df1b2gh.cpp:       cerr << "error in interface" << endl;
df1b2-separable/df1b2ghmult.cpp:    cerr << "can't do importance sampling with bounded random effects"
df1b2-separable/df1b2ghmult.cpp:       cerr << "error in interface" << endl;
df1b2-separable/df1b2glo.cpp:   cerr << "need to increase adpool_counter" << endl;
df1b2-separable/df1b2im2.cpp:     cerr << "error in choleski decomp" << endl;
df1b2-separable/df1b2im3.cpp:    cerr << "can't do importance sampling with bounded random effects"
df1b2-separable/df1b2im3.cpp:       cerr << "error in interface" << endl;
df1b2-separable/df1b2im3f.cpp:    cerr << "can't do importance sampling with bounded random effects"
df1b2-separable/df1b2im3f.cpp:         cerr << "error in interface" << endl;
df1b2-separable/df1b2im4.cpp:    cerr << "can't do importance sampling with bounded random effects"
df1b2-separable/df1b2im4.cpp:       cerr << "error in interface" << endl;
df1b2-separable/df1b2im5.cpp:    cerr << "can't do importance sampling with bounded random effects"
df1b2-separable/df1b2im5.cpp:       cerr << "error in interface" << endl;
df1b2-separable/df1b2imp.cpp:    cerr << "can't do importance sampling with bounded random effects"
df1b2-separable/df1b2impf.cpp:    cerr << "can't do importance sampling with bounded random effects"
df1b2-separable/df1b2invcumdbeta.cpp:    if (value(x) < 0.0 || value(x) > 1.0) cerr << "Bad x in routine betai" << endl;
df1b2-separable/df1b2invcumdbeta.cpp:    if (x < 0.0 || x > 1.0) cerr << "Bad x in routine betai" << endl;
df1b2-separable/df1b2invcumdbeta.cpp:      cerr << "mum interations exceeded " << endl;
df1b2-separable/df1b2invcumdbeta.cpp:      cerr << "mum interations exceeded " << endl;
df1b2-separable/df1b2lap.cpp:      cerr << "Usage -ndi option needs integer  -- set to default 20000" << endl;
df1b2-separable/df1b2lap.cpp:        cerr << "Usage -ndi option needs positive integer  -- set to defalt 20000" << endl;
df1b2-separable/df1b2lap.cpp:      cerr << "Usage -ilmn option needs integer  -- set to default 10" << endl;
df1b2-separable/df1b2lap.cpp:        cerr << "Usage -ilmn option needs positive integer  -- set to defalt 10" << endl;
df1b2-separable/df1b2lap.cpp:      cerr << "Usage -ndb option needs non-negative integer  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:        cerr << "Usage -ndb option needs positive integer  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:      cerr << "Usage -isf option needs non-negative integer  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:        cerr << "Usage -isf option needs positive integer  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:    cerr << " Error -- the number of der blocks (-ndb) can not be larger than "
df1b2-separable/df1b2lap.cpp:      cerr << " minder or maxder value out of bounds in"
df1b2-separable/df1b2lap.cpp:      cerr << "Usage -nr option needs non-negative integer  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:        cerr << "Usage -nr option needs non-negative integer  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:      cerr << "Usage -nrcrit option needs number  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:        cerr << "Usage -nrcrit option needs positive number  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:      cerr << "Usage -gh option needs positive integer  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:        cerr << "Usage -gh option needs positive integer  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:      cerr << "Usage -icrit option needs number  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:        cerr << "Usage -icrit option needs positive number  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:      cerr << "Usage -iprint option needs non-negative integer  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:        cerr << "Usage -iip option needs non-negative integer  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:      cerr << "Usage -maxfn option needs non-negative integer  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:        cerr << "Usage -iip option needs non-negative integer  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:      cerr << "Usage -is option needs positive integer  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:        cerr << "Usage -is option needs non-negative integer  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:          cerr << "Usage -is option needs non-negative integer  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:      cerr << "Usage -isb option needs positive integer  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:        cerr << "Usage -isb option needs non-negative integer  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:          cerr << "Usage -isb option needs non-negative integer  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:        cerr << "Usage -epsmult option needs number  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:          cerr << "Usage -epsmult option needs positive number between 0 and 1 "
df1b2-separable/df1b2lap.cpp:      cerr << "Usage -ht option needs positive integer  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:        cerr << "Usage -ht option needs non-negative integer  -- ignored" << endl;
df1b2-separable/df1b2lap.cpp:          cerr << "Usage -ht option needs non-negative bandwidth"
df1b2-separable/df1b2lap.cpp:      cerr << " minder or maxder value out of bounds in"
df1b2-separable/df1b2lap.cpp:      cerr << "illegal value for mode " << endl;
df1b2-separable/df1b2lap.cpp:        cerr << "illegal value for hesstype " << endl;
df1b2-separable/df1b2lap.cpp:         cerr << "need to fix this" << endl;
df1b2-separable/df1b2lap.cpp:       cerr << "checksum too big " << checksum << endl;
df1b2-separable/df1b2lap.cpp:      cerr << " At present for the adaptive gauss_hermite must have the same"
df1b2-separable/df1b2lap.cpp:      cerr << "At present gauss-hermite is only implemented for"
df1b2-separable/df1b2lap.cpp:     cerr << "illegal value in " <<
df1b2-separable/df1b2lap.cpp:    cerr << "warning not dealitn with prt3" << endl;
df1b2-separable/df1b2lme.cpp:    cerr << "error -- Has not been impelmented" << endl;
df1b2-separable/df1b2lme.cpp:        cerr << "error allocating memory" << endl;
df1b2-separable/df1b2lme.cpp:    cerr << "Illegal value for hesstype here" << endl;
df1b2-separable/df1b2lme.cpp:      cerr << "Illegal value for hesstype here" << endl;
df1b2-separable/df1b2lme.cpp:      cerr << "error -- Has not been impelmented" << endl;
df1b2-separable/df1b2lme.cpp:      cerr << "Illegal value for hesstype here" << endl;
df1b2-separable/df1b2lme.cpp:    cerr << "error -- Has not been impelmented" << endl;
df1b2-separable/df1b2lme.cpp:    cerr << "Illegal value for hesstype here" << endl;
df1b2-separable/df1b2lme.cpp:    cerr << "sgn sucks" << endl;
df1b2-separable/df1b2lmn2.cpp:      cerr << "Usage -fntrap option needs two non-negative integers  -- ignored" << endl;
df1b2-separable/df1b2lmn2.cpp:      cerr << "Usage -iprint option needs integer  -- ignored" << endl;
df1b2-separable/df1b2lmn2.cpp:      cerr << "Usage -iprint option needs integer  -- ignored" << endl;
df1b2-separable/df1b2lmn2.cpp:      cerr << "Usage -dfn option needs number  -- ignored" << endl;
df1b2-separable/df1b2lmn2.cpp:        cerr << "Usage -dfn option needs positive number  -- ignored" << endl;
df1b2-separable/df1b2lmn2.cpp:      cerr << "failed sanity check in "
df1b2-separable/df1b2lmn2.cpp:      cerr << "Error allocating memory for lapprox" << endl;
df1b2-separable/df1b2lmn2.cpp:        cerr << "this can't happen" << endl;
df1b2-separable/df1b2lp1.cpp:        cerr << "Can't make a positive definite Hessian" << endl;
df1b2-separable/df1b2lp1.cpp:           cerr << "Need to increase adpool_vectorsize" << endl;
df1b2-separable/df1b2lp1.cpp:          cerr << "Memory allocation error" << endl;
df1b2-separable/df1b2lp1.cpp:      cerr << "Memory allocation error" << endl;
df1b2-separable/df1b2lp10.cpp:                cerr << "Error allocating banded_symmetric_dmatrix" << endl;
df1b2-separable/df1b2lp10.cpp:              cerr << "Error allocating banded_symmetric_dmatrix" << endl;
df1b2-separable/df1b2lp10.cpp:                cerr << "Error allocating banded_symmetric_dmatrix" << endl;
df1b2-separable/df1b2lp10.cpp:              cerr << "Error allocating banded_symmetric_dmatrix" << endl;
df1b2-separable/df1b2lp10.cpp:          cerr << "error_allocating d3_array" << endl;
df1b2-separable/df1b2lp10.cpp:          cerr << "error_allocating imatrix" << endl;
df1b2-separable/df1b2lp10.cpp:          cerr << "error_allocating imatrix" << endl;
df1b2-separable/df1b2lp10.cpp:          cerr << "error_allocating d3_array" << endl;
df1b2-separable/df1b2lp10.cpp:          cerr << "error_allocating d3_array" << endl;
df1b2-separable/df1b2lp10.cpp:          cerr << "error_allocating d3_array" << endl;
df1b2-separable/df1b2lp11.cpp:        cerr << "Can't get positive definite Hessian in inner optimization"
df1b2-separable/df1b2lp6.cpp:      cerr << "Illegal value for hesstype here" << endl;
df1b2-separable/df1b2lp6.cpp:            cerr << "high precision Newton Raphson not implemented" << endl;
df1b2-separable/df1b2lp6.cpp:            cerr << "matrix not pos definite in sparse choleski"  << endl;
df1b2-separable/df1b2lp6.cpp:        cerr << "Block diagonal Hessian is unallocated" << endl;
df1b2-separable/df1b2lp6.cpp:            cerr << "Error in hesstype" << endl;
df1b2-separable/df1b2lp6.cpp:            //cerr << "Error not implemented yet" << endl;
df1b2-separable/df1b2lp6.cpp:            cerr << "Error in hesstype" << endl;
df1b2-separable/df1b2lp6.cpp:        cerr << "Illegal value for hesstype" << endl;
df1b2-separable/df1b2lp6.cpp:            cerr << "Error allocating memory for Hesssian part" << endl;
df1b2-separable/df1b2lp6.cpp:      cerr << "illegal value for hesstype" << endl;
df1b2-separable/df1b2lp6.cpp:    cerr << "can't improve function value in trust region calculations"
df1b2-separable/df1b2lp7.cpp:       cerr << "this can't happen" << endl;
df1b2-separable/df1b2lp8.cpp:      cerr << "At present can only use antithetical rv's when "
df1b2-separable/df1b2lp8.cpp:    cerr << "This can't happen" << endl;
df1b2-separable/df1b2lp8.cpp:                cerr << "Error allocating banded_symmetric_dmatrix" << endl;
df1b2-separable/df1b2lp8.cpp:              cerr << "Error allocating banded_symmetric_dmatrix" << endl;
df1b2-separable/df1b2lp8.cpp:                cerr << "Error allocating banded_symmetric_dmatrix" << endl;
df1b2-separable/df1b2lp8.cpp:              cerr << "Error allocating banded_symmetric_dmatrix" << endl;
df1b2-separable/df1b2lp8.cpp:          cerr << "error_allocating d3_array" << endl;
df1b2-separable/df1b2lp8.cpp:          cerr << "error_allocating imatrix" << endl;
df1b2-separable/df1b2lp8.cpp:          cerr << "error_allocating imatrix" << endl;
df1b2-separable/df1b2lp8.cpp:          cerr << "error_allocating d3_array" << endl;
df1b2-separable/df1b2lp8.cpp:          cerr << "error_allocating d3_array" << endl;
df1b2-separable/df1b2lp8.cpp:          cerr << "error_allocating d3_array" << endl;
df1b2-separable/df1b2lp8.cpp:    cerr << "error_allocating d3_array" << endl;
df1b2-separable/df1b2lp8.cpp:    cerr << "error_allocating imatrix" << endl;
df1b2-separable/df1b2lp8.cpp:    cerr << "error_allocating imatrix" << endl;
df1b2-separable/df1b2lp8.cpp:    cerr << "error_allocating d3_array" << endl;
df1b2-separable/df1b2lp8.cpp:    cerr << "error_allocating d3_array" << endl;
df1b2-separable/df1b2lp8.cpp:    cerr << "error_allocating d3_array" << endl;
df1b2-separable/df1b2lp8.cpp:      cerr << "error allocating ivector" << endl;
df1b2-separable/df1b2lp8.cpp:      cerr << "this can't happen" << endl;
df1b2-separable/df1b2lp8.cpp:      cerr << "error allocating ivector" << endl;
df1b2-separable/df1b2lp8.cpp:      cerr << "error allocating ivector" << endl;
df1b2-separable/df1b2lp8.cpp:      cerr << "this can't happen" << endl;
df1b2-separable/df1b2lp8.cpp:      cerr << "error allocating ivector" << endl;
df1b2-separable/df1b2lp8.cpp:       cerr << "Need to increase the maximum number of separable calls allowed"
df1b2-separable/df1b2lp8.cpp:       cerr << "Use the -ndi N command line option" << endl;
df1b2-separable/df1b2mat.cpp:    cerr << "minimum row and column inidices must equal 1 in "
df1b2-separable/df1b2mat.cpp:    cerr << "Error in df1b2matrix choleski_decomp(const df1b2matrix& MM)"
df1b2-separable/df1b2mat.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
df1b2-separable/df1b2mat.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
df1b2-separable/df1b2min.cpp:    cerr << "illegal value for df1b2variable::pass = " 
df1b2-separable/df1b2negb.cpp:      cerr << "tau <=1 in log_negbinomial_density " << endl;
df1b2-separable/df1b2negb.cpp:      cerr << "tau <=1 in log_negbinomial_density " << endl;
df1b2-separable/df1b2nv1.cpp:     cerr << "Index out of randge in "
df1b2-separable/df1b2nv1.cpp:     cerr << "Index out of randge in "
df1b2-separable/df1b2nv1.cpp:        cerr << " error trying to allocate memory in "
df1b2-separable/df1b2nv1.cpp:    cerr << "non matching vector bounds in" 
df1b2-separable/df1b2nv1.cpp:    cerr << "non matching vector bounds in" 
df1b2-separable/df1b2nv1.cpp:     cerr << "Index out of randge in "
df1b2-separable/df1b2nv1.cpp:     cerr << "Index out of randge in "
df1b2-separable/df1b2nv1.cpp:        cerr << " error trying to allocate memory in "
df1b2-separable/df1b2prb.cpp:     cerr << "error in byte calculation in "
df1b2-separable/df1b2prb.cpp:    cerr << "illegal value for df1b2variable::pass = " 
df1b2-separable/df1b2prc.cpp:     cerr << "error in byte calculation in "
df1b2-separable/df1b2prc.cpp:    cerr << "illegal value for df1b2variable::pass = " 
df1b2-separable/df1b2prd.cpp:    cerr << "illegal value for df1b2variable::pass = " 
df1b2-separable/df1b2ptr.cpp:      cerr << "error allocating memory for"
df1b2-separable/df1b2ptr.cpp:      cerr << "error allocating memory for"
df1b2-separable/df1b2qnm.cpp:      cerr << "Usage -fntrap option needs two non-negative integers  -- ignored" << endl;
df1b2-separable/df1b2qnm.cpp:      cerr << "Usage -iprint option needs integer  -- ignored" << endl;
df1b2-separable/df1b2qnm.cpp:      cerr << "Usage -iprint option needs integer  -- ignored" << endl;
df1b2-separable/df1b2qnm.cpp:      cerr << "Usage -dfn option needs number  -- ignored" << endl;
df1b2-separable/df1b2qnm.cpp:        cerr << "Usage -dfn option needs positive number  -- ignored" << endl;
df1b2-separable/df1b2qnm.cpp:      cerr << "failed sanity check in "
df1b2-separable/df1b2qnm.cpp:      cerr << "Error allocating memory for lapprox" << endl;
df1b2-separable/df1b2qnm.cpp:          cerr << "This can't happen" << endl;
df1b2-separable/df1b2qnm.cpp:        cerr << "this can't happen" << endl;
df1b2-separable/df1b2sum.cpp:    cerr << "illegal value for df1b2variable::pass = " 
df1b2-separable/df1b2sumc.cpp:    cerr << "illegal value for df1b2variable::pass = " 
df1b2-separable/df1fun.cpp:      cerr << "error allocating memory in df1_one_vector" << endl;
df1b2-separable/df1fun.cpp:      cerr << "Error trying to allocate memory for df1_one_vector" 
df1b2-separable/df1fun.cpp:      cerr << "error allocating memory in df1_one_matrix" << endl;
df1b2-separable/df1fun.cpp:      cerr << "Error trying to allocate memory for df1_one_vector" 
df1b2-separable/df1fun.cpp:      cerr << "can opnly have one of these" << endl;
df1b2-separable/df1fun.cpp:      cerr << "can opnly have one of these" << endl;
df1b2-separable/df1fun.cpp:    cerr << "minimum row and column inidices must equal 1 in "
df1b2-separable/df1fun.cpp:    cerr << "Error in df1b2matrix choleski_decomp(const df1_one_matrix& MM)"
df1b2-separable/df1fun.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
df1b2-separable/df1fun.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
df1b2-separable/df1fun.cpp:    cerr << "unequal shape in "
df1b2-separable/df1fun.cpp:    cerr << "unequal shape in "
df1b2-separable/df32fun.cpp:      cerr << "error allocating memory in df3_two_vector" << endl;
df1b2-separable/df32fun.cpp:      cerr << "Error trying to allocate memory for df3_two_vector" 
df1b2-separable/df32fun.cpp:      cerr << "error allocating memory in df3_two_matrix" << endl;
df1b2-separable/df32fun.cpp:      cerr << "Error trying to allocate memory for df3_two_vector" 
df1b2-separable/df32fun.cpp:      cerr << " can only have 1 independent_variable in a reverse funnel"
df1b2-separable/df32fun.cpp:      cerr << "can only have 2 independent_variables in df3_two_variable"
df1b2-separable/df32fun.cpp:      cerr << "illegal num_ind_var value of " << num_ind_var 
df1b2-separable/df32fun.cpp:    cerr << "minimum row and column inidices must equal 1 in "
df1b2-separable/df32fun.cpp:    cerr << "Error in df1b2matrix choleski_decomp(const df3_two_matrix& MM)"
df1b2-separable/df32fun.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
df1b2-separable/df32fun.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
df1b2-separable/df32fun.cpp:    cerr << "unequal shape in "
df1b2-separable/df32fun.cpp:    cerr << "unequal shape in "
df1b2-separable/df32fun1.cpp:    cerr << "illegal value for df1b2variable::pass = " 
df1b2-separable/df32fun1.cpp:          cerr << "Invalid index value for dercheck_index was " 
df1b2-separable/df32fun1.cpp:          cerr << "Invalid index value for dercheck_index was " 
df1b2-separable/df32fun1.cpp:          cerr << "Invalid index value for dercheck_index was " 
df1b2-separable/df33fun.cpp:      cerr << "error allocating memory in df3_three_vector" << endl;
df1b2-separable/df33fun.cpp:      cerr << "Error trying to allocate memory for df3_three_vector" 
df1b2-separable/df33fun.cpp:      cerr << "error allocating memory in df3_three_matrix" << endl;
df1b2-separable/df33fun.cpp:      cerr << "Error trying to allocate memory for df3_three_vector" 
df1b2-separable/df33fun.cpp:      cerr << "This can't happen" << endl;
df1b2-separable/df33fun.cpp:      cerr << "can only have 3 independent_variables in df3_three_variable"
df1b2-separable/df33fun.cpp:      cerr << "illegal num_ind_var value of " << num_ind_var 
df1b2-separable/df33fun.cpp:      cerr << "can only have 3 independent_variables in df3_three_variable"
df1b2-separable/df33fun.cpp:      cerr << "illegal num_ind_var value of " << num_ind_var 
df1b2-separable/df33fun.cpp:    cerr << "minimum row and column inidices must equal 1 in "
df1b2-separable/df33fun.cpp:    cerr << "Error in df1b2matrix choleski_decomp(const df3_three_matrix& MM)"
df1b2-separable/df33fun.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
df1b2-separable/df33fun.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
df1b2-separable/df33fun1.cpp:    cerr << "illegal value for df1b2variable::pass = " 
df1b2-separable/df33fun1.cpp:          cerr << "Invalid index value for dercheck_index was " 
df1b2-separable/df33fun1.cpp:          cerr << "Invalid index value for dercheck_index was " 
df1b2-separable/df33fun1.cpp:          cerr << "Invalid index value for dercheck_index was " 
df1b2-separable/df3fun.cpp:      cerr << "error allocating memory in df3_one_vector" << endl;
df1b2-separable/df3fun.cpp:      cerr << "Error trying to allocate memory for df3_one_vector" 
df1b2-separable/df3fun.cpp:      cerr << "error allocating memory in df3_one_matrix" << endl;
df1b2-separable/df3fun.cpp:      cerr << "Error trying to allocate memory for df3_one_vector" 
df1b2-separable/df3fun.cpp:      cerr << "can only have 1 independent_variables in df3_one_variable"
df1b2-separable/df3fun.cpp:    cerr << "minimum row and column inidices must equal 1 in "
df1b2-separable/df3fun.cpp:    cerr << "Error in df1b2matrix choleski_decomp(const df3_one_matrix& MM)"
df1b2-separable/df3fun.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
df1b2-separable/df3fun.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
df1b2-separable/df3fun.cpp:    cerr << "unequal shape in "
df1b2-separable/df3fun.cpp:    cerr << "unequal shape in "
df1b2-separable/df3gammp.cpp:    cerr << "tau <=1 in log_negbinomial_density " << endl;
df1b2-separable/df3gammp.cpp:    cerr << "a too large, ITMAX too small in gcf" << endl;
df1b2-separable/df3gammp.cpp:      cerr << "x less than 0 in routine gser" << endl;
df1b2-separable/df3gammp.cpp:    cerr << "a too large, ITMAX too small in routine gser" << endl;
df1b2-separable/df3gammp.cpp:    cerr << "Invalid arguments in routine gammp" << endl;
df1b2-separable/dflocmin.cpp:    cerr << "Error cannot find better value to try and get a"
df1b2-separable/f1b23d1.cpp:      cerr << " Error allocating memory in df1b23array contructor\n";
df1b2-separable/f1b23d1.cpp:    cerr << " Error allocating memory in df1b23array contructor\n";
df1b2-separable/f1b23d1.cpp:      cerr << " Error allocating memory in df1b23array contructor\n";
df1b2-separable/f1b23d1.cpp:      cerr << " Error allocating memory in df1b23array contructor\n";
df1b2-separable/f1b23d1.cpp:    cerr << " Error allocating memory in df1b23array contructor\n";
df1b2-separable/f1b23d1.cpp:      cerr << " Error allocating memory in df1b23array contructor\n";
df1b2-separable/f1b23d1.cpp:    cerr << " Error allocating memory in df1b23array contructor\n";
df1b2-separable/f1b23d1.cpp:      cerr << " Error allocating memory in df1b23array contructor\n";
df1b2-separable/f1b23d1.cpp:    cerr << " Error allocating memory in df1b23array contructor\n";
df1b2-separable/f1b23d1.cpp:    cerr << "Index out of bounds in access operator" << endl;
df1b2-separable/f1b23d1.cpp:    cerr << "Index out of bounds in access operator" << endl;
df1b2-separable/f1b23d1.cpp:    cerr << "Index out of bounds in access operator" << endl;
df1b2-separable/f1b23d1.cpp:    cerr << "Index out of bounds in access operator" << endl;
df1b2-separable/f1b2fnl2.cpp:       cerr << "Illegal value for hesstype" << endl;
df1b2-separable/f1b2fnl2.cpp:       cerr << "Illegal value for hesstype" << endl;
df1b2-separable/f1b2fnl2.cpp:       cerr << "Illegal value for hesstype" << endl;
df1b2-separable/f1b2fnl2.cpp:    cerr << "illegal value for block_diagonal_flag = " 
df1b2-separable/f1b2fnl2.cpp:    cerr << "this can't happen" << endl;
df1b2-separable/f1b2lndt.cpp:    cerr << "not implemented" << endl;
df1b2-separable/f1b2lndt.cpp:      cerr << "not implemented" << endl;
df1b2-separable/f1b2lndt.cpp:    cerr << " Inconsistent sizes in "
df1b2-separable/f1b2lndt.cpp:    cerr << " Inconsistent sizes in "
df1b2-separable/f1b2lndt.cpp:    cerr << "not implemented" << endl;
df1b2-separable/f1b2lndt.cpp:    cerr << "not implemented" << endl;
df1b2-separable/f1b2lndt.cpp:    cerr << "not implemented" << endl;
df1b2-separable/f1b2lndt.cpp:    cerr << "not implemented" << endl;
df1b2-separable/f1b2loc2.cpp: //     cerr << "can only delete last member" << endl;
df1b2-separable/f1b2loc3.cpp:      cerr << "Error allocating memory for local df1b2gradlist" << endl;
df1b2-separable/f1b2loc3.cpp:           cerr << "Need to increase adpool_vectorsize" << endl;
df1b2-separable/f1b2loc3.cpp:          cerr << "Memory allocation error" << endl;
df1b2-separable/f1b2loc3.cpp:      cerr << "Memory allocation error" << endl;
df1b2-separable/f1b2loc3.cpp:    cerr << "this can't happen" << endl;
df1b2-separable/f1b2locl.cpp:    cerr << "this can't happen" << endl;
df1b2-separable/f1b2locl.cpp: //     cerr << "can only delete last member" << endl;
df1b2-separable/f1b2locl.cpp:        cerr << "Error allocating memory for local df1b2gradlist" << endl;
df1b2-separable/f1b2locl.cpp:             cerr << "Need to increase adpool_vectorsize" << endl;
df1b2-separable/f1b2locl.cpp:            cerr << "Memory allocation error" << endl;
df1b2-separable/f1b2locl.cpp:        cerr << "Memory allocation error" << endl;
df1b2-separable/f1b2locl.cpp:        cerr << "memory allocation error" << endl;
df1b2-separable/f1b2locl.cpp:      cerr << "memory allocation error" << endl;
df1b2-separable/f1b2locl.cpp:    cerr << "Haven't defined htis yet" << endl;
df1b2-separable/f1b2locl.cpp:          cerr << "the bounded matrix case in " 
df1b2-separable/f1b2locl.cpp:          cerr << "the bounded matrix case in " 
df1b2-separable/f1b2ma1.cpp:    cerr << "Index out of range in "
df1b2-separable/f1b2sol2.cpp:    cerr << "Error matrix not square in solve()"<<endl;
df1b2-separable/f1b2sol2.cpp:      cerr << "Error in matrix inverse -- matrix singular in inv(df1b2matrix)\n";
df1b2-separable/f1b2solv.cpp:    cerr << "Error matrix not square in solve()"<<endl;
df1b2-separable/f1b2solv.cpp:      cerr << "Error in matrix inverse -- matrix singular in inv(df1b2matrix)\n";
df1b2-separable/f1b2trst.cpp:      cerr << "failed sanity check in "
df1b2-separable/f1b2trst.cpp:    cerr << "Error trying to open file admodel.hes" << endl;
df1b2-separable/f1b2trst.cpp:    cerr << "Error trying to read Hessian from admodel.hes" << endl;
df1b2-separable/f1b2v10.cpp:    cerr << "illegal value for df1b2variable::pass = " 
df1b2-separable/f1b2v12.cpp:    cerr << "incompatible size in solve_trans" << endl;
df1b2-separable/f1b2v12.cpp:    cerr << " Incompatible vector and matrix sizes in solve " << endl;
df1b2-separable/f1b2vc1.cpp:    cerr << "Index too low in df1b2matrix& operator () (int i)"
df1b2-separable/f1b2vc1.cpp:    cerr << "Index too high in df1b2matrix& operator () (int i)"
df1b2-separable/f1b2vc1.cpp:    cerr << "Index too low in df1b2variable& operator () (int i)"
df1b2-separable/f1b2vc1.cpp:    cerr << "Index too high in df1b2variable& operator () (int i)"
df1b2-separable/f1b2vc1.cpp:    cerr << "Index too low in df1b2variable& operator () (int i)"
df1b2-separable/f1b2vc1.cpp:    cerr << "Index too high in df1b2variable& operator () (int i)"
df1b2-separable/f1b2vc1.cpp:    cerr << "Index too low in df1b2variable& operator () (int i)"
df1b2-separable/f1b2vc1.cpp:    cerr << "Index too high in df1b2variable& operator () (int i)"
df1b2-separable/f1b2vc1.cpp:    cerr << "Index too low in df1b2variable& operator () (int i)"
df1b2-separable/f1b2vc1.cpp:    cerr << "Index too high in df1b2variable& operator () (int i)"
df1b2-separable/f1b2vc1.cpp:    cerr << "Index too low in df1b2variable& operator () (int i)"
df1b2-separable/f1b2vc1.cpp:    cerr << "Index too high in df1b2variable& operator () (int i)"
df1b2-separable/f1b2vc1.cpp:      cerr << "Error trying to allocate memory for df1b2vector\n";
df1b2-separable/f1b2vc1.cpp:        cerr << "Offset in df1b2vector constructor is not constant" << endl;
df1b2-separable/f1b2vc1.cpp:        cerr << "Offset in df1b2vector constructor is not"
df1b2-separable/f1b2vc1.cpp:    cerr << "Error trying to allocate memory for df1b2vector\n";
df1b2-separable/f1b2vc1.cpp:     cerr << "Taking a subvector  of an unallocated dvector"<<endl;
df1b2-separable/f1b2vc4.cpp:    cerr << "Unequal shapes in" 
df1b2-separable/f1b2vc4.cpp:    cerr << "Unequal shapes in"
df1b2-separable/f1b2vc5.cpp:    cerr << "Incompatible shapes in df1b2vector function" << s << endl;
df1b2-separable/f1b2vc5.cpp:    cerr << "Incompatible shapes in df1b2vector function" << s << endl;
df1b2-separable/f1b2vc5.cpp:    cerr << "Incompatible shapes in df1b2vector function" << s << endl;
df1b2-separable/f1b2vc5.cpp:    cerr << "Incompatible shapes in df1b2vector function" << s << endl;
df1b2-separable/f1b2vc5.cpp:    cerr << "incompatible matrix sizes" << endl;
df1b2-separable/f1b2vc5.cpp:      cerr << " Error allocating memory in df1b2matrix contructor\n";
df1b2-separable/f1b2vc5.cpp:    cerr << " Error allocating memory in df1b2matrix contructor\n";
df1b2-separable/f1b2vc5.cpp:      cerr << " Error allocating memory in df1b2matrix contructor\n";
df1b2-separable/f1b2vc5.cpp:    cerr << " Error allocating memory in df1b2matrix contructor\n";
df1b2-separable/f1b2vc5.cpp:      cerr << " Error allocating memory in df1b2matrix contructor\n";
df1b2-separable/f1b2vc5.cpp:    cerr << " Error allocating memory in df1b2matrix contructor\n";
df1b2-separable/f1b2vc7.cpp:     cerr << "lower index greater than upper index in df1b2vector::"
df1b2-separable/f1b2vc7.cpp:     cerr << "lower index out of bounds in df1b2vector::"
df1b2-separable/f1b2vc7.cpp:     cerr << " upper index out of bounds in df1b2vector::"
df1b2-separable/fquadpri.cpp:      cerr << nullptrerror << endl;
df1b2-separable/fquadpri.cpp:      cerr << unallocatederror << endl;
df1b2-separable/fquadpri.cpp:         cerr << "Illegal valueinswitch statement" << endl;
df1b2-separable/fquadpri.cpp:        cerr << "Illegal value for quadratic_prior::old_style_flag"
df1b2-separable/fquadpri.cpp:              cerr << "Illegal value for quadratic_prior::old_style_flag"
df1b2-separable/fquadpri.cpp:      cerr << "Illegal value for quadratic_prior::old_style_flag"
df1b2-separable/mod_rhes.cpp:      cerr << "Illegal value for mode" << endl;
df1b2-separable/mod_rhes.cpp:        cerr << "Error writing to file " << tmpstring << endl;
df1b2-separable/mod_rhes.cpp:        cerr << "Error writing to file " << tmpstring << endl;
df1b2-separable/mod_rhes.cpp:        cerr << "Usage -hpts option needs non-negative integer  -- ignored" << endl;
df1b2-separable/mod_rhes.cpp:        cerr << "Usage -hsize option needs number  -- ignored" << endl;
df1b2-separable/mod_rhes.cpp:          cerr << "Usage -hsize option needs positive number  -- ignored" << endl;
df1b2-separable/mod_rhes.cpp~:      cerr << "Illegal value for mode" << endl;
df1b2-separable/mod_rhes.cpp~:        cerr << "Error writing to file " << tmpstring << endl;
df1b2-separable/mod_rhes.cpp~:        cerr << "Error writing to file " << tmpstring << endl;
df1b2-separable/mod_rhes.cpp~:        cerr << "Usage -hpts option needs non-negative integer  -- ignored" << endl;
df1b2-separable/mod_rhes.cpp~:        cerr << "Usage -hsize option needs number  -- ignored" << endl;
df1b2-separable/mod_rhes.cpp~:          cerr << "Usage -hsize option needs positive number  -- ignored" << endl;
df1b2-separable/newfunc.cpp:        cerr << "coudn't find right sized pool -- this can't happen" 
df1b2-separable/newfunc.cpp:    cerr << "illegal value for df1b2variable::pass = " 
df1b2-separable/newfunc.cpp:        cerr << "coudn't find right sized pool -- this can't happen" 
df1b2-separable/quadpri.cpp:         cerr << "Illegal value in switch statement" << endl;
df1b2-separable/quadpri.cpp:         cerr << "Illegal value in switch statement" << endl;
df1b2-separable/quadpri.cpp:         cerr << "Illegal value in switch statement" << endl;
df1b2-separable/quadpri.cpp:         cerr << "Illegal value in switch statement" << endl;
df1b2-separable/quadpri.cpp:      cerr << "This can't happen" << endl;
df1b2-separable/quadpri.cpp:         cerr << "Illegal valueinswitch statement" << endl;
df1b2-separable/quadpri.cpp:         cerr << "Illegal valueinswitch statement" << endl;
df1b2-separable/quadpri.cpp:         cerr << "Illegal valueinswitch statement" << endl;
df1b2-separable/quadpri.cpp:         cerr << "Illegal valueinswitch statement" << endl;
df1b2-separable/quadpri.cpp:        cerr << "Illegal valueinswitch statement" << endl;
df1b2-separable/quadpri.cpp:        cerr << "Illegal valueinswitch statement" << endl;
df1b2-separable/quadpri.cpp:      cerr << "You must put random effects vector before"
df1b2-separable/quadpri.cpp:       cerr << "ptr["<<i<<"] = 0 in" 
df1b2-separable/quadpri.cpp:       cerr << "ptr["<<i<<"]->pMinv = 0 in" 
df1b2-separable/quadpri.cpp:       cerr << "*ptr["<<i<<"] is unallocated in" 
df1b2-separable/quadpri.cpp:     cerr << "Illegal value for quadratic_prior::old_style_flag"
df1b2-separable/quadpri.cpp:         cerr << "Error allocating dmatrix" << endl;
df1b2-separable/quadpri.cpp:         cerr << "Error allocating dvar_matrix" << endl;
df1b2-separable/quadpri.cpp:         cerr << "Error allocating dmatrix" << endl;
df1b2-separable/quadpri.cpp:           cerr << "Error allocating dvar_matrix" << endl;
df1b2-separable/quadpri.cpp:           cerr << "Error allocating dmatrix" << endl;
df1b2-separable/quadpri.cpp:     cerr << "Illegal value for quadratic_prior::old_style_flag"
df1b2-separable/quadpri.cpp:     cerr << " can't get here " << endl;
df1b2-separable/quadpri.cpp:     cerr << " can't get here " << endl;
df1b2-separable/quadpri.cpp:     cerr << "Illegal value for quadratic_prior::old_style_flag"
df1b2-separable/quadpri.cpp:     cerr << " can't get here " << endl;
df1b2-separable/quadpri.cpp:         cerr << "Error allocating dmatrix" << endl;
df1b2-separable/quadpri.cpp:     cerr << "Illegal value for quadratic_prior::old_style_flag"
df1b2-separable/smartbuf.cpp:      cerr << "Error trying to allocate memory for ad_sbuffer buffer"<<endl;
df1b2-separable/smartbuf.cpp:          cerr << "Wrong number of options to -slave -- must be 1"
df1b2-separable/smartbuf.cpp:      cerr << "Error closing file " << cmpdif_file_name << "\n";
df1b2-separable/smartbuf.cpp:        cerr << "Error trying to delete file " << cmpdif_file_name << endl;
df1b2-separable/smartbuf.cpp:      cerr << "Need to increase gradient_structure::CMPDIF_BUFFER_SIZE "
df1b2-separable/smartbuf.cpp:  { cerr << "Error rewinding file in ad_sbuffer:fread"<<endl;
df1b2-separable/smartbuf.cpp:    cerr << "End of file trying to read "<< cmpdif_file_name << endl;
df1b2-separable/smartbuf.cpp:      cerr << "End of file trying to write to file "<< cmpdif_file_name << endl;
df1b2-separable/smartbuf.cpp:      cerr << "There is probably no more room on the TMP1 (if defined) device\n"
df1b2-separable/tpl2rem-winflex.c:                 "  {\n    cerr << \"error trying to open report file\" "
df1b2-separable/tpl2rem-winflex.c:     "    cerr << \"Shape error in get_Lxu\" << endl;\n"
df1b2-separable/tpl2rem-winflex.c:     "    cerr << \"Shape error in get_Lxu\" << endl;\n"
df1b2-separable/tpl2rem.c:                 "  {\n    cerr << \"error trying to open report file\" "
df1b2-separable/tpl2rem.c:     "    cerr << \"Shape error in get_Lxu\" << endl;\n"
df1b2-separable/tpl2rem.c:     "    cerr << \"Shape error in get_Lxu\" << endl;\n"
df1b2-separable/tpl2rem.lex:                 "  {\n    cerr << \"error trying to open report file\" "
df1b2-separable/tpl2rem.lex:     "    cerr << \"Shape error in get_Lxu\" << endl;\n"
df1b2-separable/tpl2rem.lex:     "    cerr << \"Shape error in get_Lxu\" << endl;\n"
df1b2-separable/tpl2rem.lex~:                 "  {\n    cerr << \"error trying to open report file\" "
df1b2-separable/tpl2rem.lex~:     "    cerr << \"Shape error in get_Lxu\" << endl;\n"
df1b2-separable/tpl2rem.lex~:     "    cerr << \"Shape error in get_Lxu\" << endl;\n"
linad99/ad_atlas.cpp:    cerr << "Matrix not square in dvector atlas_solve_spd"
linad99/ad_atlas.cpp:    cerr << "Incompatible matrix and vector sizes in dvector atlas_solve_spd"
linad99/ad_atlas.cpp:    cerr << "Matrix not square in dvector atlas_solve_spd"
linad99/ad_atlas.cpp:    cerr << "Incompatible matrix and vector sizes in dvector atlas_solve_spd"
linad99/ad_atlas.cpp:    cerr << "Matrix not square in dvector atlas_solve_spd"
linad99/ad_atlas.cpp:    cerr << "Incompatible matrix and vector sizes in dmatrix atlas_solve_spd"
linad99/ad_atlas.cpp:    cerr << "Matrix not square in dvector atlas_solve_spd"
linad99/ad_atlas.cpp:    cerr << "Incompatible matrix and vector sizes in dmatrix atlas_solve_spd"
linad99/adcomm1.cpp:    cerr << "need to increase the number of slave args" <<endl;
linad99/adcomm1.cpp:    cerr << "wrong shape for ivector in send_int_to_slaves" << endl;
linad99/adcomm1.cpp:    cerr << "error loading pvm library" << endl;
linad99/adcomm1.cpp:    cerr << "error trying to get configuration of pvm (virtual machine)" << endl;
linad99/adcomm1.cpp:      cerr << " PVM Daemon not responing -- maybe it is not started" << endl;
linad99/adcomm1.cpp:        cerr << "Wrong number of options to -exec -- must be 1"
linad99/adcomm1.cpp:    cerr << "index value of " << i 
linad99/adcomm1.cpp:      cerr << "Wrong number of options to -slavedir -- must be 1"
linad99/adcomm1.cpp:      cerr << "Wrong number of options to -mcmc -- must be 1"
linad99/adpvm2.cpp:    cerr << "error in adpvm_receive_derivatvies" << endl;
linad99/adpvm2.cpp:      cerr << "Error in min index in "
linad99/adpvm2.cpp:      cerr << "Error in max index in" 
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in" 
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in" 
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in"
linad99/adpvm2.cpp:      cerr << "Error in min index in" 
linad99/adpvm2.cpp:      cerr << "Error in max index in"
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in"
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in"
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in"
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in"
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in"
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in"
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in"
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in"
linad99/adpvm2.cpp:      cerr << "Error in min index in 
linad99/adpvm2.cpp:      cerr << "Error in max index in 
linad99/adpvm2.cpp:      cerr << "Error in min index in 
linad99/adpvm2.cpp:      cerr << "Error in max index in 
linad99/adpvm2.cpp:      cerr << "Error in min index in "
linad99/adpvm2.cpp:      cerr << "Error in max index in" 
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in" 
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in" 
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in"
linad99/adpvm2.cpp:      cerr << "Error in min index in" 
linad99/adpvm2.cpp:      cerr << "Error in max index in"
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in"
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in"
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in"
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in"
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in"
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in"
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in"
linad99/adpvm2.cpp:      cerr << "Error in min index in"
linad99/adpvm2.cpp:      cerr << "Error in max index in"
linad99/c_ghk.cpp:    cerr << "Index too low in function ghk -- min is " 
linad99/c_ghk.cpp:    cerr << "Index too high in function ghk -- max is " 
linad99/cbetacf.cpp:  if (m > MAXIT) cerr << "a or b too big, or MAXIT too small in betacf"
linad99/cbetai.cpp:  if (x < 0.0 || x > 1.0) cerr << "Bad x in routine betai" << endl;
linad99/ccumdbetainv.cpp:    cerr << "Illegal value in inv_cumd_beta" << endl;
linad99/ccumdlog.cpp:    cerr << "Error in double inv_cumd_norm_logistic -- illegal p value = " 
linad99/cgamdev.cpp:    cerr << "Invalid arguments in routine gammp" << endl;
linad99/cgamdev.cpp:    cerr << "Invalid arguments in routine gammp" << endl;
linad99/cgamdev.cpp:    cerr << "a too large, ITMAX too small in gcf" << endl;
linad99/cgamdev.cpp:      cerr << "x less than 0 in routine gser" << endl;
linad99/cgamdev.cpp:    cerr << "a too large, ITMAX too small in routine gser" << endl;
linad99/cgamdev.cpp:    cerr << "a musdt be > 0.1" << endl;
linad99/cgamdev.cpp:      cerr << "convergence error" << endl;
linad99/cgamdev.cpp:      cerr << "this can't happen" << endl;
linad99/cmpdif11.cpp:    cerr << "Incompatible array sizes in " <<
linad99/cmpdif11.cpp:    cerr << "Incompatible array sizes in " <<
linad99/cmpdif2.cpp:    cerr << "Error -- Index out of bounds in\n"
linad99/cmpdif2.cpp:    cerr << "Index out of range in\n"
linad99/cmpdif2.cpp:    cerr << "Index out of range in\n"
linad99/cmpdif3.cpp:    cerr << "Error reading stack identifer for " << str1 << endl;
linad99/cmpdif5.cpp:    cerr << "Incompatible array sizes in " <<
linad99/cmpdif5.cpp:    cerr << "Incompatible array sizes in " <<
linad99/cmpdif5.cpp:    cerr << "Error -- Index out of bounds in routine\n"
linad99/cmpdif5.cpp:    cerr << "Incompatible array sizes in " <<
linad99/cmpdif5.cpp:    cerr << "Incompatible array sizes in " <<
linad99/cmpdif6.cpp:    cerr << "Error -- Index out of bounds in\n"
linad99/cmpdif7.cpp:    cerr << "Error -- Index out of bounds in\n"
linad99/cnegbin.cpp:      cerr << "tau <=1 in log_negbinomial_density " << endl;
linad99/cnegbin.cpp:      cerr << "tau <=1 in negbinomial_density " << endl;
linad99/combc.cpp:      cerr << "Incompatible array bounds in function "
linad99/combv.cpp:      cerr << "Incompatible array bounds in function "
linad99/combv.cpp:      cerr << "Incompatible array bounds in function "
linad99/combv.cpp:      cerr << "Incompatible array bounds in function "
linad99/conjprod.cpp:        cerr << " Improving fbest  old fbest = " << fbest << "\n" <<
linad99/conjprod.cpp:  cerr << "Too many iterations in FRPRMN\n";
linad99/conjprod.cpp:        cerr << "doing extrapolation\n";
linad99/conjprod.cpp:        cerr << "We have a right bracket\n";
linad99/conjprod.cpp:     cerr << " The cosine of angle between the search direction and \n"
linad99/conjprod.cpp:      cerr << " Leaving interpolation routine because"
linad99/cspline.cpp:    cerr << " Incompatible bounds in input to spline" << endl;
linad99/cumdist.cpp:    cerr << "Illegal argument to inv_cumd_norm = " << x << endl;
linad99/d3arr.cpp:     cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,_CONST ivector& ncl,_CONST ivector& nch)" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,_CONST ivector& ncl,_CONST ivector& nch)" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,_CONST ivector& ncl,_CONST ivector& nch)" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,_CONST ivector& ncl,_CONST ivector& nch)" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,_CONST ivector& ncl,_CONST ivector& nch)" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,_CONST ivector& ncl,_CONST ivector& nch)" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,int ncl,_CONST ivector& nch)" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,int ncl,_CONST ivector& nch)" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,_CONST ivector& ncl,_CONST ivector& nch)" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/d3arr.cpp:     cerr << "Making a copy of an unallocated d3_array"<<endl;
linad99/d3arr.cpp:     cerr << "Making a copy of an unallocated d3_array"<<endl;
linad99/d3arr.cpp:    // cerr << "Warning -- trying to deallocate an unallocated dmatrix"<<endl;
linad99/d3arr.cpp:    // cerr << "Warning -- trying to deallocate an unallocated d3_array"<<endl;
linad99/d3arr1.cpp:          cerr << "array bound exceeded -- slice index too low in d3_array::operator(int,int)";
linad99/d3arr1.cpp:          cerr << "array bound exceeded -- slice index too high in d3_array::operator(int,int)";
linad99/d3arr1.cpp:          cerr << "array bound exceeded -- slice index too low in d3_array::operator(int,int)";
linad99/d3arr1.cpp:          cerr << "array bound exceeded -- slice index too high in d3_array::operator(int,int)";
linad99/d3arr1.cpp:       cerr << "matrix bound exceeded -- row index too low in 3d_array::operator[]"
linad99/d3arr1.cpp:       cerr << "matrix bound exceeded -- row index too high in 3d_array::operator[]"
linad99/d3arr1.cpp:       cerr << "matrix bound exceeded -- row index too low in 3d_array::operator[]"
linad99/d3arr1.cpp:       cerr << "matrix bound exceeded -- row index too high in 3d_array::operator[]"
linad99/d3arr11.cpp:       cerr << "matrix bound exceeded -- row index too low in 3d_array::operator[]"
linad99/d3arr11.cpp:       cerr << "matrix bound exceeded -- row index too high in 3d_array::operator[]"
linad99/d3arr8.cpp:          cerr << "array bound exceeded -- slice index too low in d3_array::operator(int,int)";
linad99/d3arr8.cpp:          cerr << "array bound exceeded -- slice index too high in d3_array::operator(int,int)";
linad99/d3arr8.cpp:          cerr << "array bound exceeded -- slice index too low in d3_array::operator(int,int)";
linad99/d3arr8.cpp:          cerr << "array bound exceeded -- slice index too high in d3_array::operator(int,int)";
linad99/d3arr8.cpp:       cerr << "matrix bound exceeded -- row index too low in 3d_array::operator[]"
linad99/d3arr8.cpp:       cerr << "matrix bound exceeded -- row index too high in 3d_array::operator[]"
linad99/d3arr8.cpp:     cerr << " Incompatible array bounds in d3_array& operator = (_CONST d3_array&)\n";
linad99/d4arr.cpp:   //  cerr << "Warning -- trying to deallocate an unallocated d4_array"<<endl;
linad99/d4arr.cpp:     cerr << "Incompatible bounds in"
linad99/d4arr.cpp:     cerr << " Error allocating memory in dvar4_array contructor" << endl;
linad99/d4arr.cpp:     cerr << " Error allocating memory in dvar4_array contructor" << endl;
linad99/d4arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d4arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d4arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d4arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d4arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d4arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d4arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d4arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d4arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d4arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d4arr.cpp:     cerr << " Error allocating memory in d3_array contructor\n";
linad99/d4arr.cpp:     cerr << " Error allocating memory in d3_array contructor\n";
linad99/d4arr.cpp:     cerr << " Error allocating memory in d4_array contructor\n";
linad99/d4arr.cpp:     cerr << " Error allocating memory in d3_array contructor\n";
linad99/d4arr.cpp:     cerr << " Error allocating memory in d4_array contructor\n";
linad99/d4arr.cpp:     cerr << " Error allocating memory in d3_array contructor\n";
linad99/d4arr.cpp:     cerr << " Error allocating memory in d4_array contructor\n";
linad99/d4arr.cpp:     cerr << " Error allocating memory in d3_array contructor\n";
linad99/d4arr.cpp:    cerr << " Error allocating memory in d4_array contructor\n";
linad99/d4arr.cpp:    cerr << " Error allocating memory in d3_array contructor\n";
linad99/d4arr.cpp:    cerr << " Error allocating memory in d3_array contructor\n";
linad99/d4arr.cpp:    cerr << " Error allocating memory in d3_array contructor\n";
linad99/d4arr.cpp:    cerr << " Error allocating memory in d3_array contructor\n";
linad99/d4arr.cpp:    cerr << " Error allocating memory in d3_array contructor\n";
linad99/d4arr.cpp:    cerr << " Error allocating memory in d3_array contructor\n";
linad99/d4arr.cpp:    cerr << " Error allocating memory in d3_array contructor\n";
linad99/d4arr.cpp:    cerr << " Error allocating memory in d3_array contructor\n";
linad99/d4arr.cpp:    cerr << " Error allocating memory in d3_array contructor\n";
linad99/d4arr.cpp:    cerr << " Error allocating memory in d3_array contructor\n";
linad99/d4arr.cpp:    cerr << " Error allocating memory in d3_array contructor\n";
linad99/d5arr.cpp:    // cerr << "Warning -- trying to deallocate an unallocated d4_array"<<endl;
linad99/d5arr.cpp:     cerr << "Incompatible bounds in"
linad99/d5arr.cpp:     cerr << " Error allocating memory in d5_array contructor" << endl;
linad99/d5arr.cpp:     cerr << " Error allocating memory in d5_array contructor" << endl;
linad99/d5arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/d5arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/d5arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d5arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d5arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d5arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d5arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/d5arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/d5arr.cpp:        { cerr << "Error index out of bounds in\n"
linad99/d5arr.cpp:        { cerr << "Error index out of bounds in\n"
linad99/d5arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d5arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d5arr.cpp:     cerr << " Error allocating memory in d5_array contructor\n";
linad99/d5arr.cpp:     cerr << " Error allocating memory in d5_array contructor\n";
linad99/d5arr.cpp:     cerr << " Error allocating memory in d5_array contructor\n";
linad99/d5arr.cpp:     cerr << " Error allocating memory in d5_array contructor\n";
linad99/d5arr.cpp:     cerr << " Error allocating memory in d5_array contructor\n";
linad99/d5arr.cpp:     cerr << " Error allocating memory in d5_array contructor\n";
linad99/d6arr.cpp:  //   cerr << "Warning -- trying to deallocate an unallocated d4_array"<<endl;
linad99/d6arr.cpp:     cerr << "Incompatible bounds in"
linad99/d6arr.cpp:     cerr << " Error allocating memory in d5_array contructor" << endl;
linad99/d6arr.cpp:     cerr << " Error allocating memory in d5_array contructor" << endl;
linad99/d6arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/d6arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/d6arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d6arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d6arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d6arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d6arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d6arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/d6arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/d6arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d6arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d6arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d6arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d6arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d6arr.cpp:     cerr << " Error allocating memory in d5_array contructor\n";
linad99/d6arr.cpp:     cerr << " Error allocating memory in d5_array contructor\n";
linad99/d6arr.cpp:     cerr << " Error allocating memory in d5_array contructor\n";
linad99/d6arr.cpp:     cerr << " Error allocating memory in d5_array contructor\n";
linad99/d7arr.cpp:     cerr << "Warning -- trying to deallocate an unallocated d5_array"<<endl;
linad99/d7arr.cpp:     cerr << "Incompatible bounds in"
linad99/d7arr.cpp:     cerr << " Error allocating memory in d6_array contructor" << endl;
linad99/d7arr.cpp:     cerr << " Error allocating memory in d6_array contructor" << endl;
linad99/d7arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/d7arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/d7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d7arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/d7arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/d7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/d7arr.cpp:     cerr << " Error allocating memory in d6_array contructor\n";
linad99/d7arr.cpp:     cerr << " Error allocating memory in d6_array contructor\n";
linad99/d7arr.cpp:    cerr << " Error allocating memory in d6_array contructor\n";
linad99/d7arr.cpp:    cerr << " Error allocating memory in d6_array contructor\n";
linad99/d7arr.cpp:     cerr << " Error allocating memory in d6_array contructor\n";
linad99/d7arr.cpp:     cerr << " Error allocating memory in d6_array contructor\n";
linad99/ddlist.cpp:      cerr << "Wrong number of options to -mdl -- must be 1"
linad99/ddlist.cpp:  // cerr << "dlist::dlist(void)\n";
linad99/ddlist.cpp:    cerr << "Error allocating dlink in dlist::create()\n";
linad99/ddlist.cpp:    cerr << "Need to increase the maximum number of dlinks" << endl;
linad99/ddlist.cpp:    cerr << "In ~dlist() number of links destroyed not equal to number created\n";
linad99/ddlist.cpp:    cerr << " The number created was "<< nlinks << " The number destroyed was "
linad99/ddlist.cpp:      cerr << "In check_list() number of links > number created\n";
linad99/ddlist.cpp:      cerr << " The number created was "<< nlinks << endl;
linad99/ddlist.cpp:  cerr << "In check_list() number of free links is " << count << endl;
linad99/ddlist.cpp:    cerr << "NULL pointer passed to  dlist::append()\n";
linad99/depvars.cpp:      cerr << " Incompatible bounds in dvar_vector& operator"
linad99/depvars.cpp:      cerr << " Incompatible bounds in dvar_matrix& operator"
linad99/df12fun.cpp:      cerr << "error allocating memory in df1_two_vector" << endl;
linad99/df12fun.cpp:      cerr << "Error trying to allocate memory for df1_two_vector" 
linad99/df12fun.cpp:      cerr << "error allocating memory in df1_two_matrix" << endl;
linad99/df12fun.cpp:      cerr << "Error trying to allocate memory for df1_two_vector" 
linad99/df12fun.cpp:      cerr << "can only have 2 independent_variables in df1_two_variable"
linad99/df12fun.cpp:      cerr << "illegal num_ind_var value of " << num_ind_var 
linad99/df12fun.cpp:    cerr << "minimum row and column inidices must equal 1 in "
linad99/df12fun.cpp:    cerr << "Error in df1b2matrix choleski_decomp(const df1_two_matrix& MM)"
linad99/df12fun.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
linad99/df12fun.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
linad99/df_file.cpp:      cerr << "Error trying to allocate memory for DF_FILE buffer"<<endl;
linad99/df_file.cpp:          cerr << "Wrong number of options to -slave -- must be 1"
linad99/df_file.cpp:      cerr << "Error closing file " << cmpdif_file_name << "\n";
linad99/df_file.cpp:        cerr << "Error trying to delete file " << cmpdif_file_name << endl;
linad99/df_file.cpp:      cerr << "Need to increase gradient_structure::CMPDIF_BUFFER_SIZE "
linad99/df_file.cpp:  { cerr << "Error rewinding file in DF_FILE:fread"<<endl;
linad99/df_file.cpp:    cerr << "End of file trying to read "<< cmpdif_file_name << endl;
linad99/df_file.cpp:      cerr << "End of file trying to write to file "<< cmpdif_file_name << endl;
linad99/df_file.cpp:      cerr << "There is probably no more room on the TMP1 (if defined) device\n"
linad99/dfgammp.cpp:    cerr << "a too large, ITMAX too small in gcf" << endl;
linad99/dfgammp.cpp:      cerr << "x less than 0 in routine gser" << endl;
linad99/dfgammp.cpp:    cerr << "a too large, ITMAX too small in routine gser" << endl;
linad99/dfgammp.cpp:    cerr << "Invalid arguments in routine gammp" << endl;
linad99/dfpool.cpp:    cerr << "incorrect size requested in dfpool" << endl;
linad99/dfpool.cpp:    cerr << "incorrect size requested in dfpool" << endl;
linad99/dfpool.cpp:    cerr << "incorrect size requested in dfpool" << endl;
linad99/dfpool.cpp:      cerr << "Error in dfpool structure" << endl;
linad99/dfpool.cpp:      cerr << "Error in dfpool adresses" << endl;
linad99/dfpool.cpp:      cerr << "both allocated and unallocated memory at entry " 
linad99/dfpool.cpp:    cerr << "Error in dfpool structure" << endl;
linad99/dfpool.cpp:      cerr << "Error in dfpool structure" << endl;
linad99/dfpool.cpp:    cerr << "Error in dfpool structure" << endl;
linad99/dfpool.cpp:      cerr << "Error in dfpool structure" << endl;
linad99/dfpool.cpp:    cerr << "bad pool object" << endl;
linad99/dfpool.cpp:    cerr << "You can not change the allocation size in mid stream" << endl;
linad99/dfpool.cpp:    cerr << "error in dfpool object " // << poolname
linad99/dfpool.cpp:    cerr << "Error in check memory need to make pvalues bigger than "
linad99/dfpool.cpp:    cerr << "error in dfpool object " // << poolname
linad99/dfsdmat.cpp:      cerr << "error trying to open temporary hessian file\n";
linad99/dfsdmat.cpp:    cerr << "Index out of bounds in double& dfsdmat::elem(int i,int j)"
linad99/dfsdmat.cpp:    cerr << "Index out of bounds in double& dfsdmat::elem(int i,int j)"
linad99/dfsdmat.cpp:      cerr << "error trying to open temporary hessian file\n";
linad99/dfsdmat.cpp:    cerr << "Error writing to temporary hess file in dfsdmat::save()"
linad99/dfsdmat.cpp:    cerr << "Error reading from temporary hess file in dfsdmat::save()"
linad99/dmat.cpp:     cerr << " Error allocating memory in dmatrix contructor\n";
linad99/dmat.cpp:     cerr << " Error allocating memory in dmatrix contructor\n";
linad99/dmat.cpp:     cerr << " Error allocating memory in dmatrix contructor\n";
linad99/dmat.cpp:     cerr << " Error allocating memory in dmatrix contructor\n";
linad99/dmat.cpp:     cerr << " Error allocating memory in dmatrix contructor\n";
linad99/dmat.cpp:     cerr << " Error allocating memory in dmatrix contructor\n";
linad99/dmat.cpp:    cerr << " Error allocating memory in dmatrix contructor" << endl;
linad99/dmat.cpp:    cerr << " Error allocating memory in dmatrix contructor" << endl;
linad99/dmat.cpp:     cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,_CONST ivector& ncl,_CONST ivector& nch)\n";
linad99/dmat.cpp:     cerr << " Error allocating memory in dmatrix contructor\n";
linad99/dmat.cpp:     cerr << " Error allocating memory in dmatrix contructor\n";
linad99/dmat.cpp:     cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,"
linad99/dmat.cpp:     cerr << " Error allocating memory in dmatrix contructor\n";
linad99/dmat.cpp:     cerr << " Error allocating memory in dmatrix contructor\n";
linad99/dmat.cpp:     cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,"
linad99/dmat.cpp:     cerr << " Error allocating memory in dmatrix contructor\n";
linad99/dmat.cpp:     cerr << " Error allocating memory in dmatrix contructor\n";
linad99/dmat.cpp:     cerr << "Making a copy of an unallocated dmatrix"<<endl;
linad99/dmat.cpp:     cerr << "Making a copy of an unallocated dmatrix"<<endl;
linad99/dmat.cpp:     //cerr << "Warning -- trying to deallocate an unallocated dmatrix"<<endl;
linad99/dmat1.cpp:     cerr << " Incompatible array bounds in dvector  operator * (_CONST dvector& x,_CONST dmatrix& m)\n";
linad99/dmat1.cpp:     cerr << " Incompatible array bounds in dvector  operator * (_CONST dvector& x,_CONST dmatrix& m)\n";
linad99/dmat1.cpp:     cerr << " Incompatible array bounds in dmatrix  operator * (_CONST dmatrix& x,_CONST dmatrix& m)\n";
linad99/dmat1.cpp:     cerr << " Incompatible array bounds in dmatrix  operator * (_CONST dmatrix& x,_CONST dmatrix& m)\n";
linad99/dmat10.cpp:        cerr << "Unbalanced braces in dmatrix::fill(const char * s)\n";
linad99/dmat10.cpp:        cerr << "at character " << k << "\n";
linad99/dmat10.cpp:        cerr << "Unbalanced braces in dmatrix::dmatrix(const char * s)\n";
linad99/dmat10.cpp:        cerr << "at character " << k << "\n";
linad99/dmat10.cpp:        cerr << "Too many rows in dmatrix::dmatrix(const char * s)\n";
linad99/dmat10.cpp:    cerr << "Unbalanced braces in dmatrix::dmatrix(const char * s)\n";
linad99/dmat10.cpp:    cerr << s << "\n";
linad99/dmat10.cpp:      cerr << " Not enough rows in the data for dmatrix::fill(const char *) \n";
linad99/dmat10.cpp:      cerr << " Too many rows in the data for dmatrix::fill(const char *) \n";
linad99/dmat10.cpp:        cerr << " Not enough columns in the data in row "
linad99/dmat10.cpp:        cerr << " Too many columns in the data in row "
linad99/dmat12.cpp:    cerr << " Non square matrix passed to dmatrix symmetrize\n";
linad99/dmat14.cpp:    cerr << " Matrix not square in trace\n";
linad99/dmat15.cpp:    cerr << "Error in chol_decomp. Matrix not square" << endl;
linad99/dmat15.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
linad99/dmat15.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
linad99/dmat15.cpp:    cerr << "Error in chol_decomp. Matrix not square" << endl;
linad99/dmat15.cpp:    cerr << "Error in chol_decomp. Matrix not square" << endl;
linad99/dmat16.cpp:     cerr << " Incompatible array bounds in dmatrix  operator + (_CONST dmatrix& x,_CONST dmatrix& m)\n";
linad99/dmat16.cpp:     cerr << " Incompatible array bounds in dmatrix  operator + (_CONST dmatrix& x,_CONST dmatrix& m)\n";
linad99/dmat27.cpp:    cerr << "Row out of bounds in function"
linad99/dmat28.cpp:    cerr << "bounds error" << endl;
linad99/dmat28.cpp:        cerr << "Error matrix not positive definite in choleski_decomp"
linad99/dmat28.cpp:        cerr << "Error matrix not positive definite in choleski_decomp"
linad99/dmat28.cpp:    cerr << "incompatible shape in symmetric_dmatrix::operator = "
linad99/dmat28.cpp:      cerr << "error bandwidth not equal 2" << endl;
linad99/dmat28.cpp:      cerr << "error bandwidth not equal 2" << endl;
linad99/dmat29.cpp:      cerr << " Vector and Matrix sizes don't match in function MAT" << endl;
linad99/dmat3.cpp:    cerr << " Error in dmatrix inv(_CONST dmatrix&) -- matrix not square \n";
linad99/dmat3.cpp:    cerr << " Error in dmatrix inv(_CONST dmatrix&) -- matrix not square \n";
linad99/dmat3.cpp:      cerr << "Error in matrix inverse -- matrix singular in inv(dmatrix)\n";
linad99/dmat3.cpp:    cerr << "Matrix not square in routine det()" << endl;
linad99/dmat3.cpp:    cerr << "Matrix not square in routine det()" << endl;
linad99/dmat3.cpp:      cerr << "Error in matrix inverse -- matrix singular in inv(dmatrix)\n";
linad99/dmat31.cpp:    cerr << "Error matrix not square in function diagonal" << endl;
linad99/dmat32.cpp:       cerr << "matrix bound exceeded -- row index too low in dmatrix::operator()"
linad99/dmat32.cpp:       cerr << "matrix bound exceeded -- row index too high in dmatrix::operator()"
linad99/dmat34.cpp:    cerr << "Error matrix not square in solve()"<<endl;
linad99/dmat34.cpp:      cerr << "Error in matrix inverse -- matrix singular in inv(dmatrix)\n";
linad99/dmat35.cpp:    cerr << "Error in chol_decomp. Matrix not square" << endl;
linad99/dmat35.cpp:    cerr << "Error in chol_decomp. Matrix not square" << endl;
linad99/dmat35.cpp:    cerr << "Error in chol_decomp. Matrix not square" << endl;
linad99/dmat36.cpp:    cerr << " Incompatible vector and matrix sizes in solve " << endl;
linad99/dmat36.cpp:    cerr << "incompatible size in solve_trans" << endl;
linad99/dmat37.cpp:    cerr << " Incompatible vector and matrix sizes in solve " << endl;
linad99/dmat37.cpp:    cerr << "incompatible size in solve_trans" << endl;
linad99/dmat37.cpp:    cerr << "incompatible size in solve_trans" << endl;
linad99/dmat37.cpp:    cerr << " Incompatible vector and matrix sizes in solve " << endl;
linad99/dmat38.cpp:    cerr << "Error matrix not square in solve()"<<endl;
linad99/dmat38.cpp:      cerr << "Error in matrix inverse -- matrix singular in inv(dmatrix)\n";
linad99/dmat4.cpp:       cerr << " Incompatible array bounds in dmatrix& operator = (_CONST dmatrix&)\n";
linad99/dmat4.cpp:     cerr << " Incompatible array bounds in dmatrix& operator += (_CONST dmatrix&)\n";
linad99/dmat4.cpp:     cerr << " Incompatible array bounds in dmatrix& operator -= (_CONST dmatrix&)\n";
linad99/dmat42.cpp:    cerr << "index error in singval_decomp" << endl;
linad99/dmat42.cpp:        cerr << "convergence failure " << maxiter << " tries" << endl;
linad99/dmat43.cpp:    cerr << "shape error" << endl;
linad99/dmat43.cpp:        cerr << "Error matrix not positive definite in choleski_decomp"
linad99/dmat6.cpp:      cerr << " Invalid matrix column specified in "
linad99/dmat6.cpp:      cerr << " Invalid matrix row specified in "
linad99/dmat8.cpp:       cerr << "matrix bound exceeded -- row index too low in dmatrix::operator()"
linad99/dmat8.cpp:       cerr << "matrix bound exceeded -- row index too high in dmatrix::operator()"
linad99/dmat8.cpp:       cerr << "matrix bound exceeded -- row index too low in dmatrix::operator()"
linad99/dmat8.cpp:       cerr << "matrix bound exceeded -- row index too high in dmatrix::operator()"
linad99/dmat8.cpp:       cerr << "matrix bound exceeded -- column index too low in dmatrix::operator()"
linad99/dmat8.cpp:       cerr << "matrix bound exceeded -- column index too high in dmatrix::operator()"
linad99/dmat8.cpp:       cerr << "matrix bound exceeded -- row index too low in dmatrix::operator()"
linad99/dmat8.cpp:       cerr << "matrix bound exceeded -- row index too high in dmatrix::operator()"
linad99/dmat8.cpp:       cerr << "matrix bound exceeded -- column index too low in dmatrix::operator()"
linad99/dmat8.cpp:       cerr << "matrix bound exceeded -- column index too high in dmatrix::operator()"
linad99/dmat_a.cpp:     cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,_CONST ivector& ncl,_CONST ivector& nch)\n";
linad99/dmat_a.cpp:     cerr << " Error allocating memory in dmatrix contructor\n";
linad99/dmat_a.cpp:     cerr << " Error allocating memory in dmatrix contructor\n";
linad99/dmat_a.cpp:     cerr << "Created a dmatrix with adress "<< farptr_tolong(m)<<"\n";
linad99/dmat_a.cpp:       cerr << "Created a dvector with address "<< farptr_tolong(*(m+i))<<"\n";
linad99/dmat_a.cpp:     cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,_CONST ivector& ncl,_CONST ivector& nch)\n";
linad99/dmat_a.cpp:     cerr << " Error allocating memory in dmatrix contructor\n";
linad99/dmat_a.cpp:     cerr << " Error allocating memory in dmatrix contructor\n";
linad99/dmat_a.cpp:     cerr << "Created a dmatrix with adress "<< farptr_tolong(m)<<"\n";
linad99/dmat_acc.cpp:       cerr << "matrix bound exceeded -- row index too low in dmatrix::operator[]"
linad99/dmat_acc.cpp:       cerr << "matrix bound exceeded -- row index too high in dmatrix::operator[]"
linad99/dmat_acc.cpp:       cerr << "matrix bound exceeded -- row index too low in dmatrix::operator[]"
linad99/dmat_acc.cpp:       cerr << "matrix bound exceeded -- row index too high in dmatrix::operator[]"
linad99/dmat_io2.cpp:        cerr << "Unbalanced braces in dmatrix::dmatrix( char * s)\n";
linad99/dmat_io2.cpp:        cerr << "at character " << k << "\n";
linad99/dmat_io2.cpp:        cerr << "Unbalanced braces in dmatrix::dmatrix( char * s)\n";
linad99/dmat_io2.cpp:        cerr << "at character " << k << "\n";
linad99/dmat_io2.cpp:        cerr << "Too many rows in dmatrix::dmatrix( char * s)\n";
linad99/dmat_io2.cpp:    cerr << "Unbalanced braces in dmatrix::dmatrix(char * s)\n";
linad99/dmat_io2.cpp:    cerr << s << "\n";
linad99/dmat_io2.cpp:      cerr << " Error allocating memory in dmatrix contructor\n";
linad99/dmat_io2.cpp:      cerr << " Error allocating memory in dmatrix contructor\n";
linad99/dmat_io2.cpp:      cerr << "Created a dmatrix with adress "<< farptr_tolong(m)<<"\n";
linad99/dmat_io2.cpp:       cerr << "Error opening file " << filename << " in dmatrix constructor "
linad99/dmat_io2.cpp:        cerr << " MAX_NUMBER_ROWS exceeded in "
linad99/dmat_io2.cpp:         cerr << " MAX_NUMBER_COLUMNS exceeded in "
linad99/dmat_io2.cpp:     cerr << "Error in dmatrix constructor There doesn't seem to be any data\n"
linad99/dmat_io2.cpp:     cerr << " Error allocating memory in dmatrix contructor\n";
linad99/dmat_io2.cpp:     cerr << " Error allocating memory in dmatrix contructor\n";
linad99/dmat_io2.cpp:     cerr << "Created a dmatrix with adress "<< farptr_tolong(m)<<"\n";
linad99/dmat_io2.cpp:       cerr << "Created a dvector with address "<< farptr_tolong(*(m+i))<<"\n";
linad99/dmat_io2.cpp:         cerr << "Error decoding field " << filename
linad99/dmat_io2.cpp:         cerr << "Error occurred in line " << i << " at field " << j << "\n";
linad99/dmat_io2.cpp:         cerr << "Offending characters start with "
linad99/dmat_io2.cpp:         cerr << "Overflow Error decoding field " << filename
linad99/dmat_io2.cpp:         cerr << "Error occurred in line " << i << " at field " << j << "\n";
linad99/dmat_io2.cpp:         cerr << "Offending characters start with "
linad99/dmat_io2.cpp:         cerr << "Error computing input line length field reading file\n";
linad99/dmat_io3.cpp:       cerr << " Error in dmatrix read\n";
linad99/dmat_io3.cpp:       cerr << " Error in dmatrix write\n";
linad99/doublind.cpp:      cerr << "trying to delete a NULL optr in ~double_index_type()"  << endl;
linad99/dvec_acc.cpp:       cerr << "array bound exceeded -- index too high in dvector::operator[]"
linad99/dvec_acc.cpp:       cerr << " index value is " << i << " indexmax() is "<< indexmax() <<"\n";
linad99/dvec_acc.cpp:       cerr << "array bound exceeded -- index too low in dvector::operator[]";
linad99/dvec_acc.cpp:       cerr << " index value is " << i << " indexmin() is "<< indexmin() <<"\n";
linad99/dvec_acc.cpp:       cerr << "array bound exceeded -- index too high in dvector::operator()"
linad99/dvec_acc.cpp:       cerr << " index value is " << i << " indexmax() is "<< indexmax() <<"\n";
linad99/dvec_acc.cpp:       cerr << "array bound exceeded -- index too low in dvector::operator[]";
linad99/dvec_acc.cpp:       cerr << " index value is " << i << " indexmin() is "<< indexmin() <<"\n";
linad99/dvec_acc.cpp:       cerr << "array bound exceeded -- index too high in dvector::operator[]"
linad99/dvec_acc.cpp:       cerr << " index value is " << i << " indexmax() is "<< indexmax() <<"\n";
linad99/dvec_acc.cpp:       cerr << "array bound exceeded -- index too low in dvector::operator[]";
linad99/dvec_acc.cpp:       cerr << " index value is " << i << " indexmin() is "<< indexmin() <<"\n";
linad99/dvec_acc.cpp:       cerr << "array bound exceeded -- index too high in dvector::operator()"
linad99/dvec_acc.cpp:       cerr << " index value is " << i << " indexmax() is "<< indexmax() <<"\n";
linad99/dvec_acc.cpp:       cerr << "array bound exceeded -- index too low in dvector::operator[]";
linad99/dvec_acc.cpp:       cerr << " index value is " << i << " indexmin() is "<< indexmin() <<"\n";
linad99/dvec_dif.cpp:     cerr << "Error -- vector size too small"
linad99/dvec_io1.cpp:     cerr << "Error opening file " << filename << " in dmatrix constructor "
linad99/dvec_io1.cpp:       cerr << " MAX_NUMBER_ROWS exceeded in "
linad99/dvec_io1.cpp:         cerr << " MAX_NUMBER_COLUMNS exceeded in "
linad99/dvec_io1.cpp:       cerr << "Error -- not enough columns in line " << i  
linad99/dvec_io1.cpp:     cerr << "Error in dvector constructor There doesn't seem to be any data\n"
linad99/dvec_io1.cpp:     cerr << " Error trying to allocate memory for dvector\n";
linad99/dvec_io1.cpp:     cerr << "Error trying to allocate memory for dvector\n";
linad99/dvec_io1.cpp:        //cerr << "Pointer wrap in dvector(unsigned int ncl, unsigned int nch)\n";
linad99/dvec_io1.cpp:        //cerr << "pointer = "<< (unsigned int) v <<
linad99/dvec_io1.cpp:         cerr << "Error decoding field " << filename
linad99/dvec_io1.cpp:         cerr << "Error occurred in line " << i << " at field " << j << "\n";
linad99/dvec_io1.cpp:         cerr << "Offending characters start with "
linad99/dvec_io1.cpp:         cerr << "Overflow Error decoding field " << filename
linad99/dvec_io1.cpp:         cerr << "Error occurred in line " << i << " at field " << j << "\n";
linad99/dvect10.cpp:    cerr << "Unbalanced braces in dvector::fill(const char * s)\n";
linad99/dvect10.cpp:    cerr << s << "\n";
linad99/dvect10.cpp:    cerr << "Only one level of braces allowed in dvector::fill(const char * s)\n";
linad99/dvect10.cpp:    cerr << s << "\n";
linad99/dvect10.cpp:    cerr << "Missing braces { ... } in dvector::fill(const char * s)\n";
linad99/dvect10.cpp:    cerr << s << "\n";
linad99/dvect10.cpp:        cerr << "Not enough elements to fill vector in dvector::fill(const char * s)\n";
linad99/dvect10.cpp:        cerr << s << "\n";
linad99/dvect10.cpp:        cerr << "Too many elements for size of vector in dvector::fill(const char * s)\n";
linad99/dvect10.cpp:        cerr << s << "\n";
linad99/dvect10.cpp:       cerr << "Error decoding field "
linad99/dvect10.cpp:       cerr << "Error occurred at element " << i << "\n";
linad99/dvect10.cpp:       cerr << "Offending characters start with "
linad99/dvect10.cpp:       cerr << "Overflow Error decoding field "
linad99/dvect10.cpp:       cerr << "Error occurred at element " << i << "\n";
linad99/dvect10.cpp:       cerr << "Offending characters start with "
linad99/dvect16.cpp:     cerr << " Incompatible array bounds in dvector& operator += (_CONST dvector&)\n";
linad99/dvect16.cpp:     cerr << " Incompatible array bounds in dvector& operator -= (_CONST dvector&)\n";
linad99/dvect17.cpp:      cerr << "Error in extract_diagonal function -- input matrix not square"
linad99/dvect18.cpp:     cerr << " Vector sizes do no match in" << function_name << "\n";
linad99/dvect2.cpp:       cerr << "Index bounds do not match in dvector elem_prod(_CONST dvector&,_CONST dvector&)\n";
linad99/dvect2.cpp:       cerr << "Index bounds do not match in dvector elem_div(_CONST dvector&,_CONST dvector&)\n";
linad99/dvect21.cpp:        cerr << " low index > high index in" 
linad99/dvect21.cpp:        cerr << "lower index out of bounds in"
linad99/dvect21.cpp:        cerr << "upper index out of bounds in"
linad99/dvect9.cpp:    cerr << "Unbalanced braces in dvector::dvector(const char * s)\n";
linad99/dvect9.cpp:    cerr << s << "\n";
linad99/dvect9.cpp:    cerr << "Only one level of braces allowed in dvector::dvector(const char * s)\n";
linad99/dvect9.cpp:    cerr << s << "\n";
linad99/dvect9.cpp:       cerr << "Error decoding field "
linad99/dvect9.cpp:       cerr << "Error occurred at element " << i << "\n";
linad99/dvect9.cpp:       cerr << "Offending characters start with "
linad99/dvect9.cpp:       cerr << "Overflow Error decoding field "
linad99/dvect9.cpp:       cerr << "Error occurred at element " << i << "\n";
linad99/dvect9.cpp:       cerr << "Offending characters start with "
linad99/dvect9.cpp:     cerr << "Error opening file " << filename << " in dvector constructor "
linad99/dvect9.cpp:         cerr << "Error reading file " << filename << " in dvector constructor "
linad99/dvect9.cpp:         cerr << "Error appears to have occurred at element"
linad99/dvect9.cpp:         cerr << "Stream state is " << infile.rdstate() << endl;
linad99/dvect9.cpp:      cerr << " Error trying to allocate memory for dvector\n";
linad99/dvect9.cpp:      cerr << "Error trying to allocate memory for dvector\n";
linad99/dvect9.cpp:       cerr << "Error decoding field " << filename
linad99/dvect9.cpp:       cerr << "Error occurred at element " << count << "\n";
linad99/dvect9.cpp:       cerr << "Offending characters start with "
linad99/dvect9.cpp:       cerr << "Overflow Error decoding field " << filename
linad99/dvect9.cpp:       cerr << "Error occurred at element " << count << "\n";
linad99/dvect9.cpp:       cerr << "Offending characters start with "
linad99/dvect9.cpp:    cerr << "Unbalanced braces in dvector::dvector(const char * s)\n";
linad99/dvect9.cpp:    cerr << s << "\n";
linad99/dvect9.cpp:    cerr << "Only one level of braces allowed in dvector::dvector(const char * s)\n";
linad99/dvect9.cpp:    cerr << s << "\n";
linad99/dvect9.cpp:       cerr << "Error decoding field "
linad99/dvect9.cpp:       cerr << "Error occurred at element " << i << "\n";
linad99/dvect9.cpp:       cerr << "Offending characters start with "
linad99/dvect9.cpp:       cerr << "Overflow Error decoding field "
linad99/dvect9.cpp:       cerr << "Error occurred at element " << i << "\n";
linad99/dvect9.cpp:     cerr << "Error opening file " << filename << " in dvector constructor "
linad99/dvect9.cpp:         cerr << "Error reading file " << filename << " in dvector constructor "
linad99/dvect9.cpp:         cerr << "Error appears to have occurred at element"
linad99/dvect9.cpp:         cerr << "Stream state is " << infile.rdstate() << endl;
linad99/dvect9.cpp:     cerr << " Error trying to allocate memory for dvector\n";
linad99/dvect9.cpp:     cerr << "Error trying to allocate memory for dvector\n";
linad99/dvect9.cpp:       cerr << "Error decoding field " << filename
linad99/dvect9.cpp:       cerr << "Error occurred at element " << count << "\n";
linad99/dvect9.cpp:       cerr << "Offending characters start with "
linad99/dvect9.cpp:       cerr << "Overflow Error decoding field " << filename
linad99/dvect9.cpp:       cerr << "Error occurred at element " << count << "\n";
linad99/dvect9.cpp:       cerr << "Offending characters start with "
linad99/dvector.cpp:         cerr << " Trying to delete NULL pointer in ~dvector\n";
linad99/dvector.cpp:        cerr << "error in dvector shape not zero but v=0" << endl;
linad99/dvector.cpp:      //cerr << "Warning -- trying to deallocate an unitialized dvector"
linad99/dvector.cpp:        cerr << "trying to deallocate a dvector with copies" << endl;
linad99/dvector.cpp:     cerr << "Making a copy of an unallocated dvector"<<endl;
linad99/dvector.cpp:     cerr << "Making a copy of an unallocated dvector"<<endl;
linad99/dvector.cpp:     cerr << "Taking a subvector  of an unallocated dvector"<<endl;
linad99/dvector.cpp:       cerr << "Index bounds do not match in dvector& operator = (_CONST dvector&)\n";
linad99/dvector.cpp:     cerr << "Index bounds do not match in dvector& operator = (_CONST dvector&)\n";
linad99/dvector.cpp:     cerr << "trying to allocate an already allocated dvector " << endl;
linad99/dvector.cpp:       cerr << "Error in dvector constructor max index must be >= minindex\n"
linad99/dvector.cpp:       cerr << " Error trying to allocate memory for dvector\n";
linad99/dvector.cpp:       cerr << "Error trying to allocate memory for dvector\n";
linad99/dvector.cpp:    cerr << "Trying to alocate to an already allocated dvector" << endl;
linad99/dvector.cpp:       cerr << "Index bounds do not match in dvector operator * (_CONST dvector&,_CONST dvector&)\n";
linad99/dvector.cpp:       cerr << "Index bounds do not match in dvector operator + (_CONST dvector&,_CONST dvector&)\n";
linad99/dvector.cpp:       cerr << "Index bounds do not match in dvector operator - (_CONST dvector&,_CONST dvector&)\n";
linad99/dvector.cpp:       cerr << msg << "Heap is corrupted.\n";
linad99/dvector.cpp:       cerr << msg << "Heap is OK.\n";
linad99/dveigen.cpp:    cerr << "Error -- non square matrix passed to dvector eigen(_CONST dvar_matrix& m)\n";
linad99/dveigen.cpp:    cerr << "Error -- non square matrix passed to void tridag(_CONST dmatrix& m)\n";
linad99/dveigen.cpp:    cerr <<"Error -- incorrect vector size passed to void tridag(_CONST dmatrix& m)\n";
linad99/dveigen.cpp:          cerr << "Maximum number of iterations exceeded in"
linad99/dveigen.cpp:          cerr << "Maximum number of iterations exceeded in"
linad99/dveigenv.cpp:    cerr << "Error -- non square matrix passed to dvector eigen(_CONST dmatrix& m)\n";
linad99/dveigenv.cpp:    cerr << "Error -- non square matrix passed to void tridag(_CONST dvar_matrix& m)\n";
linad99/dveigenv.cpp:    cerr <<"Error -- incorrect vector size passed to void tridag(_CONST dmatrix& m)\n";
linad99/dveigenv.cpp:          cerr << "Maximum number of iterations exceeded in"
linad99/dvsort.cpp:         cerr << "Need to increase the stack in sort(_CONST dvector&)\n";
linad99/dvsort.cpp:    cerr << " Incompatible array sizes in vector v and ivector index\n"
linad99/dvsort.cpp:         cerr << "Need to increase the stack in sort(_CONST dvector&)\n";
linad99/eigen.cpp:    cerr << "error -- non square matrix passed to dvector eigen(_CONST dmatrix& m)\n";
linad99/eigen.cpp:    cerr << "Error -- non square matrix passed to void tridag(_CONST dmatrix& m)\n";
linad99/eigen.cpp:    cerr <<"Error -- incorrect vector size passed to void tridag(_CONST dmatrix& m)\n";
linad99/eigen.cpp:          cerr << "Maximum number of iterations exceeded in"
linad99/eigen.cpp:          cerr << "Maximum number of iterations exceeded in"
linad99/eigen.cpp:          cerr << "Maximum number of iterations exceeded in"
linad99/eigenv.cpp:    cerr << "Error -- non square matrix passed to dvector"
linad99/eigenv.cpp:    cerr << "Error -- non square matrix passed to dvector"
linad99/eigenv.cpp:    cerr << "incompatible sizes in vector and matrix passed to"
linad99/eigenv.cpp:    cerr << "Error -- non square matrix passed to void tridag(_CONST dmatrix& m)\n";
linad99/eigenv.cpp:    cerr <<"Error -- incorrect vector size passed to void tridag(_CONST dmatrix& m)\n";
linad99/eigenv.cpp:          cerr << "Maximum number of iterations exceeded in"
linad99/except.cpp:      cerr << "Index " << i << " out of bounds minvalue = " << imin
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,_CONST ivector& ncl,_CONST ivector& nch)" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,int ncl,_CONST ivector& nch)" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     //cerr << "Warning -- trying to deallocate an unallocated dmatrix"<<endl;
linad99/f3arr.cpp:     //cerr << "Warning -- trying to deallocate an unallocated dmatrix"<<endl;
linad99/f3arr.cpp:     cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,_CONST ivector& ncl,_CONST ivector& nch)" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,_CONST ivector& ncl,_CONST ivector& nch)" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr1.cpp:         cerr << "trying to access an unallocated object" << endl;
linad99/f3arr1.cpp:          cerr << "array bound exceeded -- slice index too"
linad99/f3arr1.cpp:          cerr << "array bound exceeded -- slice index too"
linad99/f3arr1.cpp:          cerr << "array bound exceeded -- slice index too"
linad99/f3arr1.cpp:          cerr << "array bound exceeded -- slice index too"
linad99/f3arr1.cpp:       cerr << "matrix bound exceeded -- row index too low in dvar3_array::operator[]"
linad99/f3arr1.cpp:       cerr << "matrix bound exceeded -- row index too high in dvar3_array::operator[]"
linad99/f3arr1.cpp:       cerr << "trying to access an unallocated object" << endl;
linad99/f3arr1.cpp:       cerr << "matrix bound exceeded -- row index too low in dvar3_array::operator[]"
linad99/f3arr1.cpp:       cerr << "matrix bound exceeded -- row index too high in dvar3_array::operator[]"
linad99/f3arr12.cpp:          cerr << "array bound exceeded -- slice index too"
linad99/f3arr12.cpp:          cerr << "array bound exceeded -- slice index too"
linad99/f3arr12.cpp:          cerr << "array bound exceeded -- slice index too"
linad99/f3arr12.cpp:          cerr << "array bound exceeded -- slice index too"
linad99/f3arr13.cpp:     cerr << " Incompatible array bounds in dvar_matrix& operator = (_CONST dvar_vector&)\n";
linad99/f3arr14.cpp:     cerr << " Incompatible array bounds in dvar_matrix& operator = (_CONST dvar_vector&)\n";
linad99/f3arr15.cpp:       cerr << nrl.isinteger() << " " << nrh.isinteger() << endl;
linad99/f3arr15.cpp:       cerr << sl << " " << nrl.indexmin() << endl;
linad99/f3arr15.cpp:       cerr << sh << " " << nrl.indexmax() << endl;
linad99/f3arr15.cpp:       cerr << sl << " " << nrh.indexmin() << endl;
linad99/f3arr15.cpp:       cerr << sh << " " << nrh.indexmax() << endl;
linad99/f3arr15.cpp:       cerr << "Incompatible array bounds in dvar3_array(int nrl,int nrh,"
linad99/f3arr15.cpp:       cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr15.cpp:       cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr15.cpp:       cerr << nrl.isinteger() << " " << nrh.isinteger() << endl;
linad99/f3arr15.cpp:       cerr << sl << " " << nrl.indexmin() << endl;
linad99/f3arr15.cpp:       cerr << sh << " " << nrl.indexmax() << endl;
linad99/f3arr15.cpp:       cerr << sl << " " << nrh.indexmin() << endl;
linad99/f3arr15.cpp:       cerr << "Incompatible array bounds in dvar3_array(int nrl,int nrh,"
linad99/f3arr15.cpp:       cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr15.cpp:       cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr15.cpp:       cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr15.cpp:       cerr << " Error allocating memory in dvar3_array contructor" << endl;
linad99/f3arr18.cpp:       cerr << "matrix bound exceeded -- row index too low in 3d_array::operator[]"
linad99/f3arr18.cpp:       cerr << "matrix bound exceeded -- row index too high in 3d_array::operator[]"
linad99/f3arr19.cpp:       cerr << "matrix bound exceeded -- row index too low in 3d_array::operator[]"
linad99/f3arr19.cpp:       cerr << "matrix bound exceeded -- row index too high in 3d_array::operator[]"
linad99/f3arr3.cpp:     cerr << " Error allocating memory in d3_array contructor\n";
linad99/f3arr3.cpp:     cerr << " Error allocating memory in d3_array contructor\n";
linad99/f4arr.cpp:       //cerr << "Warning -- trying to deallocate an unallocated d4_array"<<endl;
linad99/f4arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f4arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f4arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f4arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f4arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f4arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f4arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f4arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f4arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f4arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f4arr.cpp:     cerr << "Incompatible bounds in"
linad99/f4arr.cpp:     cerr << "Incompatible bounds in"
linad99/f4arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor\n";
linad99/f4arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor\n";
linad99/f4arr.cpp:     cerr << " Error allocating memory in dvar4_array contructor\n";
linad99/f4arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor\n";
linad99/f4arr.cpp:     cerr << " Error allocating memory in dvar4_array contructor\n";
linad99/f4arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor\n";
linad99/f4arr.cpp:     cerr << " Error allocating memory in dvar4_array contructor\n";
linad99/f4arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor\n";
linad99/f4arr.cpp:     cerr << " Error allocating memory in dvar4_array contructor\n";
linad99/f4arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor\n";
linad99/f4arr.cpp:     cerr << " Error allocating memory in dvar4_array contructor\n";
linad99/f4arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor\n";
linad99/f4arr.cpp:     cerr << " Error allocating memory in dvar4_array contructor\n";
linad99/f4arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor\n";
linad99/f4arr.cpp:     cerr << " Error allocating memory in d4_array contructor\n";
linad99/f4arr.cpp:     cerr << " Error allocating memory in d3_array contructor\n";
linad99/f4arr.cpp:     cerr << " Error allocating memory in dvar4_array contructor" << endl;
linad99/f4arr.cpp:     cerr << " Error allocating memory in dvar4_array contructor" << endl;
linad99/f4arr.cpp:     cerr << " Error allocating memory in dvar4_array contructor" << endl;
linad99/f4arr.cpp:     cerr << " Error allocating memory in dvar4_array contructor" << endl;
linad99/f4arr.cpp:     cerr << " Error allocating memory in dvar4_array contructor\n";
linad99/f4arr.cpp:     cerr << " Error allocating memory in dvar3_array contructor\n";
linad99/f5arr.cpp:   //  cerr << "Warning -- trying to deallocate an unallocated dvar4_array"<<endl;
linad99/f5arr.cpp:     cerr << "Incompatible bounds in"
linad99/f5arr.cpp:     cerr << "Incompatible bounds in"
linad99/f5arr.cpp:     cerr << " Error allocating memory in dvar5_array contructor" << endl;
linad99/f5arr.cpp:     cerr << " Error allocating memory in dvar5_array contructor" << endl;
linad99/f5arr.cpp:     cerr << " Error allocating memory in dvar5_array contructor" << endl;
linad99/f5arr.cpp:     cerr << " Error allocating memory in dvar5_array contructor" << endl;
linad99/f5arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/f5arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/f5arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f5arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f5arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f5arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f5arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/f5arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/f5arr.cpp:        { cerr << "Error index out of bounds in\n"
linad99/f5arr.cpp:        { cerr << "Error index out of bounds in\n"
linad99/f5arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f5arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f5arr.cpp:     cerr << " Error allocating memory in dvar5_array contructor\n";
linad99/f5arr.cpp:     cerr << " Error allocating memory in dvar5_array contructor\n";
linad99/f5arr.cpp:     cerr << " Error allocating memory in dvar5_array contructor\n";
linad99/f5arr.cpp:     cerr << " Error allocating memory in dvar5_array contructor\n";
linad99/f5arr.cpp:     cerr << " Error allocating memory in dvar5_array contructor\n";
linad99/f5arr.cpp:     cerr << " Error allocating memory in dvar5_array contructor\n";
linad99/f6arr.cpp:    // cerr << "Warning -- trying to deallocate an unallocated dvar4_array"<<endl;
linad99/f6arr.cpp:     cerr << "Incompatible bounds in"
linad99/f6arr.cpp:     cerr << "Incompatible bounds in"
linad99/f6arr.cpp:     cerr << " Error allocating memory in dvar5_array contructor" << endl;
linad99/f6arr.cpp:     cerr << " Error allocating memory in dvar5_array contructor" << endl;
linad99/f6arr.cpp:     cerr << " Error allocating memory in dvar5_array contructor" << endl;
linad99/f6arr.cpp:     cerr << " Error allocating memory in dvar5_array contructor" << endl;
linad99/f6arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/f6arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/f6arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f6arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f6arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f6arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f6arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f6arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/f6arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/f6arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f6arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f6arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f6arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f6arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f6arr.cpp:     cerr << " Error allocating memory in dvar5_array contructor\n";
linad99/f6arr.cpp:     cerr << " Error allocating memory in dvar5_array contructor\n";
linad99/f6arr.cpp:     cerr << " Error allocating memory in dvar5_array contructor\n";
linad99/f6arr.cpp:     cerr << " Error allocating memory in dvar5_array contructor\n";
linad99/f6arr.cpp:     cerr << " Error allocating memory in dvar5_array contructor\n";
linad99/f6arr.cpp:     cerr << " Error allocating memory in dvar5_array contructor\n";
linad99/f7arr.cpp:    cerr << " Error allocating memory in d6_array contructor\n";
linad99/f7arr.cpp:    cerr << " Error allocating memory in d6_array contructor\n";
linad99/f7arr.cpp:     //cerr << "Warning -- trying to deallocate an unallocated dvar5_array"<<endl;
linad99/f7arr.cpp:     cerr << "Incompatible bounds in"
linad99/f7arr.cpp:     cerr << "Incompatible bounds in"
linad99/f7arr.cpp:     cerr << " Error allocating memory in dvar6_array contructor" << endl;
linad99/f7arr.cpp:     cerr << " Error allocating memory in dvar6_array contructor" << endl;
linad99/f7arr.cpp:     cerr << " Error allocating memory in dvar6_array contructor" << endl;
linad99/f7arr.cpp:     cerr << " Error allocating memory in dvar6_array contructor" << endl;
linad99/f7arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/f7arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/f7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f7arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/f7arr.cpp:        { cerr << "Error  index out of bounds in\n"
linad99/f7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f7arr.cpp:        { cerr << "Error hslice index out of bounds in\n"
linad99/f7arr.cpp:     cerr << " Error allocating memory in dvar6_array contructor\n";
linad99/f7arr.cpp:     cerr << " Error allocating memory in dvar6_array contructor\n";
linad99/f7arr.cpp:     cerr << " Error allocating memory in dvar6_array contructor\n";
linad99/f7arr.cpp:     cerr << " Error allocating memory in dvar6_array contructor\n";
linad99/fmmtr1.cpp:       cerr << "Error -- the number of active parameters"
linad99/fmmtr1.cpp:       cerr << "Error -- minimum valid index"
linad99/fmmtr1.cpp:       cerr << "Error -- the size of the independent_variables"
linad99/fmmtr1.cpp:       cerr << "Error -- minimum valid index"
linad99/fmmtr1.cpp:       cerr << "Error -- the size of the gradient vector"
linad99/fvar.hpp:        //  cerr << "In put_address i = " << i << "\n";
linad99/fvar.hpp:    virtual operator int () { cerr << "Error in index_type"
linad99/fvar.hpp:    virtual operator double () { cerr << "Error in double_index_type"
linad99/fvar.hpp-hide:        //  cerr << "In put_address i = " << i << "\n";
linad99/fvar.hpp-hide:    virtual operator int () { cerr << "Error in index_type"
linad99/fvar.hpp-hide:    virtual operator double () { cerr << "Error in double_index_type"
linad99/fvar2.cpp:      cerr << "Error -- you are trying to create a dvariable object"
linad99/fvar_a10.cpp:    cerr << "Unbalanced braces in dvar_vector::fill(const char * s)\n";
linad99/fvar_a10.cpp:    cerr << s << "\n";
linad99/fvar_a10.cpp:    cerr << "Only one level of braces allowed in dvar_vector::fill(const char * s)\n";
linad99/fvar_a10.cpp:    cerr << s << "\n";
linad99/fvar_a10.cpp:    cerr << "Missing braces { ... } in dvar_vector::fill(const char * s)\n";
linad99/fvar_a10.cpp:    cerr << s << "\n";
linad99/fvar_a10.cpp:        cerr << "Not enough elements to fill vector in dvar_vector::fill(const char * s)\n";
linad99/fvar_a10.cpp:        cerr << s << "\n";
linad99/fvar_a10.cpp:        cerr << "Too many elements for size of vector in dvar_vector::fill(const char * s)\n";
linad99/fvar_a10.cpp:        cerr << s << "\n";
linad99/fvar_a10.cpp:       cerr << "Error decoding field "
linad99/fvar_a10.cpp:       cerr << "Error occurred at element " << i << "\n";
linad99/fvar_a10.cpp:       cerr << "Offending characters start with "
linad99/fvar_a10.cpp:       cerr << "Overflow Error decoding field "
linad99/fvar_a10.cpp:       cerr << "Error occurred at element " << i << "\n";
linad99/fvar_a14.cpp:    cerr << "Incompatible bounds in "
linad99/fvar_a15.cpp:    cerr << "Incompatible bounds in "
linad99/fvar_a16.cpp:    cerr << "Incompatible bounds in "
linad99/fvar_a17.cpp:    cerr << "Incompatible bounds in "
linad99/fvar_a18.cpp:    cerr << "Incompatible bounds in "
linad99/fvar_a19.cpp:    cerr << "Incompatible bounds in "
linad99/fvar_a20.cpp:       cerr << " Incompatible bounds in dvar_vector& dvar_vector::operator ="
linad99/fvar_a21.cpp:    cerr << "Incompatible bounds in "
linad99/fvar_a22.cpp:    cerr << "Incompatible bounds in "
linad99/fvar_a23.cpp:    cerr << "Incompatible bounds in "
linad99/fvar_a24.cpp:        cerr << "Index bounds do not match in "
linad99/fvar_a25.cpp:     cerr << " Incompatible array bounds in dvector& operator += (_CONST dvar_vector&)\n";
linad99/fvar_a25.cpp:     cerr << " Incompatible array bounds in dvector& operator += (_CONST dvar_vector&)\n";
linad99/fvar_a26.cpp:     cerr << " Incompatible array bounds in dvector& operator += (_CONST dvar_vector&)\n";
linad99/fvar_a26.cpp:     cerr << " Incompatible array bounds in dvector& operator += (_CONST dvar_vector&)\n";
linad99/fvar_a27.cpp:     cerr << " Incompatible bounds in dvar_vector& dvar_vector::operator = (_CONST dvector& t)\n";
linad99/fvar_a28.cpp:      cerr << "Error in extract_diagonal function -- input matrix not square"
linad99/fvar_a29.cpp:        cerr << "Possible overflow in DF_dvlog" << endl;
linad99/fvar_a45.cpp:    cerr << "Incompatible bounds in "
linad99/fvar_a45.cpp:    cerr << "Incompatible bounds in "
linad99/fvar_a45.cpp:    cerr << "Incompatible bounds in "
linad99/fvar_a46.cpp:    cerr << "Incompatible bounds in "
linad99/fvar_a46.cpp:    cerr << "Incompatible bounds in "
linad99/fvar_a46.cpp:    cerr << "Incompatible bounds in "
linad99/fvar_a52.cpp:        cerr << " low index > high index in" 
linad99/fvar_a52.cpp:        cerr << "lower index out of bounds in"
linad99/fvar_a52.cpp:        cerr << "upper index out of bounds in"
linad99/fvar_ar1.cpp:   //  cerr << "Warning -- trying to delete an unallocated dvar_vector"
linad99/fvar_ar1.cpp:     cerr << "lower index greater than upper index in dvar_vector::"
linad99/fvar_ar1.cpp:     cerr << "lower index out of bounds in dvar_vector::"
linad99/fvar_ar1.cpp:     cerr << " upper index out of bounds in dvar_vector::"
linad99/fvar_ar1.cpp:     cerr << "lower index greater than upper index in dvar_vector::"
linad99/fvar_ar1.cpp:     cerr << "lower index out of bounds in dvar_vector::"
linad99/fvar_ar1.cpp:     cerr << " upper index out of bounds in dvar_vector::"
linad99/fvar_ar7.cpp:      cerr << " Invalid matrix column specified in "
linad99/fvar_ar7.cpp:      cerr << " Invalid matrix column specified in "
linad99/fvar_ar7.cpp:      cerr << " Invalid matrix row specified in "
linad99/fvar_ar8.cpp:     cerr << " Vector sizes do no match in" << function_name << "\n";
linad99/fvar_ar8.cpp:     cerr << " Vector sizes do no match in" << function_name << "\n";
linad99/fvar_ar8.cpp:     cerr << " Vector sizes do no match in" << function_name << "\n";
linad99/fvar_arr.cpp:   cerr << "Current maximum number of independent variables is "
linad99/fvar_arr.cpp:         //cerr << "Making a copy of an unallocated dvar_vector"<<endl;
linad99/fvar_arr.cpp:       cerr << "Trying to alocate to an already allocated dvar_vector" << endl;
linad99/fvar_arr.cpp:         cerr << "Error in dvar_vector constructor max index must be"
linad99/fvar_arr.cpp:         cerr << " Error trying to allocate memory for dvar_vector\n";
linad99/fvar_arr.cpp:         cerr << "Error trying to allocate memory for dvar_vector\n";
linad99/fvar_arr.cpp:       // if ( ((int)va) %8) cerr << "Array is not QWORD alligned" << endl;
linad99/fvar_dif.cpp:     cerr << "Error -- vector size too small"
linad99/fvar_fn.cpp:          cerr << "Error -- base = 0 in function"
linad99/fvar_fn1.cpp:        cerr << "Attempting to take the derivative of sqrt(prevariable x)"
linad99/fvar_fn1.cpp:        cerr << "Attempting to take the derivative of sqrt(prevariable x)"
linad99/fvar_io2.cpp:    cerr << "Unbalanced braces in dvector::dvector(const char * s)\n";
linad99/fvar_io2.cpp:    cerr << s << "\n";
linad99/fvar_io2.cpp:    cerr << "Only one level of braces allowed in dvector::dvector(const char * s)\n";
linad99/fvar_io2.cpp:    cerr << s << "\n";
linad99/fvar_io2.cpp:     cerr << "Error opening file " << filename << " in dvector constructor "
linad99/fvar_io2.cpp:         cerr << "Error reading file " << filename << " in dvector constructor "
linad99/fvar_io2.cpp:         cerr << "Error appears to have occurred at element"
linad99/fvar_io2.cpp:         cerr << "Stream state is " << infile.rdstate() << endl;
linad99/fvar_io2.cpp:     cerr << " Error trying to allocate memory for dvector\n";
linad99/fvar_io2.cpp:       cerr << "Error decoding field " << filename
linad99/fvar_io2.cpp:       cerr << "Error occurred at element " << count << "\n";
linad99/fvar_io2.cpp:       cerr << "Offending characters start with "
linad99/fvar_io2.cpp:       cerr << "Overflow Error decoding field " << filename
linad99/fvar_io2.cpp:       cerr << "Error occurred at element " << count << "\n";
linad99/fvar_m10.cpp:        cerr << "Unbalanced braces in dvar_matrix::fill(const char * s)\n";
linad99/fvar_m10.cpp:        cerr << "at character " << k << "\n";
linad99/fvar_m10.cpp:        cerr << "Unbalanced braces in dvar_matrix::fill(const char * s)\n";
linad99/fvar_m10.cpp:        cerr << "at character " << k << "\n";
linad99/fvar_m10.cpp:        cerr << "Too many rows in dvar_matrix::fill(const char * s)\n";
linad99/fvar_m10.cpp:    cerr << "Unbalanced braces in dvar_matrix::fill(const char * s)\n";
linad99/fvar_m10.cpp:    cerr << s << "\n";
linad99/fvar_m10.cpp:      cerr << " Not enough rows in the data for dvar_matrix::fill(const char *) \n";
linad99/fvar_m10.cpp:      cerr << " Too many rows in the data for dvar_matrix::fill(const char *) \n";
linad99/fvar_m10.cpp:        cerr << " Not enough columns in the data in row "
linad99/fvar_m10.cpp:        cerr << " Too many columns in the data in row "
linad99/fvar_m11.cpp:     cerr << " Incompatible array bounds in dvar_matrix& operator += (_CONST dvar_vector&)\n";
linad99/fvar_m11.cpp:     cerr << " Incompatible array bounds in dvar_matrix& operator += (_CONST dvar_vector&)\n";
linad99/fvar_m11.cpp:     cerr << " Incompatible array bounds in dvar_matrix& operator -= (_CONST dvar_vector&)\n";
linad99/fvar_m11.cpp:     cerr << " Incompatible array bounds in dvar_matrix& operator -= (_CONST dvar_vector&)\n";
linad99/fvar_m12.cpp:    cerr << " Matrix not square in trace\n";
linad99/fvar_m14.cpp:     cerr << " Incompatible array bounds in dmatrix  operator * (_CONST dmatrix& x,_CONST dmatrix& m)\n";
linad99/fvar_m14.cpp:     cerr << " Incompatible array bounds in dmatrix  operator * (_CONST dmatrix& x,_CONST dmatrix& m)\n";
linad99/fvar_m15.cpp:      cerr << "Error in matrix inverse -- matrix singular in inv(dmatrix)\n";
linad99/fvar_m15.cpp:      cerr << "Error in matrix inverse -- matrix singular in inv(dmatrix)\n";
linad99/fvar_m18.cpp:     cerr << " Incompatible array bounds in dmatrix  operator * (_CONST dmatrix& x,_CONST dvar_matrix& m)\n";
linad99/fvar_m19.cpp:     cerr << " Incompatible array bounds in dmatrix  operator * (_CONST dvar_matrix& x,_CONST dmatrix& m)\n";
linad99/fvar_m20.cpp:    cerr << "Error matrix not square in det()"<<endl;
linad99/fvar_m20.cpp:      cerr << "Error in matrix inverse -- matrix singular in inv(dmatrix)\n";
linad99/fvar_m21.cpp:     cerr << " Incompatible array bounds in dvar_matrix  operator + (_CONST dvar_matrix& x,_CONST dmatrix& m)\n";
linad99/fvar_m21.cpp:     cerr << " Incompatible array bounds in dvar_matrix  operator + (_CONST dvar_matrix& x,_CONST dvar_matrix& m)\n";
linad99/fvar_m21.cpp:     cerr << " Incompatible array bounds in dvar_matrix  operator + (_CONST dmatrix& x,_CONST dvar_matrix& m)\n";
linad99/fvar_m22.cpp:     cerr << " Incompatible array bounds in dvar_vector  operator * (_CONST dvar_matrix& m,_CONST dvar_vector& x)\n";
linad99/fvar_m22.cpp:     cerr << " Incompatible array bounds in dvar_vector  operator * (_CONST dvar_matrix& m,_CONST dvar_vector& x)\n";
linad99/fvar_m23.cpp:     cerr << " Incompatible array bounds in dvar_vector  operator * (_CONST dvar_matrix& m,_CONST dvar_vector& x)\n";
linad99/fvar_m23.cpp:     cerr << " Incompatible array bounds in dvar_vector  operator * (_CONST dvar_matrix& m,_CONST dvar_vector& x)\n";
linad99/fvar_m24.cpp:    cerr << "Error matrix not square in solve()"<<endl;
linad99/fvar_m24.cpp:      cerr << "Error in matrix inverse -- matrix singular in solve(dvar_dmatrix)\n";
linad99/fvar_m30.cpp:    cerr << " Non square matrix passed to dmatrix symmetrize\n";
linad99/fvar_m33.cpp:    cerr << " Error allocating memory in dmatrix contructor\n";
linad99/fvar_m33.cpp:    cerr << " Error allocating memory in dmatrix contructor\n";
linad99/fvar_m34.cpp:     cerr << " Incompatible array bounds in dvar_vector  operator * (_CONST dvar_matrix& m,_CONST dvar_vector& x)\n";
linad99/fvar_m35.cpp:    cerr << "Row out of bounds in function"
linad99/fvar_m37.cpp:       cerr << "Incompatible array bounds in dvar_matrix(int nrl,int nrh,"
linad99/fvar_m37.cpp:       cerr << " Error allocating memory in dmatrix contructor" << endl;
linad99/fvar_m37.cpp:       cerr << " Error allocating memory in dvar_matrix contructor" << endl;
linad99/fvar_m39.cpp:    cerr << "Error in chol_decomp. Matrix not square" << endl;
linad99/fvar_m39.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
linad99/fvar_m39.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
linad99/fvar_m39.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
linad99/fvar_m39.cpp:    cerr << "Error in chol_decomp. Matrix not square" << endl;
linad99/fvar_m39.cpp:    cerr << "Error matrix not positive definite in choleski_decomp"
linad99/fvar_m39.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
linad99/fvar_m40.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
linad99/fvar_m40.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
linad99/fvar_m40.cpp:    cerr << "Error matrix not positive definite in choleski_decomp"
linad99/fvar_m40.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
linad99/fvar_m40.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
linad99/fvar_m40.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
linad99/fvar_m42.cpp:    cerr << "Error matrix not square in det()"<<endl;
linad99/fvar_m42.cpp:      cerr << "Error in matrix inverse -- matrix singular in inv(dvar_matrix)\n";
linad99/fvar_m43.cpp:      cerr << " Vector and Matrix sizes don't match in function MAT" << endl;
linad99/fvar_m46.cpp:    cerr << "Error matrix not square in function diagonal" << endl;
linad99/fvar_m47.cpp:    cerr << "Error in chol_decomp. Matrix not square" << endl;
linad99/fvar_m47.cpp:    cerr << "Error in chol_decomp. Matrix not square" << endl;
linad99/fvar_m48.cpp:       cerr << "matrix bound exceeded -- row index too low in dvar_matrix::operator()"
linad99/fvar_m48.cpp:       cerr << "matrix bound exceeded -- row index too high in dvar_matrix::operator()"
linad99/fvar_m51.cpp:    cerr << "Error in chol_decomp. Matrix not square" << endl;
linad99/fvar_m51.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
linad99/fvar_m51.cpp:      cerr << "Error matrix not positive definite in ln_det_choleski"
linad99/fvar_m51.cpp:    cerr << "Error in chol_decomp. Matrix not square" << endl;
linad99/fvar_m51.cpp:    cerr << "Error matrix not positive definite in choleski_decomp"
linad99/fvar_m51.cpp:      cerr << "Error matrix not positive definite in choleski_decomp"
linad99/fvar_m51.cpp:    cerr << "Error in chol_decomp. Matrix not square" << endl;
linad99/fvar_m52.cpp:    cerr << "incompatible size in solve_trans" << endl;
linad99/fvar_m53.cpp:    cerr << " Incompatible vector and matrix sizes in solve " << endl;
linad99/fvar_ma1.cpp:     cerr << " Incompatible array bounds in dvar_vector  operator * (_CONST dvector& x,_CONST dvar_matrix& m)\n";
linad99/fvar_ma2.cpp:     cerr << " Incompatible array bounds in dvar_matrix  operator + (_CONST dvar_matrix& x,_CONST dmatrix& m)\n";
linad99/fvar_ma2.cpp:     cerr << " Incompatible array bounds in dvar_matrix  operator + (_CONST dvar_matrix& x,_CONST dvar_matrix& m)\n";
linad99/fvar_ma2.cpp:     cerr << " Incompatible array bounds in dvar_matrix  operator + (_CONST dmatrix& x,_CONST dvar_matrix& m)\n";
linad99/fvar_ma3.cpp:     cerr << " Incompatible array bounds in dvar_vector  operator * (_CONST dvar_vector& x,_CONST dmatrix& m)\n";
linad99/fvar_ma3.cpp:     cerr << " Incompatible array bounds in dvar_vector  operator * (_CONST dvar_vector& x,_CONST dmatrix& m)\n";
linad99/fvar_ma4.cpp:      cerr << "Error in matrix inverse -- matrix singular in inv(dmatrix)\n";
linad99/fvar_ma8.cpp:       cerr << "matrix bound exceeded -- row index too low in dvar_matrix::operator()"
linad99/fvar_ma8.cpp:       cerr << "matrix bound exceeded -- row index too high in dvar_matrix::operator()"
linad99/fvar_mat.cpp:       cerr << " Error allocating memory in dvar_matrix contructor\n";
linad99/fvar_mat.cpp:       cerr << " Error allocating memory in dvar_matrix contructor\n";
linad99/fvar_mat.cpp:       cerr << " Error allocating memory in dvar_matrix contructor\n";
linad99/fvar_mat.cpp:       cerr << " Error allocating memory in dvar_matrix contructor\n";
linad99/fvar_mat.cpp:       cerr << " Error allocating memory in dvar_matrix contructor\n";
linad99/fvar_mat.cpp:       cerr << " Error allocating memory in dvar_matrix contructor\n";
linad99/fvar_mat.cpp:       cerr << " Error allocating memory in dvar_matrix contructor\n";
linad99/fvar_mat.cpp:       cerr << " Error allocating memory in dvar_matrix contructor\n";
linad99/fvar_mat.cpp:     //cerr << "Warning -- trying to make a dvar_matrix copy of an "
linad99/fvar_mat.cpp:       cerr << " Error allocating memory in dvar_matrix contructor"<<endl;
linad99/fvar_mat.cpp:       cerr << " Error allocating memory in dvar_matrix contructor"<<endl;
linad99/fvar_mat.cpp:     //cerr << "Warning -- trying to make a dvar_matrix copy of an "
linad99/fvar_mat.cpp:       cerr << "Incompatible array bounds in dvar_matrix(int nrl,int nrh,_CONST ivector& ncl,_CONST ivector& nch)"
linad99/fvar_mat.cpp:       cerr << " Error allocating memory in dvar_matrix contructor"<<endl;
linad99/fvar_mat.cpp:       cerr << " Error allocating memory in dvar_matrix contructor"<<endl;
linad99/fvar_mat.cpp:       cerr << "Incompatible array bounds in dvar_matrix(int nrl,int nrh,BOR_CONST int& ncl,_CONST ivector& nch)"
linad99/fvar_mat.cpp:       cerr << " Error allocating memory in dvar_matrix contructor"<<endl;
linad99/fvar_mat.cpp:       cerr << " Error allocating memory in dvar_matrix contructor"<<endl;
linad99/fvar_mat.cpp:       cerr << "Incompatible array bounds in dvar_matrix(int nrl,int nrh,_CONST ivector& ncl,int nch)"
linad99/fvar_mat.cpp:       cerr << " Error allocating memory in dvar_matrix contructor"<<endl;
linad99/fvar_mat.cpp:       cerr << " Error allocating memory in dvar_matrix contructor"<<endl;
linad99/fvar_mat.cpp:     //cerr << "Making a copy of an unallocated dvar_matrix" << endl;
linad99/fvar_mat.cpp:     //cerr << "Making a copy of an unallocated dvar_matrix" << endl;
linad99/fvar_mat.cpp:     cerr << " Error allocating memory in dvar_matrix contructor"<<endl;
linad99/fvar_mat.cpp:     cerr << " Error allocating memory in dvar_matrix contructor"<<endl;
linad99/fvar_mat.cpp:     //cerr << "Warning -- trying to delete an unallocated dvar_matrix"<<endl;
linad99/fvar_mat.cpp:       cerr << " Incompatible array bounds in dvar_matrix& operator = "
linad99/fvar_mat.cpp:     cerr << " Incompatible array bounds in dvar_matrix& operator = (_CONST dvar_vector&)\n";
linad99/fvar_op4.cpp:          cerr << "array bound exceeded -- index too low in prevariable::operator[]";
linad99/fvar_op4.cpp:          cerr << "array bound exceeded -- index too high in prevariable::operator[]";
linad99/fvar_op4.cpp:          cerr << "array bound exceeded -- index too low in prevariable::operator[]";
linad99/fvar_op4.cpp:          cerr << "array bound exceeded -- index too high in prevariable::operator[]";
linad99/fvar_op4.cpp:          cerr << "array bound exceeded -- index too low in prevariable::operator[]";
linad99/fvar_op4.cpp:          cerr << "array bound exceeded -- index too high in prevariable::operator[]";
linad99/fvar_op4.cpp:          cerr << "array bound exceeded -- index too low in prevariable::operator[]";
linad99/fvar_op4.cpp:          cerr << "array bound exceeded -- index too high in prevariable::operator[]";
linad99/fvar_op5.cpp:            cerr << "Illegal ptr value" << endl;
linad99/fvarm1_i.cpp:        cerr << " Error in dvar_matrix read\n";
linad99/fvarm1_i.cpp:        cerr << " Error in dvar_matrix write\n";
linad99/fvarm_io.cpp:      cerr << " Error in dvar_matrix read\n";
linad99/fvma_acc.cpp:          cerr << "array bound exceeded -- index too low in dvar_matrix::operator(int,int)"
linad99/fvma_acc.cpp:          cerr << "array bound exceeded -- index too high in dvar_matrix::operator(int,int)"
linad99/fvma_acc.cpp:          cerr << "array bound exceeded -- index too low in dvar_matrix::operator(int,int)"
linad99/fvma_acc.cpp:          cerr << "array bound exceeded -- index too high in dvar_matrix::operator(int,int)"
linad99/fvma_acc.cpp:       cerr << "matrix bound exceeded -- row index too low in dvar_matrix::operator[]"
linad99/fvma_acc.cpp:       cerr << "matrix bound exceeded -- row index too high in dvar_matrix::operator[]"
linad99/fvma_acc.cpp:          cerr << "array bound exceeded -- index too low in dvar_matrix::operator(int,int)"
linad99/fvma_acc.cpp:          cerr << "array bound exceeded -- index too low in dvar_matrix::operator(int,int)"
linad99/fvma_acc.cpp:          cerr << "array bound exceeded -- index too high in dvar_matrix::operator(int,int)"
linad99/fvma_acc.cpp:          cerr << "array bound exceeded -- index too high in dvar_matrix::operator(int,int)"
linad99/fvma_acc.cpp:       cerr << "matrix bound exceeded -- row index too low in dvar_matrix::operator[]"
linad99/fvma_acc.cpp:       cerr << "matrix bound exceeded -- row index too high in dvar_matrix::operator[]"
linad99/gaussher.cpp:    cerr << " Vector size mismatch in Gauss_hermite routine" << endl;
linad99/gaussher.cpp:    if (its > maxit) cerr << "too many iterations in gaussher" << endl;
linad99/gaussher.cpp:    cerr << " Vector size mismatch in Gauss_hermite routine" << endl;
linad99/getopt.cpp:        cerr << error_message << endl;
linad99/gradstak.cpp:      cerr << "Memory allocation error in grad_stack constructor\n"
linad99/gradstak.cpp:          cerr << "Wrong number of options to -slave -- must be 1"
linad99/gradstak.cpp:     cerr << "Error closing file " << gradfile_name1 << "\n";
linad99/gradstak.cpp:     cerr << "Error closing file " << gradfile_name2 << "\n";
linad99/gradstak.cpp:     cerr << "Error closing file " << var_store_file_name << "\n";
linad99/gradstak.cpp:	cerr <<"   File name: " << gradfile_name << "\n";
linad99/gradstak.cpp:	cerr <<"   File length: "
linad99/gradstak.cpp:	cerr <<"   Attempting to write " << nbw <<" bytes; wrote " << ierr << ".\n";
linad99/gradstak.cpp:    cerr <<"  Attempting to open " << var_store_file_name <<"\n";
linad99/gradstak.cpp:    cerr <<"  Attempting to open " << gradfile_name2 <<"\n";
linad99/gradstak.cpp:    cerr << "Attempted to open a third gradient file -- There is\n"
linad99/gradstrc.cpp:       cerr << "Error closing file " << gradient_structure::GRAD_STACK1->gradfile_name1 << "\n";
linad99/gradstrc.cpp:       cerr << "Error closing file " << gradient_structure::GRAD_STACK1->gradfile_name2 << "\n";
linad99/gradstrc.cpp:       cerr << "Error closing file " << gradient_structure::GRAD_STACK1->var_store_file_name << "\n";
linad99/gradstrc.cpp:      cerr << "Wrong number of options to -mdl -- must be 1"
linad99/gradstrc.cpp:    cerr << "sizeof(char) is not equal 1) --"
linad99/gradstrc.cpp:    cerr << "sizeof(dlink) is greater than 2*sizeof(double) --"
linad99/gradstrc.cpp:     cerr << "More than one gradient_structure object has been declared.\n"
linad99/gradstrc.cpp:      cerr << "  0 Trying to allocate to a non NULL pointer in gradient"
linad99/gradstrc.cpp:         cerr << "Usage -ndv option needs integer  -- ignored" << endl;
linad99/gradstrc.cpp:           cerr << "Usage -ndv option needs positive integer"
linad99/gradstrc.cpp:      cerr << "  0 Trying to allocate to a non NULL pointer in gradient"
linad99/gradstrc.cpp:     cerr <<" In gradient_structure::gradient_structure()\n";
linad99/gradstrc.cpp:     cerr <<"  ARRAY_MEMBLOCK_SIZE = " << ARRAY_MEMBLOCK_SIZE << "\n";
linad99/gradstrc.cpp:      cerr << "  1 Trying to allocate to a non NULL pointer in gradient structure \n";
linad99/gradstrc.cpp:      cerr << "  2 Trying to allocate to a non NULL pointer in gradient structure \n";
linad99/gradstrc.cpp:      cerr << "  2 Trying to allocate to a non NULL pointer in gradient structure \n";
linad99/gradstrc.cpp:     cerr << "insufficient memory to allocate space for ARRAY_MEMBLOCKa\n";
linad99/gradstrc.cpp:      cerr << "  3b Trying to allocate to a non NULL pointer in gradient structure \n";
linad99/gradstrc.cpp:      cerr << " 3 Trying to allocate to a non NULL pointer\n";
linad99/gradstrc.cpp:      cerr << "  4 Trying to allocate to a non NULL pointer in gradient structure \n";
linad99/gradstrc.cpp:          cerr << "Wrong number of options to -mno -- must be 1"
linad99/gradstrc.cpp:      cerr << "   5 Trying to allocate to a non NULL pointer in gradient structure \n";
linad99/gradstrc.cpp:    cerr << " Overflow in RETURN_ARRAYS stack -- Increase NUM_RETURN_ARRAYS\n";
linad99/gradstrc.cpp:    cerr << " There may be a RETURN_ARRAYS_INCREMENT()\n";
linad99/gradstrc.cpp:    cerr << " which is not matched by a RETURN_ARRAYS_DECREMENT()\n";
linad99/gradstrc.cpp:    cerr << " Error -- RETURN_ARRAYS_PTR < 0  \n";
linad99/gradstrc.cpp:    cerr << " There must be a RETURN_ARRAYS_DECREMENT()\n";
linad99/gradstrc.cpp:    cerr << " which is not matched by a RETURN_ARRAYS_INCREMENT()\n";
linad99/gradstrc.cpp:     cerr << "Trying to farfree a NULL pointer in ~gradient_structure\n";
linad99/gradstrc.cpp:     cerr << "Trying to close stream referenced by a NULL pointer\n"
linad99/gradstrc.cpp:   cerr << "Trying to delete a NULL pointer in ~gradient_structure" << endl;
linad99/gradstrc.cpp:    cerr << " Error trying to allocate " << s << "\n";
linad99/gradstrc.cpp:        cerr << " Error in "
linad99/gs_set.cpp:    cerr << "Error -- variable '" << variable_name <<"' must be set before\n"
linad99/gs_set.cpp:  cerr << " This is not the way to set the ARRAY_MEMBLOCK_SIZE -- sorry\n"
linad99/gs_set.cpp:  cerr << " declaration  gradient_structure gs(num_bytes)\n"
linad99/gs_set.cpp:    cerr << "\n\n It appears that the size you are setting for "
linad99/gs_set.cpp:    cerr << "for the function\n"
linad99/gs_set.cpp:    cerr << "\n\n It appears that the size you are setting for "
linad99/gs_set.cpp:    cerr << "for the function\n"
linad99/gs_set.cpp:    cerr << "UINT_MAX = " << (unsigned long int) (UINT_MAX) << endl; 
linad99/gs_set.cpp:    cerr << " i = " << i << endl; 
linad99/gs_set.cpp:    cerr << " gs_size = " << gs_size << endl; 
linad99/gs_set.cpp:    cerr << " i*gs_size = " << i*gs_size << endl; 
linad99/gst_read.cpp:        cerr << "Error positioning temporary gradient file "
linad99/i3arr.cpp:    // cerr << "Warning -- trying to deallocate an unallocated i3_array"<<endl;
linad99/i3arr.cpp:     cerr << " Error allocating memory in i3_array contructor" << endl;
linad99/i3arr.cpp:     cerr << " Error allocating memory in i3_array contructor" << endl;
linad99/i3arr.cpp:     cerr << " Error allocating memory in i3_array contructor" << endl;
linad99/i3arr.cpp:     cerr << " Error allocating memory in i3_array contructor" << endl;
linad99/i3arr.cpp:     cerr << " Error allocating memory in i3_array contructor" << endl;
linad99/i3arr.cpp:     cerr << " Error allocating memory in i3_array contructor" << endl;
linad99/i3arr.cpp:     cerr << " Error allocating memory in i3_array contructor" << endl;
linad99/i3arr.cpp:     cerr << " Error allocating memory in i3_array contructor" << endl;
linad99/i3arr.cpp:     cerr << " Error allocating memory in i3_array contructor" << endl;
linad99/i3arr.cpp:     cerr << " Error allocating memory in i3_array contructor" << endl;
linad99/i3arr.cpp:     cerr << " Error allocating memory in i3_array contructor" << endl;
linad99/i3arr.cpp:     cerr << " Error allocating memory in i3_array contructor" << endl;
linad99/i3arr.cpp:     cerr << " Error allocating memory in i3_array contructor" << endl;
linad99/i3arr.cpp:     cerr << " Error allocating memory in i3_array contructor" << endl;
linad99/i3arr.cpp:     cerr << "Making a copy of an unallocated d3_array"<<endl;
linad99/i3arr.cpp:     //cerr << "Warning -- trying to deallocate an unallocated imatrix"<<endl;
linad99/i3arr1.cpp:	  cerr << "array bound exceeded -- slice index too low in i3_array::operator(int,int)";
linad99/i3arr1.cpp:	  cerr << "array bound exceeded -- slice index too high in i3_array::operator(int,int)";
linad99/i3arr1.cpp:	  cerr << "array bound exceeded -- slice index too low in i3_array::operator(int,int)";
linad99/i3arr1.cpp:	  cerr << "array bound exceeded -- slice index too high in i3_array::operator(int,int)";
linad99/i3arr1.cpp:       cerr << "matrix bound exceeded -- row index too low in 3d_array::operator[]"
linad99/i3arr1.cpp:       cerr << "matrix bound exceeded -- row index too high in 3d_array::operator[]"
linad99/i3arr1.cpp:       cerr << "matrix bound exceeded -- row index too low in 3d_array::operator[]"
linad99/i3arr1.cpp:       cerr << "matrix bound exceeded -- row index too high in 3d_array::operator[]"
linad99/i3arr8.cpp:	  cerr << "array bound exceeded -- slice index too low in i3_array::operator(int,int)";
linad99/i3arr8.cpp:	  cerr << "array bound exceeded -- slice index too high in i3_array::operator(int,int)";
linad99/i3arr8.cpp:	  cerr << "array bound exceeded -- slice index too low in i3_array::operator(int,int)";
linad99/i3arr8.cpp:	  cerr << "array bound exceeded -- slice index too high in i3_array::operator(int,int)";
linad99/i3arr8.cpp:       cerr << "matrix bound exceeded -- row index too low in 3d_array::operator[]"
linad99/i3arr8.cpp:       cerr << "matrix bound exceeded -- row index too high in 3d_array::operator[]"
linad99/i3arr8.cpp:       cerr << "matrix bound exceeded -- row index too low in 3d_array::operator[]"
linad99/i3arr8.cpp:       cerr << "matrix bound exceeded -- row index too high in 3d_array::operator[]"
linad99/i3arr8.cpp:     cerr << " Incompatible array bounds in i3_array& operator = (_CONST i3_array&)\n";
linad99/i4arr.cpp:      cerr << " Error allocating memory in i4_array contructor\n";
linad99/i4arr.cpp:      cerr << " Error allocating memory in i4_array contructor\n";
linad99/i4arr.cpp:       cerr << " Error allocating memory in i4_array contructor\n";
linad99/i4arr.cpp:       cerr << " Error allocating memory in i4_array contructor\n";
linad99/i4arr.cpp:       cerr << " Error allocating memory in i4_array contructor\n";
linad99/i4arr.cpp:       cerr << " Error allocating memory in i4_array contructor\n";
linad99/i4arr.cpp:	cerr << "Index out of bounds in i4_array::operator () (int)"
linad99/i4arr.cpp:	cerr << "Index out of bounds in i4_array::operator () (int)"
linad99/i4arr.cpp:	cerr << "Index out of bounds in i4_array::operator () (int)"
linad99/i4arr.cpp:	cerr << "Index out of bounds in i4_array::operator () (int)"
linad99/i5arr.cpp:      cerr << " Error allocating memory in i5_array contructor\n";
linad99/i5arr.cpp:      cerr << " Error allocating memory in i5_array contructor\n";
linad99/i5arr.cpp:       cerr << " Error allocating memory in i5_array contructor\n";
linad99/i5arr.cpp:       cerr << " Error allocating memory in i5_array contructor\n";
linad99/i5arr.cpp:       cerr << " Error allocating memory in i5_array contructor\n";
linad99/i5arr.cpp:       cerr << " Error allocating memory in i5_array contructor\n";
linad99/i5arr.cpp:	cerr << "Index out of bounds in i5_array::operator () (int)"
linad99/i5arr.cpp:	cerr << "Index out of bounds in i5_array::operator () (int)"
linad99/i5arr.cpp:	cerr << "Index out of bounds in i5_array::operator () (int)"
linad99/i5arr.cpp:	cerr << "Index out of bounds in i5_array::operator () (int)"
linad99/imat.cpp:       cerr << " Error allocating memory in imatrix contructor\n";
linad99/imat.cpp:       cerr << " Error allocating memory in imatrix contructor\n";
linad99/imat.cpp:       cerr << " Error allocating memory in imatrix contructor\n";
linad99/imat.cpp:       cerr << " Error allocating memory in imatrix contructor\n";
linad99/imat.cpp:       cerr << " Error allocating memory in imatrix contructor\n";
linad99/imat.cpp:       cerr << " Error allocating memory in imatrix contructor\n";
linad99/imat.cpp:       cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,_CONST ivector& ncl,_CONST ivector& nch)\n";
linad99/imat.cpp:       cerr << " Error allocating memory in imatrix contructor\n";
linad99/imat.cpp:       cerr << "Incompatible array bounds in imatrix::allocate(int nrl,int nrh,int ncl,_CONST ivector& nch)\n";
linad99/imat.cpp:       cerr << " Error allocating memory in imatrix contructor\n";
linad99/imat.cpp:       cerr << " Error allocating memory in imatrix contructor\n";
linad99/imat.cpp:       cerr << " Error allocating memory in imatrix contructor\n";
linad99/imat1.cpp:       cerr << "matrix bound exceeded -- row index too low in imatrix::operator[]"
linad99/imat1.cpp:       cerr << "matrix bound exceeded -- row index too high in imatrix::operator[]"
linad99/imat1.cpp:       cerr << "matrix bound exceeded -- row index too low in imatrix::operator[]"
linad99/imat1.cpp:       cerr << "matrix bound exceeded -- row index too high in imatrix::operator[]"
linad99/imat10.cpp:    cerr << "Error matrix not square in function diagonal" << endl;
linad99/imat10.cpp:     cerr << " Incompatible array bounds in imatrix  operator * (_CONST imatrix& x,_CONST imatrix& m)\n";
linad99/imat2.cpp:       cerr << "matrix bound exceeded -- row index too low in imatrix::operator()(int, int)"
linad99/imat2.cpp:       cerr << "matrix bound exceeded -- row index too high in imatrix::operator()(int, int)"
linad99/imat2.cpp:       cerr << "matrix bound exceeded -- column index too low in imatrix::operator()(int, int)"
linad99/imat2.cpp:       cerr << "matrix bound exceeded -- column index too high in imatrix::operator()(int, int)"
linad99/imat2.cpp:       cerr << "matrix bound exceeded -- row index too low in imatrix::operator()(int, int)"
linad99/imat2.cpp:       cerr << "matrix bound exceeded -- row index too high in imatrix::operator()(int, int)"
linad99/imat2.cpp:       cerr << "matrix bound exceeded -- column index too low in imatrix::operator()(int, int)"
linad99/imat2.cpp:       cerr << "matrix bound exceeded -- column index too high in imatrix::operator()(int, int)"
linad99/imat4.cpp:       cerr << "matrix bound exceeded -- row index too low in imatrix::operator[]"
linad99/imat4.cpp:       cerr << "matrix bound exceeded -- row index too high in imatrix::operator[]"
linad99/imat4.cpp:       cerr << "matrix bound exceeded -- row index too low in imatrix::operator[]"
linad99/imat4.cpp:       cerr << "matrix bound exceeded -- row index too high in imatrix::operator[]"
linad99/imat5.cpp:     cerr << rowmin() << endl;
linad99/imat5.cpp:     cerr << rowmax() << endl;
linad99/imat5.cpp:     cerr << m1.rowmin() << endl;
linad99/imat5.cpp:     cerr << m1.rowmax() << endl;
linad99/imat5.cpp:     cerr << colmin() << endl;
linad99/imat5.cpp:     cerr << colmax() << endl;
linad99/imat5.cpp:     cerr << m1.colmin() << endl;
linad99/imat5.cpp:     cerr << m1.colmax() << endl;
linad99/imat5.cpp:     cerr << " Incompatible array bounds in imatrix& operator = (_CONST imatrix&)\n";
linad99/imat6.cpp:    cerr << " Error allocating memory in imatrix contructor" << endl;
linad99/imat6.cpp:    cerr << " Error allocating memory in imatrix contructor" << endl;
linad99/imat7.cpp:    cerr << "Row out of bounds in function"
linad99/imat7.cpp:    cerr << "Row out of bounds in function"
linad99/imat_a.cpp:     cerr << "Incompatible array bounds in imatrix(int nrl,int nrh,BOR_CONST ivector& ncl,BOR_CONST ivector& nch)\n";
linad99/imat_a.cpp:     cerr << " Error allocating memory in imatrix contructor\n";
linad99/imat_a.cpp:     cerr << " Error allocating memory in imatrix contructor\n";
linad99/imat_a.cpp:     cerr << "Created a imatrix with adress "<< farptr_tolong(m)<<"\n";
linad99/indextyp.cpp:        cerr << "trying to delete a NULL optr in ~index_type()"  << endl;
linad99/indextyp.cpp:     cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,"
linad99/indextyp.cpp:     cerr << " Error allocating memory in dmatrix contructor" << endl;
linad99/indextyp.cpp:     cerr << " Error allocating memory in dmatrix contructor" << endl;
linad99/indextyp.cpp:     cerr << "Incompatible array bounds in i3_array(int nrl,int nrh,"
linad99/indextyp.cpp:     cerr << " Error allocating memory in i3_array contructor" << endl;
linad99/indextyp.cpp:     cerr << " Error allocating memory in i3_array contructor" << endl;
linad99/indextyp.cpp:     cerr << "Incompatible array bounds in i3_array(int nrl,int nrh,"
linad99/indextyp.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/indextyp.cpp:     cerr << " Error allocating memory in d3_array contructor" << endl;
linad99/indextyp.cpp:     cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,_CONST ivector& ncl,_CONST ivector& nch)\n";
linad99/indextyp.cpp:     cerr << " Error allocating memory in imatrix contructor\n";
linad99/indextyp.cpp:     cerr << " Error allocating memory in imatrix contructor\n";
linad99/indextyp.cpp:     cerr << " Error trying to allocate memory for dvector\n";
linad99/indextyp.cpp:     cerr << "Error trying to allocate memory for dvector\n";
linad99/indextyp.cpp:     cerr << " Error trying to allocate memory for dvector\n";
linad99/indextyp.cpp:     cerr << "Error trying to allocate memory for dvector\n";
linad99/ivec7.cpp:       cerr << "\nattempting to acces non-allocated ivector in ivector::operator[]";
linad99/ivec7.cpp:       cerr << endl;
linad99/ivec7.cpp:       cerr << "\narray bound exceeded -- index too high in ivector::operator[]";
linad99/ivec7.cpp:       cerr << "index value " << i << " max value " << indexmax() << endl;
linad99/ivec7.cpp:       cerr << endl;
linad99/ivec7.cpp:       cerr << "\narray bound exceeded -- index too low in ivector::operator[]";
linad99/ivec7.cpp:       cerr << endl;
linad99/ivec7.cpp:       cerr << "\nattempting to acces non-allocated ivector in ivector::operator()";
linad99/ivec7.cpp:       cerr << endl;
linad99/ivec7.cpp:       cerr << "\narray bound exceeded -- index too high in ivector::operator()";
linad99/ivec7.cpp:       cerr << "index value " << i << " max value " << indexmax() << endl;
linad99/ivec7.cpp:       cerr << endl;
linad99/ivec7.cpp:       cerr << "\narray bound exceeded -- index too low in ivector::operator[]";
linad99/ivec7.cpp:       cerr << endl;
linad99/ivec7.cpp:       cerr << "\nattempting to acces non-allocated ivector in ivector::operator[]";
linad99/ivec7.cpp:       cerr << endl;
linad99/ivec7.cpp:       cerr << "\narray bound exceeded -- index too high in ivector::operator[]";
linad99/ivec7.cpp:       cerr << "index value " << i << " max value " << indexmax() << endl;
linad99/ivec7.cpp:       cerr << endl;
linad99/ivec7.cpp:       cerr << "\narray bound exceeded -- index too low in ivector::operator[]";
linad99/ivec7.cpp:       cerr << endl;
linad99/ivec7.cpp:       cerr << "\nattempting to acces non-allocated ivector in ivector::operator()";
linad99/ivec7.cpp:       cerr << endl;
linad99/ivec7.cpp:       cerr << "\narray bound exceeded -- index too high in ivector::operator()";
linad99/ivec7.cpp:       cerr << "index value " << i << " max value " << indexmax() << endl;
linad99/ivec7.cpp:       cerr << endl;
linad99/ivec7.cpp:       cerr << "\narray bound exceeded -- index too low in ivector::operator[]";
linad99/ivec7.cpp:       cerr << endl;
linad99/ivec9.cpp:       cerr << " Incompatible array sizes in ivector::operator +=" << endl;
linad99/ivect_io.cpp:       cerr << " Error in ivector write\n";
linad99/ivector.cpp:         cerr << " Trying to delete NULL pointer in ~ivector\n";
linad99/ivector.cpp:     cerr << "trying to allocate an already allocated dvector " << endl;
linad99/ivector.cpp:        cerr << "trying to deallocate a dvector with copies" << endl;
linad99/ivector.cpp:     //cerr << "Warning -- trying to deallocate an unitialized ivector"
linad99/ivector.cpp:         cerr << " Array sizes do not match in ivector operator"
linad99/ivector.cpp:     //cerr << "Error in ivector constructor max index must be >= minindex\n"
linad99/ivector.cpp:       cerr << " Error trying to allocate memory for ivector\n";
linad99/ivector.cpp:       cerr << "Error trying to allocate memory for ivector\n";
linad99/ivector.cpp:     cerr << "Taking a subvector  of an unallocated ivector"<<endl;
linad99/ivsort.cpp:         cerr << "Need to increase the stack in sort(_CONST ivector&)\n";
linad99/ivsort.cpp:    cerr << " Incompatible array sizes in vector v and ivector index\n"
linad99/ivsort.cpp:         cerr << "Need to increase the stack in sort(_CONST ivector&)\n";
linad99/jacob2.cpp:        cerr << "warning -- calling gradcalc when no calculations generating"
linad99/jacob3.cpp:        cerr << "warning -- calling gradcalc when no calculations generating"
linad99/jacobclc.cpp:    cerr << "Error in jacobcalc jacobian must have minimum valid"
linad99/jacobclc.cpp:    cerr << "Error in jacobcalc jacobian must have maximumvalid"
linad99/jacobclc.cpp:      cerr  << "jacobian matrix minimum column index must equal 1"
linad99/jacobclc.cpp:      cerr  << "jacobian matrix column size is less than the number of"
linad99/jacobclc.cpp:        cerr << "warning -- calling gradcalc when no calculations generating"
linad99/lmat.cpp:     cerr << " Error allocating memory in lmatrix contructor\n";
linad99/lmat.cpp:     cerr << " Error allocating memory in lmatrix contructor\n";
linad99/lmat.cpp:     cerr << " Error allocating memory in lmatrix contructor\n";
linad99/lmat.cpp:     cerr << "Incompatible array bounds in dmatrix(int nrl,int nrh,_CONST ivector& ncl,_CONST ivector& nch)\n";
linad99/lmat.cpp:     cerr << " Error allocating memory in lmatrix contructor\n";
linad99/lmat.cpp:     cerr << "Incompatible array bounds in lmatrix::allocate(int nrl,int nrh,int ncl,_CONST ivector& nch)\n";
linad99/lmat.cpp:     cerr << " Error allocating memory in lmatrix contructor\n";
linad99/lmat.cpp:     cerr << " Error allocating memory in lmatrix contructor\n";
linad99/lmat.cpp:     //cerr << "Warning -- trying to deallocate an unallocated lmatrix"<<endl;
linad99/lmat1.cpp:       cerr << "matrix bound exceeded -- row index too low in lmatrix::operator[]"
linad99/lmat1.cpp:       cerr << "matrix bound exceeded -- row index too high in lmatrix::operator[]"
linad99/lmat1.cpp:       cerr << "matrix bound exceeded -- row index too low in lmatrix::operator[]"
linad99/lmat1.cpp:       cerr << "matrix bound exceeded -- row index too high in lmatrix::operator[]"
linad99/lmat2.cpp:       cerr << "matrix bound exceeded -- row index too low in lmatrix::operator()(int, int)"
linad99/lmat2.cpp:       cerr << "matrix bound exceeded -- row index too high in lmatrix::operator()(int, int)"
linad99/lmat2.cpp:       cerr << "matrix bound exceeded -- column index too low in lmatrix::operator()(int, int)"
linad99/lmat2.cpp:       cerr << "matrix bound exceeded -- column index too high in lmatrix::operator()(int, int)"
linad99/lmat2.cpp:       cerr << "matrix bound exceeded -- row index too low in lmatrix::operator()(int, int)"
linad99/lmat2.cpp:       cerr << "matrix bound exceeded -- row index too high in lmatrix::operator()(int, int)"
linad99/lmat2.cpp:       cerr << "matrix bound exceeded -- column index too low in lmatrix::operator()(int, int)"
linad99/lmat2.cpp:       cerr << "matrix bound exceeded -- column index too high in lmatrix::operator()(int, int)"
linad99/lmat4.cpp:       cerr << "matrix bound exceeded -- row index too low in imatrix::operator[]"
linad99/lmat4.cpp:       cerr << "matrix bound exceeded -- row index too high in imatrix::operator[]"
linad99/lmat4.cpp:       cerr << "matrix bound exceeded -- row index too low in imatrix::operator[]"
linad99/lmat4.cpp:       cerr << "matrix bound exceeded -- row index too high in imatrix::operator[]"
linad99/lmat5.cpp:     cerr << " Incompatible array bounds in imatrix& operator = (_CONST imatrix&)\n";
linad99/lmat5.cpp:     cerr << " Incompatible array bounds in imatrix& operator = (_CONST imatrix&)\n";
linad99/lmat6.cpp:    cerr << " Error allocating memory in imatrix contructor" << endl;
linad99/lmat6.cpp:    cerr << " Error allocating memory in imatrix contructor" << endl;
linad99/lmat7.cpp:    cerr << "Row out of bounds in function"
linad99/lmat7.cpp:    cerr << "Row out of bounds in function"
linad99/lmat_a.cpp:     cerr << "Incompatible array bounds in lmatrix(int nrl,int nrh,BOR_CONST ivector& ncl,BOR_CONST ivector& nch)\n";
linad99/lmat_a.cpp:     cerr << " Error allocating memory in lmatrix contructor\n";
linad99/lmat_a.cpp:     cerr << " Error allocating memory in lmatrix contructor\n";
linad99/lmat_a.cpp:     cerr << "Created a lmatrix with adress "<< farptr_tolong(m)<<"\n";
linad99/lvec1.cpp:       cerr << "array bound exceeded -- index too high in lvector::operator[]";
linad99/lvec1.cpp:       cerr << "array bound exceeded -- index too low in lvector::operator[]";
linad99/lvec1.cpp:       cerr << "array bound exceeded -- index too high in lvector::operator[]";
linad99/lvec1.cpp:       cerr << "array bound exceeded -- index too low in lvector::operator[]";
linad99/lvec2.cpp:       cerr << "array bound exceeded -- index too high in lvector::operator[]";
linad99/lvec2.cpp:       cerr << "array bound exceeded -- index too low in lvector::operator[]";
linad99/lvec2.cpp:       cerr << "array bound exceeded -- index too high in lvector::operator[]";
linad99/lvec2.cpp:       cerr << "array bound exceeded -- index too low in lvector::operator[]";
linad99/lvect_io.cpp:       cerr << " Error in lvector write\n";
linad99/lvect_io.cpp:       cerr << " Error in lvector write\n";
linad99/lvector.cpp:         cerr << " Trying to delete NULL pointer in ~lvector\n";
linad99/lvector.cpp:     cerr << "Trying to delete an unallocated lvector" << endl;
linad99/lvector.cpp:     cerr << " Error trying to allocate memory for ivector\n";
linad99/lvector.cpp:     cerr << " Error trying to allocate memory for ivector\n";
linad99/lvector.cpp:       cerr << " Array sizes do not match in lvector operator =(_CONST lvector&)\n";
linad99/lvector.cpp:     cerr << " Error trying to allocate memory for lvector\n";
linad99/lvector.cpp:     cerr << "Error trying to allocate memory for lvector\n";
linad99/lvector.cpp:     cerr << " Error trying to allocate memory for lvector\n";
linad99/lvector.cpp:     cerr << " Error trying to allocate memory for lvector\n";
linad99/lvector.cpp:     cerr << " Error trying to allocate memory for lvector\n";
linad99/lvector.cpp:     cerr << " Error trying to allocate memory for lvector\n";
linad99/makesub.cpp:  cerr << "ad_mkdir not defined for this compiler" << endl;
linad99/model49.cpp:       cerr << "Index too low in param_init_vector_vector operator []"
linad99/model49.cpp:       cerr << "Index too high in param_init_vector_vector operator []"
linad99/model49.cpp:       cerr << "Index too low in param_init_vector_vector operator ()"
linad99/model49.cpp:       cerr << "Index too high in param_init_vector_vector operator ()"
linad99/model49.cpp:       cerr << "Index too low in param_init_vector_vector operator ()"
linad99/model49.cpp:       cerr << "Index too high in param_init_vector_vector operator ()"
linad99/model49.cpp:       cerr << "Index too low in param_init_matrix_vector operator []"
linad99/model49.cpp:       cerr << "Index too high in param_init_matrix_vector operator []"
linad99/model49.cpp:       cerr << "Index too low in param_init_matrix_vector operator ()"
linad99/model49.cpp:       cerr << "Index too high in param_init_matrix_vector operator ()"
linad99/model49.cpp:       cerr << "Index too low in param_init_matrix_vector operator ()"
linad99/model49.cpp:       cerr << "Index too high in param_init_matrix_vector operator ()"
linad99/model49.cpp:       cerr << "Index too low in param_init_matrix_vector operator ()"
linad99/model49.cpp:       cerr << "Index too high in param_init_matrix_vector operator ()"
linad99/model49.cpp:       cerr << "Index too low in param_init_bounded_vector_vector operator []"
linad99/model49.cpp:       cerr << "Index too high in param_init_bounded_vector_vector operator []"
linad99/model49.cpp:       cerr << "Index too low in param_init_bounded_vector_vector operator ()"
linad99/model49.cpp:       cerr << "Index too high in param_init_bounded_vector_vector operator ()"
linad99/model49.cpp:       cerr << "Index too low in param_init_bounded_vector_vector operator ()"
linad99/model49.cpp:       cerr << "Index too high in param_init_bounded_vector_vector operator ()"
linad99/model49.cpp:       cerr << "Index too low in param_init_bounded_matrix_vector operator []"
linad99/model49.cpp:       cerr << "Index too high in param_init_bounded_matrix_vector operator []"
linad99/model49.cpp:       cerr << "Index too low in param_init_bounded_matrix_vector operator ()"
linad99/model49.cpp:       cerr << "Index too high in param_init_bounded_matrix_vector operator ()"
linad99/model49.cpp:       cerr << "Index too low in param_init_bounded_matrix_vector operator ()"
linad99/model49.cpp:       cerr << "Index too high in param_init_bounded_matrix_vector operator ()"
linad99/model49.cpp:       cerr << "Index too low in param_init_bounded_matrix_vector operator ()"
linad99/model49.cpp:       cerr << "Index too high in param_init_bounded_matrix_vector operator ()"
linad99/model49.cpp:       cerr << "Index too low in param_init_number_vector operator []"
linad99/model49.cpp:       cerr << "Index too high in param_init_number_vector operator []"
linad99/model49.cpp:       cerr << "Index too low in param_init_number_vector operator ()"
linad99/model49.cpp:       cerr << "Index too high in param_init_number_vector operator ()"
linad99/model49.cpp:       cerr << "Index too low in param_init_bounded_number_vector operator []"
linad99/model49.cpp:       cerr << "Index too high in param_init_bounded_number_vector operator []"
linad99/model49.cpp:       cerr << "Index too low in param_init_bounded_number_vector operator ()"
linad99/model49.cpp:       cerr << "Index too high in param_init_bounded_number_vector operator ()"
linad99/newdar.cpp:    cerr << "Error -- you are trying to create a dvar_vector object"
linad99/newdar.cpp:    cerr << "Error allocating new arr_link" << endl;
linad99/newfmin.cpp:       cerr << "Error -- the number of active parameters"
linad99/newfmin.cpp:       cerr << "Error -- minimum valid index"
linad99/newfmin.cpp:       cerr << "Error -- the size of the independent_variables"
linad99/newfmin.cpp:       cerr << "Error -- minimum valid index"
linad99/newfmin.cpp:       cerr << "Error -- the size of the gradient vector"
linad99/newreg2.cpp:    cerr << "Index limits on observed vector are not equal to the Index\n"
linad99/newreg2.cpp:    cerr << "Index limits on observed vector are not equal to the Index\n"
linad99/normmix2.cpp:    cerr << "shit" << endl;
linad99/orthply2.cpp:    cerr << "matrix shapes unequal in"
linad99/orthply2.cpp:    cerr << "matrix shapes unequal in"
linad99/orthpoly.cpp:    cerr << "nconst too large in orthpoly_constant_begin"
linad99/orthpoly.cpp:    cerr << "deg too large in orthpoly_constant_begin"
linad99/orthpoly.cpp:    cerr << "nconst_begin too large in orthpoly_constant_begin"
linad99/orthpoly.cpp:    cerr << "deg too large in orthpoly_constant_begin"
linad99/ptr_vec.cpp:       cerr << " Trying to delete NULL pointer in ~ivector\n";
linad99/ptr_vec.cpp:       cerr << " Array sizes do not match in ptr_vector operator =(_CONST ivector&)\n";
linad99/ptr_vec.cpp:     cerr << " Error trying to allocate memory for ivector\n";
linad99/ptr_vec.cpp:     cerr << " Error trying to allocate memory for ivector\n";
linad99/ptr_vec.cpp:       cerr << "array bound exceeded -- index too high in ivector::operator[]";
linad99/ptr_vec.cpp:       cerr << "array bound exceeded -- index too low in ivector::operator[]";
linad99/ptr_vec.cpp:       cerr << "array bound exceeded -- index too high in ivector::operator[]";
linad99/ptr_vec.cpp:       cerr << "array bound exceeded -- index too low in ivector::operator[]";
linad99/ranf_ni.cpp:      cerr << "Error in dvar_vector::fill_randbi proportions of"
linad99/ranf_ni2.cpp:      cerr << "Error in dvar_vector::fill_randbi proportions of"
linad99/ranfill.cpp:  if (j > 107 || j < 1) cerr << " Error in random number generator\n"; 
linad99/ranfill.cpp:      cerr << "Error in dvar_vector::fill_randbi proportions of"
linad99/ranfill2.cpp:      cerr << "Error in dvar_vector::fill_randbi proportions of"
linad99/rannegbn.cpp:    cerr << "Error in randnegbinomial overdispersion must be >=1" << endl;
linad99/rngen.cpp:    cerr << "Error in dvar_vector::fill_randbi proportions of"
linad99/sdmat.cpp:     cerr << "created a ncopies with address "<< farptr_tolong(ncopies)<<"\n";
linad99/sdmat.cpp:     cerr << "Created a sdmatrix with adress "<< farptr_tolong(m)<<"\n";
linad99/sdmat.cpp:       cerr << "Created a dvector with address "<< farptr_tolong(*(m+i))<<"\n";
linad99/set.cpp:        cerr << "index out of range in set_value_patial(_CONST dvar_vector&, ... "
linad99/set.cpp:        cerr << "index out of range in set_value_patial(_CONST dvar_vector&, ... "
linad99/setin.cpp:      cerr << "index out of range in set_value_patial(_CONST dvar_vector&, ... "
linad99/setin.cpp:      cerr << "index out of range in set_value_patial(_CONST dvar_vector&, ... "
linad99/setin.cpp:      cerr << "index out of range in set_value_patial(_CONST dvar_vector&, ... "
linad99/setin.cpp:      cerr << "index out of range in set_value_patial(_CONST dvar_vector&, ... "
linad99/sgradclc.cpp:      cerr << "nvar != gradient_structure::NVAR in gradcalc" << endl;
linad99/sgradclc.cpp:      cerr << "  nvar = " << nvar << endl;
linad99/sgradclc.cpp:      cerr << "  gradient_structure::NVAR = " << gradient_structure::NVAR 
linad99/sgradclc.cpp:      cerr << "  in " __FILE__ << endl;
linad99/sgradclc.cpp:    cerr  << "gradient vector size is less than the number of variables" << endl;
linad99/sgradclc.cpp:      cerr << "warning -- calling gradcalc when no calculations generating"
linad99/sgradclc.cpp:     cerr << "insufficient memory to allocate space for ARRAY_MEMBLOCK"
linad99/sgradclc.cpp:    cerr << "insufficient memory to allocate space for dvariables"
linad99/slgrdclc.cpp:        cerr << "warning -- calling gradcalc when no calculations generating"
linad99/tsdfpool.cpp:    cerr << "incorrect size requested in dfpool" << endl;
linad99/vbetacf.cpp:    cerr << "a or b too big, or MAXIT too small in cumulative beta function"
linad99/vbetai.cpp:  if (x < 0.0 || x > 1.0) cerr << "Bad x in routine betai" << endl;
linad99/vcumdbetainv.cpp:  if (x < 0.0 || x > 1.0) cerr << "Bad x in routine betai" << endl;
linad99/vcumdbetainv.cpp:    cerr << "num interations exceeded " << endl;
linad99/vcumdist.cpp:    //cerr << "Illegal argument to inv_cumd_norm = " << x << endl;
linad99/vcumdist.cpp:    cerr << "Error in dvariable inv_cumd_norm_logistic -- illegal p value = " 
linad99/vgamdev.cpp:    cerr << "Invalid arguments in routine gammp" << endl;
linad99/vgamdev.cpp:    cerr << "a too large, ITMAX too small in gcf" << endl;
linad99/vgamdev.cpp:      cerr << "x less than 0 in routine gser" << endl;
linad99/vgamdev.cpp:    cerr << "a too large, ITMAX too small in routine gser" << endl;
linad99/vgamdev.cpp:    cerr << "a musdt be > 0.1" << endl;
linad99/vgamdev.cpp:      cerr << "Error in inv_cumd_gamma"
linad99/vgamdev.cpp:      cerr << "convergence error" << endl;
linad99/vgamdev.cpp:      cerr << "this can't happen" << endl;
linad99/vnegbin.cpp:      cerr << "tau <=1 in log_negbinomial_density " << endl;
linad99/vnegbin.cpp:      cerr << "tau <=1 in log_negbinomial_density " << endl;
linad99/vspline.cpp:    cerr << " Incompatible bounds in input to spline" << endl;
linad99/vspline.cpp:    cerr << " Incompatible bounds in input to spline" << endl;
linad99/vspline.cpp:    cerr << " Incompatible bounds in input to spline" << endl;
linad99/xdoublind.h:    virtual operator double () { cerr << "Error in index_type"
linad99/xgradclc.cpp:      cerr << "warning -- calling funnel_gradcalc when no calculations generating"
nh99/admodel.h:  virtual void pvm_pack(void) { cerr << "Error" << endl; ad_exit(1);}
nh99/admodel.h:  virtual void pvm_unpack(void) { cerr << "Error" << endl; ad_exit(1);}
nh99/amoeba.cpp:	cerr << "NMAX exceeded" << endl;
nh99/cnstrs.cpp:    cerr << "Memory error in doublestar" << endl;
nh99/cnstrs.cpp:    cerr << "Memory error in intstar" << endl;
nh99/con2fmin.cpp:      cerr << "Usage -maxph uerton needs integer  -- ignored" << endl;
nh99/con2fmin.cpp:        cerr << "Usage -maxph uerton needs positive integer  -- ignored" << endl;
nh99/con2fmin.cpp:      cerr << "Usage -maxph uerton needs integer  -- ignored" << endl;
nh99/con2fmin.cpp:        cerr << "Usage -maxfn uerton needs positive integer  -- ignored" << endl;
nh99/con2fmin.cpp:      cerr << "Usage -crit uerton needs number  -- ignored" << endl;
nh99/con2fmin.cpp:        cerr << "Usage -crit uerton needs positive number  -- ignored" << endl;
nh99/con2fmin.cpp:      cerr << " Inwwuq4 uerton followinumberv command line uerton -phase -- " 
nh99/con2fmin.cpp:      cerr << "Error -- no active parameters. There must be at least 1" 
nh99/df1b2stub.cpp:      cerr << "Usage -iprint option needs integer  -- ignored" << endl;
nh99/df1b2stub.cpp:      cerr << "Usage -iprint option needs integer  -- ignored" << endl;
nh99/dfqromb.cpp:  cerr << "Too many steps in routine QROMB" << endl;
nh99/dfqromb.cpp:  cerr << "Too many steps in routine QROMB" << endl;
nh99/dfqromb.cpp:  cerr << "Too many steps in routine QROMB" << endl;
nh99/dfqromb.cpp:  cerr << "Too many steps in routine QROMB" << endl;
nh99/dfqromb.cpp:        cerr << "Error in routine POLINT" << endl;
nh99/getbigs.cpp:    cerr << " tmp_nvar != nvar1 in file " << tmpstring
nh99/getbigs.cpp:        cerr << "Error reading from file " << tmpstring << endl;
nh99/getbigs.cpp:        cerr << "size error in file " << tmpstring << endl;
nh99/getbigs.cpp:        cerr << "Error reading from file " << tmpstring << endl;
nh99/getbigs.cpp:        cerr << "error in sizes in mod_sd" << endl;
nh99/getbigs.cpp:        cerr << "error in sizes in mod_sd" << endl;
nh99/getbigs.cpp: //     cerr << "Error reading from file " << tmpstring << endl;
nh99/getbigs.cpp: //     cerr << "size error in file " << tmpstring << endl;
nh99/getbigs.cpp: //     cerr << "Error reading from file " << tmpstring << endl;
nh99/hybmcmc.cpp:    cerr << " You must declare at least one object of type sdreport "
nh99/hybmcmc.cpp:        cerr << "Usage -hyeps option needs number  -- ignored" << endl;
nh99/hybmcmc.cpp:          cerr << "Usage -hyeps option needs positive number  -- ignored" << endl;
nh99/hybmcmc.cpp:          cerr << " -hynstep argument must be integer between > 0 --"
nh99/hybmcmc.cpp:            cerr << " -mcrb argument must be integer between 1 and 9 --"
nh99/hybmcmc.cpp:            cerr << "error opening file " << tmpstring << endl;
nh99/hybmcmc.cpp:            cerr << "error reading from file " << tmpstring << endl;
nh99/hybmcmc.cpp:            cerr << "size error reading from " <<  tmpstring << endl;
nh99/hybmcmc.cpp:            cerr << "error reading from file " << tmpstring << endl;
nh99/hybmcmc.cpp:    cerr << "error not implemented" << endl;
nh99/lmnewton.cpp:    cerr << "illegal value for number of steps in limited memory"
nh99/lmnewton.cpp:      cerr << "Usage -crit option needs number  -- ignored" << endl;
nh99/lmnewton.cpp:        cerr << "Usage -crit option needs positive number  -- ignored" << endl;
nh99/lmnewton.cpp:      cerr << "Usage -iprint option needs integer  -- ignored" << endl;
nh99/lmnewton.cpp:    cerr << "illegal value for number of steps in limited memory"
nh99/lmnewton.cpp:      cerr << "Usage -crit option needs number  -- ignored" << endl;
nh99/lmnewton.cpp:        cerr << "Usage -crit option needs positive number  -- ignored" << endl;
nh99/mceval.cpp:    cerr << "Error opening file "
nh99/mod_hess.cpp:        cerr << "error illega value for pvm_manager->mode" << endl;
nh99/mod_hess.cpp:    cerr << "Number of active variables in file mod_hess.rpt is wrong"
nh99/mod_hess.cpp:      cerr << "Error reading line " << i  << " of the hessian"
nh99/mod_hess.cpp:    cerr << "Error reading sscale" 
nh99/mod_hess.cpp:    cerr << "warning -- hessian aprroximation is poor" << endl;
nh99/mod_hess.cpp:      cerr << " Hessian is 0 in row " << i << endl;
nh99/mod_hess.cpp:      cerr << " This means that the derivative if probably identically 0 "
nh99/mod_mc.cpp:        cerr << "Error trying to open file " << tmpstring
nh99/mod_mc.cpp:        cerr << "Incorrect number of independent variables in file"
nh99/mod_mc.cpp:        cerr << "error reading covariance matrix from "
nh99/mod_mc.cpp:          cerr << "error illegal value for pvm_manager->mode" << endl;
nh99/mod_mc.cpp:            cerr << "error illega value for pvm_manager->mode" << endl;
nh99/mod_pmin.cpp:        cerr << "Error in prof_switch " << prof_switch << endl;
nh99/mod_pmin.cpp:        cerr << "error standard dev of likeporf parameter is 0" << endl;
nh99/mod_pmin.cpp:              cerr << "PVM not included with this distribution" << endl;
nh99/mod_pmin.cpp:        cerr << "Error standard dev of likeprof parameter is 0" << endl;
nh99/mod_sd.cpp:      cerr << "Incorrect number of independent variables in file"
nh99/mod_sd.cpp:      cerr << "error reading covariance matrix from model.cov" << endl;
nh99/mod_sd.cpp:          cerr << " tmp_nvar != nvar1 in file " << tmpstring
nh99/mod_sd.cpp:              cerr << "Estimated covariance matrix may not"
nh99/mod_sd.cpp:              cerr << sort(eigenvalues(S)) << endl;
nh99/mod_sd.cpp:          cerr << " tmp_nvar != nvar1 in file " << tmpstring
nh99/mod_sd.cpp:            cerr << "error opening file " << tmpstring << endl;
nh99/mod_sd.cpp:            cerr << "error writing to file " << tmpstring << endl;
nh99/mod_sd.cpp:              cerr << "Estimated covariance matrix may not"
nh99/mod_sd.cpp:              cerr << sort(eigenvalues(BS)) << endl;
nh99/mod_sd.cpp:          cerr << "Estimated covariance matrix may not be positive definite"
nh99/mod_sd.cpp:        cerr << "Estimated covariance matrix may not be positive definite"
nh99/mod_sd.cpp:        cerr << "Estimated covariance matrix may not be positive definite"
nh99/mod_sd.cpp:      cerr << msg << "admodel.tmp" << endl;
nh99/mod_sd.cpp:      cerr << msg << "admodel.tmp" << endl;
nh99/model.cpp:      cerr << " This version of ADMB only supports "
nh99/model.cpp:      cerr << "Error allocating init_bounded_number " << endl
nh99/model.cpp:          cerr << "error reading parameters from binary file "
nh99/model.cpp:          cerr << "error reading parameters from file "
nh99/model.cpp:      cerr << " Error trying to read in model data " << endl;
nh99/model.cpp:      cerr << " This is usual caused by a missing DAT file " << endl;
nh99/model.cpp:          cerr << "error reading parameters from binary file "
nh99/model.cpp:          cerr << "error reading parameters from file "
nh99/model.cpp:        cerr << "grouping flags dimension error" << endl;
nh99/model.cpp:          cerr << "error reading parameters from binary file "
nh99/model.cpp:          cerr << "error reading parameters from file "
nh99/model.cpp:          cerr << "error reading parameters from binary file "
nh99/model.cpp:          cerr << "error reading parameters from file "
nh99/model.cpp:          cerr << "error reading parameters from binary file "
nh99/model.cpp:          cerr << "error reading parameters from file "
nh99/model.cpp:      cerr << "Errorl allocating memory in adlist_ptr" << endl;
nh99/model.cpp:      cerr << "Errorl allocating memory in adlist_ptr" << endl;
nh99/model.cpp:      cerr << "This can't happen in adlist_ptr" << endl;
nh99/model11.cpp:      cerr << "Error reading element " << i << " of the vector "
nh99/model14.cpp:      cerr << "Error in likeprof_params::set_stepsize(double x)"
nh99/model14.cpp:      cerr << "Error in likeprof_params::set_stepnumber(int n)"
nh99/model17.cpp:    cerr << "Error trying to open data input file " <<  s << endl;
nh99/model17.cpp:    cerr << "Error trying to open parameter input file " <<  s << endl;
nh99/model2.cpp:      cerr << "This version of ADMB only supports " << num_stddev_params
nh99/model2.cpp:      cerr << "This version of ADMB only supports " << num_stddev_params
nh99/model21.cpp: cerr << " Error -- void param_init_d3array::set_simulation_bounds"
nh99/model21.cpp: cerr << " Error -- void param_init_number::add_value(BOR_CONST dvector& ndev,BOR_CONST int& ii)"
nh99/model33.cpp:        cerr << "too many command line options in parse command line options" << endl;
nh99/model33.cpp:    cerr "string too long in string_parser" << endl;
nh99/model33.cpp:    cerr << "string too long in string_parser" << endl;
nh99/model33.cpp:         cerr << "maximum number of command lne arguemtns exceeded"
nh99/model43.cpp:        cerr << " error trying to allocate memory in "
nh99/model44.cpp:        cerr << " error trying to allocate memory in "
nh99/model45.cpp:        cerr << " error trying to allocate memory in "
nh99/model46.cpp:        cerr << " error trying to allocate memory in "
nh99/model46.cpp:         //cerr << "Initial value out of bounds -- using halfway value" << endl;
nh99/model47.cpp:        cerr << " error trying to allocate memory in "
nh99/model48.cpp:        cerr << " error trying to allocate memory in "
nh99/model48.cpp:    cerr << "non matching vector bounds in" 
nh99/model48.cpp:    cerr << "non matching vector bounds in" 
nh99/model48.cpp:    cerr << "non matching vector bounds in" 
nh99/model48.cpp:    cerr << "non matching vector bounds in" 
nh99/model48.cpp:    cerr << "non matching vector bounds in" 
nh99/model48.cpp:    cerr << "non matching vector bounds in" 
nh99/model6.cpp:              //cerr << "Initial value out of bounds -- using halfway value" << endl;
nh99/model6.cpp:              //cerr << "Initial value out of bounds -- using halfway value" << endl;
nh99/model6.cpp:              //cerr << "Initial value out of bounds -- using halfway value" << endl;
nh99/model6.cpp:              //cerr << "Initial value out of bounds -- using halfway value" << endl;
nh99/model7.cpp:          cerr << "Wrong number of options to -slave -- must be 1"
nh99/model7.cpp:          cerr << "Wrong number of options to -slavedir -- must be 1"
nh99/model7.cpp:        cerr << "Invalid input data command line option"
nh99/model7.cpp:        cerr << "Invalid input data command line option"
nh99/model7.cpp:    cerr << "Error trying to open data input file "
nh99/model7.cpp:      cerr << "Error trying to open data input file "
nh99/model7.cpp:        cerr << "Invalid input parameter file command line option"
nh99/model7.cpp:	  cerr << "Error trying to open binary inoput par file "
nh99/model7.cpp:        cerr << "Invalid input parameter file command line option"
nh99/model7.cpp:	  cerr << "Error trying to open ascii inoput par file "
nh99/model7.cpp~:          cerr << "Wrong number of options to -slave -- must be 1"
nh99/model7.cpp~:          cerr << "Wrong number of options to -slavedir -- must be 1"
nh99/model7.cpp~:        cerr << "Invalid input data command line option"
nh99/model7.cpp~:        cerr << "Invalid input data command line option"
nh99/model7.cpp~:    cerr << "Error trying to open data input file "
nh99/model7.cpp~:      cerr << "Error trying to open data input file "
nh99/model7.cpp~:        cerr << "Invalid input parameter file command line option"
nh99/model7.cpp~:	  cerr << "Error trying to open binary inoput par file "
nh99/model7.cpp~:        cerr << "Invalid input parameter file command line option"
nh99/model7.cpp~:	  cerr << "Error trying to open ascii inoput par file "
nh99/modhdet.cpp:    cerr << "Error opening file admodel.hes" << endl;
nh99/modhdet.cpp:      cerr << "Error reading the hessian from file admodel.hes" << endl;
nh99/modhdet.cpp:    cerr << "Error restricted Hessian is not positive definite" << endl;
nh99/modspmin.cpp:        cerr << "Illegal value for ad_comm::pvm_manager->mode"
nh99/modspmin.cpp:        cerr << "Wrong number of options to -mafxn -- must be 1"
nh99/modspmin.cpp:        cerr << "Wrong number of options to -crit -- must be 1"
nh99/modspmin.cpp:                cerr << "PVM not included with this distribution" << endl;
nh99/modspmin.cpp:                  cerr << "error illega value for pvm_manager->mode" << endl;
nh99/modspmin.cpp:                cerr << "PVM not included with this distribution" << endl;
nh99/modspmin.cpp:                  cerr << "error illega value for pvm_manager->mode" << endl;
nh99/modspmin.cpp:                cerr << "PVM not included with this distribution" << endl;
nh99/modspmin.cpp:                  cerr << " Invalid option following command line option -sob -- "
nh99/modspmin.cpp:                cerr << "mcmc and sob option not supported you must purchase"
nh99/modspmin.cpp:                cerr << "mcmc and sob option not supported you must purchase"
nh99/modspmin.cpp:          cerr << " Invalid option following command line option -mcmc -- "
nh99/modspmin.cpp:            cerr << "Invalid argument to option -mcmult" << endl;
nh99/modspmin.cpp:            cerr << " Invalid option following command line option -mcseed -- "
nh99/modspmin.cpp:        cerr << "mcmc option not supported you must purchase"
nh99/modspmin.cpp:        cerr << "mcmc option not supported you must purchase"
nh99/modspmin.cpp:          cerr << " Invalid option following command line option -mcmc -- "
nh99/modspmin.cpp:            cerr << "Invalid argument to option -mcmult" << endl;
nh99/modspmin.cpp:            cerr << " Invalid option following command line option -mcseed -- "
nh99/modspmin.cpp:        cerr << "mcmc option not supported you must purchase"
nh99/modspmin.cpp:        cerr << "mcmc option not supported you must purchase"
nh99/newmodm2.cpp:    cerr << "Error opening file admodel.hes" << endl;
nh99/newmodm2.cpp:      cerr << "Error reading the hessian from file admodel.hes" << endl;
nh99/newmodm2.cpp:    cerr << "Error restricted Hessian is not positive definite" << endl;
nh99/newmodm4.cpp:    cerr << "Error opening file " << (char*) tmpstring
nh99/newmodm4.cpp:      cerr << "Error reading the hessian from file admodel.hes" << endl;
nh99/newmodm4.cpp:      cerr << "sgn = " << sgn << endl;
nh99/newmodm4.cpp:      cerr << "Error Hessian is not positive definite" << endl;
nh99/newmodm5.cpp:      cerr << "Error allocating memory for lapprox" << endl;
nh99/newmodm5.cpp:        cerr << "this can't happen" << endl;
nh99/newmodmn.cpp:          cerr << " xdist(" << ip << "," << j << ") too small" << endl;
nh99/nmonte.cpp:    cerr << "arugument of ln_normal_tail_left must be < -2.0 you have "
nh99/nmonte.cpp:    cerr << "arugument of ln_normal_tail_right must be > 2.0 you have "
nh99/nmonte.cpp:    cerr << "Illegal argument to inv_cumd_norm = " << x << endl;
nh99/nmonte.cpp:    cerr << "Illegal argument to inv_cumd_norm = " << x << endl;
nh99/nmonte.cpp:    cerr << "Illegal argument to inv_cumd_norm = " << x << endl;
nh99/nnewmod2.cpp:    cerr << "Error opening file admodel.hes" << endl;
nh99/nnewmod2.cpp:      cerr << "Error reading the hessian from file admodel.hes" << endl;
nh99/nnewmod2.cpp:    cerr << "Error restricted Hessian is not positive definite" << endl;
nh99/paral3re.cpp:      cerr << "Usage -iprint option needs integer  -- ignored" << endl;
nh99/paral3re.cpp:      cerr << "Usage -iprint option needs integer  -- ignored" << endl;
nh99/paral3re.cpp:      cerr << "failed sanity check in "
nh99/paral5re.cpp:      cerr << "Usage -iprint option needs integer  -- ignored" << endl;
nh99/paral5re.cpp:      cerr << "Usage -iprint option needs integer  -- ignored" << endl;
nh99/paral5re.cpp:      cerr << "failed sanity check in "
nh99/paralle2.cpp:      cerr << "Usage -iprint option needs integer  -- ignored" << endl;
nh99/paralle2.cpp:      cerr << "Usage -iprint option needs integer  -- ignored" << endl;
nh99/parallel.cpp:    cerr << "error loading pvm library" << endl;
nh99/parallel.cpp:    cerr << "error trying to get configuration of pvm (virtual machine)" << endl;
nh99/parallel.cpp:      cerr << " PVM Daemon not responing -- maybe it is not started" << endl;
nh99/parallel.cpp:      cerr << "Error in pvm_catchout" << endl;
nh99/parallel.cpp:        cerr << "Wrong number of options to -exec -- must be 1"
nh99/parallel.cpp:    cerr << "index value of " << i 
nh99/parallel.cpp:      cerr << "Wrong number of options to -slavedir -- must be 1"
nh99/parallel.cpp:      cerr << "Error -mcmc2 option not implemented for parallel processing"
nh99/parallel.cpp:      cerr << "Wrong number of options to -mcmc -- must be 1"
nh99/parallel.cpp:    cerr << "need to increase the number of slave args" <<endl;
nh99/prmonte.cpp:      cerr << "dd <=0" << endl;
nh99/prmonte.cpp:      cerr << "dd <=0" << endl;
nh99/profmin.cpp:        cerr << "Error in prof_flag " << prof_flag << endl;
nh99/profmin.cpp:            cerr << "Error in ireturn " << ireturn << endl;
nh99/pvmvar1.cpp:        cerr << "Error in pvm_int::assign  validindex bounds must be 0 "
nh99/pvmvar1.cpp:        cerr << "Error in pvm_number::assign  valid index bounds must be 0 "
nh99/pvmvar1.cpp:      cerr << " This version of ADMB only supports "
nh99/randeff.cpp:    cerr << "illegal value for number of steps in limited memory"
nh99/randeff.cpp:      cerr << "Usage -crit option needs number  -- ignored" << endl;
nh99/randeff.cpp:        cerr << "Usage -crit option needs positive number  -- ignored" << endl;
nh99/shared.cpp:    cerr << " Error -- shared_size_count not defined for this class"
nh99/shared.cpp:    cerr << " Error -- shared_scaled_set_value_inv not defined for this class"
nh99/shared.cpp:    cerr << " Error -- shared_scaled_set_value_inv not defined for this class"
nh99/shared.cpp:    cerr << " setshare not yet defined for this class " << endl;
nh99/shared.cpp:        cerr << "error " << endl;
nh99/shared.cpp:              cerr << "Sanity error in grouping/active flags"
nh99/shared.cpp:        cerr << "error " << endl;
nh99/shared.cpp:        cerr << "sanity error" << endl;
nh99/shared.cpp:          cerr << "sanity error" << endl;
nh99/shared.cpp:      cerr << "Error" << endl;
nh99/shared1.cpp:          cerr << "sanity error" << endl;
nh99/shared1.cpp:      cerr << "Error" << endl;
nh99/spcomm.cpp:        cerr << "Error allocated dvector of the wrong size in"
nh99/spcomm.cpp:    cerr << " couldn't read from splus temporary file" << endl;
nh99/spcomm.cpp:        cerr << "Error allocated dvector of the wrong size in"
nh99/spcomm.cpp:    cerr << " couldn't read from splus temporary file" << endl;
nh99/spcomm.cpp:        cerr << "Error state before reading dmatrix from temporary file" 
nh99/spcomm.cpp:        cerr << "Error --  allocated dimatrix is  the wrong size in"
nh99/spcomm.cpp:    cerr << " couldn't read from splus temporary file" << endl;
nh99/spcomm.cpp:        cerr << "Error state before reading dmatrix from temporary file" 
nh99/spcomm.cpp:        cerr << "Error --  allocated dimatrix is  the wrong size in"
nh99/spcomm.cpp:    cerr << " couldn't read from splus temporary file" << endl;
nh99/spcomm.cpp:    cerr << " couldn't read from splus temporary file" << endl;
nh99/spcomm.cpp:    cerr << " DdeInitialize() was successful" << endl;
nh99/spcomm.cpp:    cerr << str1 << "DMLERR_DLL_USAGE" << endl;
nh99/spcomm.cpp:    cerr << str1 << "DMLERR_INVALIDPARAMETER" << endl;
nh99/spcomm.cpp:    cerr << str1 << "DMLERR_SYS_ERROR"  << endl;
nh99/spcomm.cpp:    cerr << str1 << "Error is unidentified" << endl;
Binary file nh99/tpl2cpp matches
nh99/tpl2cpp-winflex.c:                 "  {\n    cerr << \"error trying to open report file\" "
nh99/tpl2cpp.c:                 "  {\n    cerr << \"error trying to open report file\" "
nh99/tpl2cpp.lex:                 "  {\n    cerr << \"error trying to open report file\" "
nh99/xmodelm3.cpp:           cerr << "option -mm MINI_MAX not defined " << endl;
nh99/xmodelm3.cpp:        cerr << "Usage -maxph option needs integer  -- ignored" << endl;
nh99/xmodelm3.cpp:          cerr << "Usage -maxph option needs positive integer  -- ignored" << endl;
nh99/xmodelm3.cpp:        cerr << "Usage -ndv option needs integer  -- ignored" << endl;
nh99/xmodelm3.cpp:          cerr << "Usage -ndv option needs positive integer  -- ignored" << endl;
nh99/xmodelm3.cpp:        cerr << "Usage -maxph option needs integer  -- ignored" << endl;
nh99/xmodelm3.cpp:          cerr << "Usage -maxfn option needs positive integer  -- ignored" << endl;
nh99/xmodelm3.cpp:        cerr << "Usage -crit option needs number  -- ignored" << endl;
nh99/xmodelm3.cpp:          cerr << "Usage -crit option needs positive number  -- ignored" << endl;
nh99/xmodelm3.cpp:        cerr << "Usage -bw option needs number  -- ignored" << endl;
nh99/xmodelm3.cpp:          cerr << "Usage -bw option needs positive number  -- ignored" << endl;
nh99/xmodelm3.cpp:        cerr << " Invalid option following command line option -phase -- " 
nh99/xmodelm3.cpp:        cerr << "Error -- no active parameters. There must be at least 1" 
nh99/xmodelm3.cpp:          cerr << "couldn't open file vector" << endl;
nh99/xmodelm3.cpp:            cerr << "couldn't read vector" << endl;
nh99/xmodelm3.cpp:          cerr << "At present you can not use the -lmn option for the outer"
nh99/xmodelm3.cpp:          cerr << "Usage -lmn option needs integer  -- set to default 10" << endl;
nh99/xmodelm3.cpp:            cerr << "Usage -lmn option needs positive integer  -- set to defalt 10" << endl;
nh99/xmodelm3.cpp:                  cerr << "Usage -lmn option needs integer"
nh99/xmodelm3.cpp:                    cerr << "Usage -lmn option needs positive integer "
nh99/xmodelm3.cpp:            cerr << "error illega value for pvm_manager->mode" << endl;
nh99/xmodelm3.cpp:            cerr << "error illega value for pvm_manager->mode" << endl;
nh99/xmodelm3.cpp:            cerr << "PVM not included with this distribution" << endl;
nh99/xmodelm3.cpp:            cerr << "Illegal value for ad_comm::pvm_manager->mode" << endl;
nh99/xmodelm3.cpp:        cerr << error_message << endl;
nh99/xmodelm4.cpp:    cerr << "Illegal value of " << n 
nh99/xmodelm4.cpp:      cerr << "Usage -iprint option needs integer  -- ignored" << endl;
nh99/xmodelm4.cpp:      cerr << "Usage -iprint option needs integer  -- ignored" << endl;
nh99/xxmcmc.cpp:    cerr << " You must declare at least one object of type sdreport "
nh99/xxmcmc.cpp:            cerr << " -mcrb argument must be integer between 1 and 9 --"
nh99/xxmcmc.cpp:            cerr << "error opening file " << tmpstring << endl;
nh99/xxmcmc.cpp:            cerr << "error reading from file " << tmpstring << endl;
nh99/xxmcmc.cpp:            cerr << "size error reading from " <<  tmpstring << endl;
nh99/xxmcmc.cpp:            cerr << "error reading from file " << tmpstring << endl;
nh99/xxmcmc.cpp:              cerr << "Error trying to open mcmc par input file "
nh99/xxmcmc.cpp:              cerr << "Error reading from mcmc par input file "
nh99/xxmcmc.cpp:            cerr << "Illegal option with -mcpin" << endl;
nh99/xxmcmc.cpp:            cerr << " Invalid option following command line option -mcball -- "
nh99/xxmcmc.cpp:          cerr << " Invalid option following command line option -mcsave -- " 
nh99/xxmcmc.cpp:                cerr << "Error trying to open file" << 
nh99/xxmcmc.cpp:                cerr << " I am starting a new file " << endl;
nh99/xxmcmc.cpp:                  cerr << "wrong number of independent variables in" <<
nh99/xxmcmc.cpp:                  cerr << " I am starting a new file " << endl;
nh99/xxmcmc.cpp:            cerr << "Error trying to open file" << 
nh99/xxmcmc.cpp:            cerr << "Invalid argument to option -mcgrope" << endl;
nh99/xxmcmc.cpp:    cerr << "Error opening file " << infile_name << endl;
nh99/xxmcmc.cpp:    cerr << "wromng number of indepdendent variables in routine"
nh99/xxmcmc.cpp:    cerr << "Error reading from file " << infile_name << endl;
nh99/xxmcmc.cpp:    cerr << "wrong number of independent variables in file"
nh99/xxmcmc.cpp:    cerr << "Error trying to open file " 
nh99/xxmcmc.cpp:    cerr << "Error trying to read number of simulations from file " 
nh99/xxmcmc.cpp:      cerr << "Error trying to read data from file " 
nh99/xxmcmc.cpp:    cerr << "Error trying to open file " << tmpstring
nh99/xxmcmc.cpp:    cerr << "Incorrect number of independent variables in file"
nh99/xxmcmc.cpp:    cerr << "error reading covariance matrix from " << tmpstring
nh99/xxmcmc.cpp:    cerr << "error reading old_hybrid_bounded_flag from " << tmpstring
nh99/xxmcmc.cpp:    cerr << "error reading sscale from " << tmpstring
nh99/xxmcmc.cpp:    cerr << "Error trying to open file " << tmpstring
nh99/xxmcmc.cpp:    cerr << "Incorrect number of independent variables in file"
nh99/xxmcmc.cpp:    cerr << "error reading covariance matrix from model.cov" << endl;
nh99/xxmcmc.cpp:    cerr << "Error trying to open file " << tmpstring
nh99/xxmcmc.cpp:    cerr << "Incorrect number of independent variables in file"
nh99/xxmcmc.cpp:    cerr << "error reading covariance matrix from model.cov" << endl;
nh99/xxmcmc.cpp:    cerr << "Error trying to open file " << tmpstring
nh99/xxmcmc.cpp:    cerr << "error reading covariance matrix from " << tmpstring
nh99/xxmcmc.cpp:    cerr << "error reading old_hybrid_bounded_flag from " << tmpstring
nh99/xxmcmc.cpp:    cerr << "error reading sscale from " << tmpstring
nh99/xxmcmc2.cpp:    cerr << " You must declare at least one object of type sdreport "
nh99/xxmcmc2.cpp:            cerr << " -mcrb argument must be integer between 1 and 9 --"
nh99/xxmcmc2.cpp:              cerr << "Error trying to open mcmc par input file "
nh99/xxmcmc2.cpp:              cerr << "Error reading from mcmc par input file "
nh99/xxmcmc2.cpp:            cerr << "Illegal option with -mcpin" << endl;
nh99/xxmcmc2.cpp:            cerr << " Invalid option following command line option -mcball -- "
nh99/xxmcmc2.cpp:          cerr << " Invalid option following command line option -mcsave -- " 
nh99/xxmcmc2.cpp:                cerr << "Error trying to open file" << 
nh99/xxmcmc2.cpp:                cerr << " I am starting a new file " << endl;
nh99/xxmcmc2.cpp:                  cerr << "wrong number of independent variables in" <<
nh99/xxmcmc2.cpp:                  cerr << " I am starting a new file " << endl;
nh99/xxmcmc2.cpp:            cerr << "Error trying to open file" << 
nh99/xxmcmc2.cpp:            cerr << "Invalid argument to option -mcgrope" << endl;
sparse/adoption.hpp:          cerr << "Unrecognized command line option " << tmp << endl;
sparse/adoption.hpp:          cerr << "Unrecognized command line option " << tmp << endl;
sparse/adoption.hpp:            cerr << "Not enough arguments passed to command line option "
sparse/adoption.hpp:              cerr << "Not enough arguments passed to command line option "
sparse/cifstrem.cpp:    cerr << "\n** error reading file '" << file_name
sparse/cifstrem.cpp:      cerr << "   " << msg << endl;
sparse/cifstrem.cpp:      cerr << "   end of file" << endl;
sparse/hs_sparse.cpp:              cerr << "!!!! trace_log: zero diagonal element " << endl;
sparse/hs_sparse.cpp:              cerr << "!!!! trace_log: zero diagonal element " << endl;
sparse/hs_sparse.cpp:              cerr << "Error unhandled case in chol" << endl;
sparse/hs_sparse.cpp:              cerr << "Error unhandled case in chol" << endl;
sparse/hs_sparse.cpp:          cerr << "Error unhandled case in chol" << endl;
sparse/hs_sparse.cpp:          cerr << "Error unhandled case in chol" << endl;
sparse/hs_sparse.cpp:    cerr << "Error matrix not positrive definite in chol" << endl;
sparse/hs_sparse.cpp:    cerr << "Error matrix not positive definite in chol" << endl;
sparse/hs_sparse.cpp:    cerr << "Error matrix not positive definite in chol" << endl;
sparse/hs_sparse.cpp:    cerr << "Error matrix not positrive definite in chol" << endl;
sparse/hs_sparse.cpp:    cerr << "Error matrix not positrive definite in chol" << endl;
sparse/hs_sparse.cpp: //               cerr << "Error unhandled case in chol" << endl;
sparse/hs_sparse.cpp: //               cerr << "Error unhandled case in chol" << endl;
sparse/hs_sparse.cpp: //           cerr << "Error unhandled case in chol" << endl;
sparse/hs_sparse.cpp: //           cerr << "Error unhandled case in chol" << endl;
sparse/hs_sparse.cpp:     cerr << "error" << endl;
sparse/hs_sparse.cpp:     cerr << "error" << endl;
sparse/hs_sparse.cpp:     cerr << "error" << endl;
sparse/hs_sparse.cpp:              cerr << "Error unhandled case in chol" << endl;
sparse/hs_sparse.cpp:              cerr << "Error unhandled case in chol" << endl;
sparse/hs_sparse.cpp:          cerr << "Error unhandled case in chol" << endl;
sparse/hs_sparse.cpp:          cerr << "Error unhandled case in chol" << endl;
sparse/string.cpp:    cerr << "Error allocating memory for adstring" << endl;
sparse/string1.cpp:    cerr << "First index out of bounds in adstring::operator () (int,int)\n"
sparse/string1.cpp:    cerr << "Second index out of bounds in adstring::operator () (int,int)\n"
sparse/string1.cpp:    cerr << "First index must be less than or equal to second index in"
sparse/string1.cpp:    cerr << "First index out of bounds in adstring::operator () (int,int)\n"
sparse/string1.cpp:    cerr << "Second index out of bounds in adstring::operator () (int,int)\n"
sparse/string1.cpp:    cerr << "First index must be less than or equal to second index in"
sparse/string1.cpp:    cerr << "Index out of bounds in adstring::operator () (const int)\n"
sparse/string1.cpp:    cerr << "Index out of bounds in adstring::operator () (const int)\n"
sparse/string1.cpp:    cerr << "Index out of bounds in adstring::operator () (const int)\n"
sparse/string1.cpp:    cerr << "Index out of bounds in adstring::operator () (const int)\n"
sparse/string2.cpp:    cerr << " Error in adstring::adstring(int lb,int ub) : clist()\n"
sparse/string4.cpp:    cerr << "Error -- Maximum adstring length exceeded in"
sparse/string4.cpp:      cerr << "Error -- Maximum adstring length exceeded in"
sparse/string5.cpp:      cerr << " Error in adstring_array(int min,int max) --"
sparse/string5.cpp:      cerr << "Error allocating memory in adstring_array" << endl;
sparse/string5.cpp:      cerr << "Error allocating memory in adstring_array" << endl;
sparse/string5.cpp:      cerr << "Error -- trying to acess unallocated adstring array"
sparse/string5.cpp:      cerr << "Error index too low in adstring& operator [] (int i)" << endl;
sparse/string5.cpp:      cerr << "value was " << i << " minimum valid index is "
sparse/string5.cpp:      cerr << "Error index too high in adstring& operator [] (int i)" << endl;
sparse/string5.cpp:      cerr << "value was " << i << " maximum valid index is "
sparse/string5.cpp:      cerr << "Error -- trying to acess unallocated adstring array"
sparse/string5.cpp:      cerr << "Error index too low in adstring& operator [] (int i)" << endl;
sparse/string5.cpp:      cerr << "value was " << i << " minimum valid index is "
sparse/string5.cpp:      cerr << "Error index too high in adstring& operator [] (int i)" << endl;
sparse/string5.cpp:      cerr << "value was " << i << " maximum valid index is "
sparse/string5.cpp:      cerr << "Error -- trying to acess unallocated adstring array"
sparse/string5.cpp:      cerr << "Error index too low in adstring& operator [] (int i)" << endl;
sparse/string5.cpp:      cerr << "value was " << i << " minimum valid index is "
sparse/string5.cpp:      cerr << "Error index too high in adstring& operator [] (int i)" << endl;
sparse/string5.cpp:      cerr << "value was " << i << " maximum valid index is "
sparse/string5.cpp:      cerr << "Error -- trying to acess unallocated adstring array"
sparse/string5.cpp:      cerr << "Error index too low in adstring& operator [] (int i)" << endl;
sparse/string5.cpp:      cerr << "value was " << i << " minimum valid index is "
sparse/string5.cpp:      cerr << "Error index too high in adstring& operator [] (int i)" << endl;
sparse/string5.cpp:      cerr << "value was " << i << " maximum valid index is "
sparse/string5a.cpp:      cerr << "Error allocating memory in adstring_array" << endl;
sparse/string5a.cpp:      cerr << "Error allocating memory in adstring_array +=" << endl;
sparse/string5a.cpp:      cerr << "Error allocating memory in adstring_array" << endl;
sparse/string5a.cpp:      cerr << "Error allocating memory in adstring_array +=" << endl;
sparse/tescl.h:    cerr << " Error in adstring::adstring(int lb,int ub) : clist()\n"
tools99/adoption.hpp:          cerr << "Unrecognized command line option " << tmp << endl;
tools99/adoption.hpp:          cerr << "Unrecognized command line option " << tmp << endl;
tools99/adoption.hpp:            cerr << "Not enough arguments passed to command line option "
tools99/adoption.hpp:              cerr << "Not enough arguments passed to command line option "
tools99/cifstrem.cpp:    cerr << "\n** error reading file '" << file_name
tools99/cifstrem.cpp:      cerr << "   " << msg << endl;
tools99/cifstrem.cpp:      cerr << "   end of file" << endl;
tools99/string.cpp:    cerr << "Error allocating memory for adstring" << endl;
tools99/string1.cpp:    cerr << "First index out of bounds in adstring::operator () (int,int)\n"
tools99/string1.cpp:    cerr << "Second index out of bounds in adstring::operator () (int,int)\n"
tools99/string1.cpp:    cerr << "First index must be less than or equal to second index in"
tools99/string1.cpp:    cerr << "First index out of bounds in adstring::operator () (int,int)\n"
tools99/string1.cpp:    cerr << "Second index out of bounds in adstring::operator () (int,int)\n"
tools99/string1.cpp:    cerr << "First index must be less than or equal to second index in"
tools99/string1.cpp:    cerr << "Index out of bounds in adstring::operator () (const int)\n"
tools99/string1.cpp:    cerr << "Index out of bounds in adstring::operator () (const int)\n"
tools99/string1.cpp:    cerr << "Index out of bounds in adstring::operator () (const int)\n"
tools99/string1.cpp:    cerr << "Index out of bounds in adstring::operator () (const int)\n"
tools99/string2.cpp:    cerr << " Error in adstring::adstring(int lb,int ub) : clist()\n"
tools99/string4.cpp:    cerr << "Error -- Maximum adstring length exceeded in"
tools99/string4.cpp:      cerr << "Error -- Maximum adstring length exceeded in"
tools99/string5.cpp:      cerr << " Error in adstring_array(int min,int max) --"
tools99/string5.cpp:      cerr << "Error allocating memory in adstring_array" << endl;
tools99/string5.cpp:      cerr << "Error allocating memory in adstring_array" << endl;
tools99/string5.cpp:      cerr << "Error -- trying to acess unallocated adstring array"
tools99/string5.cpp:      cerr << "Error index too low in adstring& operator [] (int i)" << endl;
tools99/string5.cpp:      cerr << "value was " << i << " minimum valid index is "
tools99/string5.cpp:      cerr << "Error index too high in adstring& operator [] (int i)" << endl;
tools99/string5.cpp:      cerr << "value was " << i << " maximum valid index is "
tools99/string5.cpp:      cerr << "Error -- trying to acess unallocated adstring array"
tools99/string5.cpp:      cerr << "Error index too low in adstring& operator [] (int i)" << endl;
tools99/string5.cpp:      cerr << "value was " << i << " minimum valid index is "
tools99/string5.cpp:      cerr << "Error index too high in adstring& operator [] (int i)" << endl;
tools99/string5.cpp:      cerr << "value was " << i << " maximum valid index is "
tools99/string5.cpp:      cerr << "Error -- trying to acess unallocated adstring array"
tools99/string5.cpp:      cerr << "Error index too low in adstring& operator [] (int i)" << endl;
tools99/string5.cpp:      cerr << "value was " << i << " minimum valid index is "
tools99/string5.cpp:      cerr << "Error index too high in adstring& operator [] (int i)" << endl;
tools99/string5.cpp:      cerr << "value was " << i << " maximum valid index is "
tools99/string5.cpp:      cerr << "Error -- trying to acess unallocated adstring array"
tools99/string5.cpp:      cerr << "Error index too low in adstring& operator [] (int i)" << endl;
tools99/string5.cpp:      cerr << "value was " << i << " minimum valid index is "
tools99/string5.cpp:      cerr << "Error index too high in adstring& operator [] (int i)" << endl;
tools99/string5.cpp:      cerr << "value was " << i << " maximum valid index is "
tools99/string5a.cpp:      cerr << "Error allocating memory in adstring_array" << endl;
tools99/string5a.cpp:      cerr << "Error allocating memory in adstring_array +=" << endl;
tools99/string5a.cpp:      cerr << "Error allocating memory in adstring_array" << endl;
tools99/string5a.cpp:      cerr << "Error allocating memory in adstring_array +=" << endl;
tools99/tescl.h:    cerr << " Error in adstring::adstring(int lb,int ub) : clist()\n"
